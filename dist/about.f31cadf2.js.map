{"mappings":"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","sources":["<anon>","node_modules/nsw-design-system/dist/js/main.js"],"sourcesContent":["(function(global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define('NSW', [\n        'exports'\n    ], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.NSW = {}));\n})(this, function(exports1) {\n    'use strict';\n    // Unique ID creation requires a high quality random # generator. In the browser we therefore\n    // require the crypto API and do not support built-in fallback to lower quality random number\n    // generators (like Math.random()).\n    let getRandomValues;\n    const rnds8 = new Uint8Array(16);\n    function rng() {\n        // lazy load so that environments that need to polyfill have a chance to do so\n        if (!getRandomValues) {\n            // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n            getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n            if (!getRandomValues) throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        return getRandomValues(rnds8);\n    }\n    /**\n   * Convert array of 16 byte values to UUID string format of the form:\n   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n   */ const byteToHex = [];\n    for(let i = 0; i < 256; ++i)byteToHex.push((i + 0x100).toString(16).slice(1));\n    function unsafeStringify(arr, offset = 0) {\n        // Note: Be careful editing this code!  It's been tuned for performance\n        // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n        return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n    }\n    const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n    var native = {\n        randomUUID\n    };\n    function v4(options, buf, offset) {\n        if (native.randomUUID && !buf && !options) return native.randomUUID();\n        options = options || {};\n        const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n        rnds[6] = rnds[6] & 0x0f | 0x40;\n        rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n        if (buf) {\n            offset = offset || 0;\n            for(let i = 0; i < 16; ++i)buf[offset + i] = rnds[i];\n            return buf;\n        }\n        return unsafeStringify(rnds);\n    }\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    const uniqueId = (prefix)=>{\n        const prefixValue = prefix === undefined ? 'nsw' : prefix;\n        const uuid = v4();\n        return `${prefixValue}-${uuid}`;\n    };\n    const focusObjectGenerator = (arr)=>{\n        const focusableElements = {\n            all: arr,\n            first: arr[0],\n            last: arr[arr.length - 1],\n            length: arr.length\n        };\n        return focusableElements;\n    };\n    const getFocusableElementBySelector = (id, selectorArr)=>{\n        const elements = [];\n        for(let i = 0; i < selectorArr.length; i += 1)elements.push([].slice.call(document.querySelectorAll(`#${id} ${selectorArr[i]}`)));\n        const mergedElementArr = [].concat(...elements);\n        return focusObjectGenerator(mergedElementArr);\n    };\n    const trapTabKey = (event, focusObject)=>{\n        const { activeElement } = document;\n        const focusableElement = focusObject;\n        if (event.keyCode !== 9) return false;\n        if (focusableElement.length === 1) event.preventDefault();\n        else if (event.shiftKey && activeElement === focusableElement.first) {\n            focusableElement.last.focus();\n            event.preventDefault();\n        } else if (!event.shiftKey && activeElement === focusableElement.last) {\n            focusableElement.first.focus();\n            event.preventDefault();\n        }\n        return true;\n    };\n    const whichTransitionEvent = ()=>{\n        const el = document.createElement('fakeelement');\n        const transitions = {\n            transition: 'transitionend',\n            OTransition: 'oTransitionEnd',\n            MozTransition: 'transitionend',\n            WebkitTransition: 'webkitTransitionEnd'\n        };\n        const found = Object.keys(transitions).filter((key)=>el.style[key] !== undefined);\n        return transitions[found[0]];\n    };\n    function createButtons(_ref) {\n        let { textContent } = _ref;\n        const fragment = document.createDocumentFragment();\n        const button = document.createElement('button');\n        const uID = uniqueId('accordion');\n        button.textContent = textContent;\n        button.setAttribute('type', 'button');\n        button.setAttribute('aria-expanded', 'false');\n        button.setAttribute('aria-controls', uID);\n        button.classList.add('nsw-accordion__button');\n        button.insertAdjacentHTML('beforeend', `\n  <span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">keyboard_arrow_down</span>\n  `);\n        fragment.appendChild(button);\n        return fragment;\n    }\n    class Accordion {\n        constructor(element){\n            this.element = element;\n            const [expandAll, collapseAll] = Array.from(this.element.querySelectorAll('.nsw-accordion__toggle button'));\n            this.accordionHeadingClass = '.nsw-accordion__title';\n            this.headings = this.element.querySelectorAll(this.accordionHeadingClass);\n            this.expandAllBtn = expandAll;\n            this.collapseAllBtn = collapseAll;\n            this.isExpandedOnLoad = this.element.querySelectorAll('.nsw-accordion__open');\n            this.buttons = [];\n            this.content = [];\n            this.toggleEvent = (event)=>this.toggle(event);\n            this.expandAllEvent = (event)=>this.expandAll(event);\n            this.collapseAllEvent = (event)=>this.collapseAll(event);\n        }\n        init() {\n            this.setUpDom();\n            this.controls();\n        }\n        setUpDom() {\n            this.element.classList.add('ready');\n            if (this.collapseAllBtn) this.collapseAllBtn.disabled = true;\n            this.headings.forEach((heading)=>{\n                const headingElem = heading;\n                const contentElem = heading.nextElementSibling;\n                const buttonFrag = createButtons(heading);\n                headingElem.textContent = '';\n                headingElem.appendChild(buttonFrag);\n                const buttonElem = headingElem.getElementsByTagName('button')[0];\n                if (contentElem) {\n                    contentElem.id = buttonElem.getAttribute('aria-controls');\n                    contentElem.hidden = 'until-found';\n                    this.content.push(contentElem);\n                }\n                this.buttons.push(buttonElem);\n            });\n            if (this.isExpandedOnLoad) this.isExpandedOnLoad.forEach((element)=>{\n                const openButton = element.querySelector('button');\n                this.setAccordionState(openButton, 'open');\n            });\n        }\n        controls() {\n            this.buttons.forEach((element)=>{\n                element.addEventListener('click', this.toggleEvent, false);\n                element.addEventListener('beforematch', this.toggleEvent, false);\n            });\n            if (this.expandAllBtn && this.collapseAllBtn) {\n                this.expandAllBtn.addEventListener('click', this.expandAllEvent, false);\n                this.collapseAllBtn.addEventListener('click', this.collapseAllEvent, false);\n            }\n        }\n        getTargetContent(element) {\n            const currentIndex = this.buttons.indexOf(element);\n            return this.content[currentIndex];\n        }\n        setAccordionState(element, state) {\n            const targetContent = this.getTargetContent(element);\n            if (state === 'open') {\n                element.classList.add('active');\n                element.setAttribute('aria-expanded', 'true');\n                targetContent.hidden = false;\n            } else if (state === 'close') {\n                element.classList.remove('active');\n                element.setAttribute('aria-expanded', 'false');\n                targetContent.hidden = 'until-found';\n            }\n        }\n        toggle(event) {\n            const { currentTarget } = event;\n            const targetContent = this.getTargetContent(currentTarget);\n            if (targetContent) {\n                const isHidden = targetContent.hidden;\n                if (isHidden === true || isHidden === 'until-found') this.setAccordionState(currentTarget, 'open');\n                else this.setAccordionState(currentTarget, 'close');\n                if (this.expandAllBtn && this.collapseAllBtn) {\n                    this.expandAllBtn.disabled = this.content.every((item)=>item.hidden === false);\n                    this.collapseAllBtn.disabled = this.content.every((item)=>item.hidden === 'until-found');\n                }\n            }\n        }\n        expandAll() {\n            this.buttons.forEach((element)=>{\n                this.setAccordionState(element, 'open');\n            });\n            this.expandAllBtn.disabled = true;\n            this.collapseAllBtn.disabled = false;\n        }\n        collapseAll() {\n            this.buttons.forEach((element)=>{\n                this.setAccordionState(element, 'close');\n            });\n            this.expandAllBtn.disabled = false;\n            this.collapseAllBtn.disabled = true;\n        }\n    }\n    class BackTop {\n        constructor(element){\n            this.element = element;\n            this.dataElement = this.element.getAttribute('data-element');\n            this.scrollOffset = this.element.getAttribute('data-offset');\n            this.text = false;\n            this.icon = false;\n            this.scrollElement = this.dataElement ? document.querySelector(this.dataElement) : window;\n            this.scrollPosition = 0;\n            this.width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n            this.height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n            this.condition = false;\n        }\n        init() {\n            this.createButton();\n            this.element.addEventListener('click', (event)=>{\n                event.preventDefault();\n                if (!window.requestAnimationFrame) this.scrollElement.scrollTo(0, 0);\n                else if (this.dataElement) this.scrollElement.scrollTo({\n                    top: 0,\n                    behavior: 'smooth'\n                });\n                else window.scrollTo({\n                    top: 0,\n                    behavior: 'smooth'\n                });\n            });\n            this.checkBackToTop();\n            const debounceEvent = this.debounce(this.checkBackToTop);\n            this.scrollElement.addEventListener('scroll', ()=>{\n                debounceEvent();\n            });\n            const debounceResize = this.debounce(this.resizeHandler);\n            window.addEventListener('resize', ()=>{\n                debounceResize();\n            });\n        }\n        createButton() {\n            const textSpan = this.constructor.createElement('span');\n            const iconSpan = this.constructor.createElement('span', [\n                'material-icons',\n                'nsw-material-icons'\n            ], {\n                title: 'Back to top',\n                focusable: 'false',\n                'aria-hidden': 'true'\n            });\n            this.element.append(textSpan, iconSpan);\n            this.text = this.element.querySelector('span:not(.material-icons)');\n            this.icon = this.element.querySelector('span.material-icons');\n            this.createButtonContent();\n        }\n        createButtonContent() {\n            if (this.width < 768) {\n                this.text.innerText = 'Top';\n                this.icon.innerText = 'keyboard_arrow_up';\n            } else {\n                this.text.innerText = 'Back to top';\n                this.icon.innerText = 'north';\n            }\n        }\n        checkBackToTop() {\n            let windowTop = this.scrollElement.scrollTop || document.documentElement.scrollTop;\n            if (!this.dataElement) windowTop = window.scrollY || document.documentElement.scrollTop;\n            const scroll = this.scrollPosition;\n            this.scrollPosition = window.scrollY;\n            if (this.scrollOffset && this.scrollOffset > 0) {\n                this.condition = windowTop >= this.scrollOffset;\n                this.element.classList.toggle('active', this.condition);\n            } else {\n                this.condition = scroll > this.scrollPosition && this.scrollPosition > 200;\n                this.element.classList.toggle('active', this.condition);\n            }\n        }\n        resizeHandler() {\n            const oldWidth = this.width;\n            const oldHeight = this.height;\n            this.width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n            this.height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n            if (oldWidth !== this.width && oldHeight === this.height) this.createButtonContent();\n        }\n        debounce(fn) {\n            var _this = this;\n            let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n            let timeout;\n            return function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                const context = _this;\n                if (!window.requestAnimationFrame) {\n                    clearTimeout(timeout);\n                    timeout = setTimeout(()=>fn.apply(context, args), wait);\n                } else {\n                    if (timeout) window.cancelAnimationFrame(timeout);\n                    timeout = window.requestAnimationFrame(()=>{\n                        fn.apply(context, args);\n                    });\n                }\n            };\n        }\n        static createElement(tag) {\n            let classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            let attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n            const element = document.createElement(tag);\n            if (classes.length > 0) element.classList.add(...classes);\n            Object.entries(attributes).forEach((_ref)=>{\n                let [key, value] = _ref;\n                element.setAttribute(key, value);\n            });\n            return element;\n        }\n    }\n    class Breadcrumbs {\n        constructor(element){\n            this.element = element;\n            this.allBreadcrumbs = this.element.querySelector('.nsw-breadcrumbs ol');\n            this.secondBreadcrumb = this.element.querySelector('.js-breadcrumbs li:nth-child(2)');\n            this.condition = false;\n        }\n        init() {\n            if (this.allBreadcrumbs.children.length > 3) this.createToggle();\n        }\n        createToggle() {\n            const toggle = this.constructor.createElement('li', [\n                'nsw-breadcrumbs__show-more-toggle'\n            ]);\n            toggle.innerHTML = '<button aria-label=\"Show more breadcrumbs\" class=\"nsw-breadcrumbs__toggle-button\" type=\"button\">\\u2026</button>';\n            toggle.addEventListener('click', ()=>{\n                this.allBreadcrumbs.classList.toggle('nsw-breadcrumbs__show-all');\n            });\n            this.allBreadcrumbs.insertBefore(toggle, this.secondBreadcrumb);\n        }\n        static createElement(tag) {\n            let classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            let attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n            const element = document.createElement(tag);\n            if (classes.length > 0) element.classList.add(...classes);\n            Object.entries(attributes).forEach((_ref)=>{\n                let [key, value] = _ref;\n                element.setAttribute(key, value);\n            });\n            return element;\n        }\n    }\n    /* eslint-disable max-len */ class DatePicker {\n        constructor(element){\n            this.element = element;\n            this.prefix = 'nsw-';\n            this.class = 'date-picker';\n            this.uID = uniqueId('calendar-label');\n            this.dateClass = `${this.prefix}${this.class}__date`;\n            this.todayClass = `${this.dateClass}--today`;\n            this.selectedClass = `${this.dateClass}--selected`;\n            this.keyboardFocusClass = `${this.dateClass}--keyboard-focus`;\n            this.visibleClass = `${this.prefix}${this.class}--is-visible`;\n            this.months = this.element.getAttribute('data-months') ? this.element.getAttribute('data-months') : [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December'\n            ];\n            this.dateFormat = this.element.getAttribute('data-date-format') ? this.element.getAttribute('data-date-format') : 'd-m-y';\n            this.dateSeparator = this.element.getAttribute('data-date-separator') ? this.element.getAttribute('data-date-separator') : '/';\n            this.datesDisabled = this.element.getAttribute('data-dates-disabled') ? this.element.getAttribute('data-dates-disabled') : '';\n            this.minDate = this.element.getAttribute('data-min-date') ? this.element.getAttribute('data-min-date') : '';\n            this.maxDate = this.element.getAttribute('data-max-date') ? this.element.getAttribute('data-max-date') : '';\n            this.input = this.element.querySelector('.js-date-input__text');\n            this.trigger = this.element.querySelector('.js-date-input__trigger');\n            this.triggerLabel = this.trigger && this.trigger.getAttribute('aria-label') ? this.trigger.getAttribute('aria-label') : 'Select a date';\n            this.datePicker = this.element.querySelector('.js-date-picker');\n            this.body = this.datePicker && this.datePicker.querySelector('.js-date-picker__dates');\n            this.navigation = this.datePicker && this.datePicker.querySelector('.js-date-picker__title-nav');\n            this.heading = this.datePicker && this.datePicker.querySelector('.js-date-picker__title-label');\n            this.close = this.datePicker && this.datePicker.querySelector('.js-date-picker__close');\n            this.accept = this.datePicker && this.datePicker.querySelector('.js-date-picker__accept');\n            this.multipleInput = this.element.querySelector('.js-date-input-multiple');\n            this.dateInput = this.multipleInput && this.multipleInput.querySelector('.js-date-picker-date');\n            this.monthInput = this.multipleInput && this.multipleInput.querySelector('.js-date-picker-month');\n            this.yearInput = this.multipleInput && this.multipleInput.querySelector('.js-date-picker-year');\n            this.multiDateArray = [\n                this.dateInput,\n                this.monthInput,\n                this.yearInput\n            ];\n            this.dateIndexes = this.getDateIndexes();\n            this.pickerVisible = false;\n            this.dateSelected = false;\n            this.selectedDay = false;\n            this.selectedMonth = false;\n            this.selectedYear = false;\n            this.firstFocusable = false;\n            this.lastFocusable = false;\n            this.disabledArray = false;\n        }\n        init() {\n            if (!this.input && !this.multipleInput) return;\n            if (!this.datePicker) this.initCreateCalendar();\n            this.disabledDates();\n            this.resetCalendar();\n            this.initCalendarAria();\n            this.initCalendarEvents();\n            this.placeCalendar();\n        }\n        initCreateCalendar() {\n            const calendar = `\n    <div class=\"nsw-date-picker js-date-picker\" role=\"dialog\" aria-labelledby=\"${this.uID}\">\n      <header class=\"nsw-date-picker__header\">\n        <div class=\"nsw-date-picker__title\">\n          <span class=\"nsw-date-picker__title-label js-date-picker__title-label\" id=\"${this.uID}\"></span>\n\n          <nav>\n            <ul class=\"nsw-date-picker__title-nav js-date-picker__title-nav\">\n              <li>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__year-nav-btn js-date-picker__year-nav-btn--prev\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">keyboard_double_arrow_left</span>\n                </button>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__month-nav-btn js-date-picker__month-nav-btn--prev\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">chevron_left</span>\n                </button>\n              </li>\n\n              <li>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__month-nav-btn js-date-picker__month-nav-btn--next\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">chevron_right</span>\n                </button>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__year-nav-btn js-date-picker__year-nav-btn--next\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">keyboard_double_arrow_right</span>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <ol class=\"nsw-date-picker__week\">\n          <li><div class=\"nsw-date-picker__day\">M<span class=\"sr-only\">onday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">T<span class=\"sr-only\">uesday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">W<span class=\"sr-only\">ednesday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">T<span class=\"sr-only\">hursday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">F<span class=\"sr-only\">riday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">S<span class=\"sr-only\">aturday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">S<span class=\"sr-only\">unday</span></div></li>\n        </ol>\n      </header>\n\n      <ol class=\"nsw-date-picker__dates js-date-picker__dates\" aria-labelledby=\"${this.uID}\">\n        \n      </ol>\n\n      <div class=\"nsw-date-picker__buttongroup\">\n        <button type=\"button\" class=\"nsw-button nsw-button--dark-outline-solid js-date-picker__close\" value=\"cancel\">Cancel</button>\n        <button type=\"button\" class=\"nsw-button nsw-button--dark js-date-picker__accept\" value=\"ok\">OK</button>\n      </div>\n    </div>`;\n            this.element.insertAdjacentHTML('beforeend', calendar);\n            this.datePicker = this.element.querySelector('.js-date-picker');\n            this.body = this.datePicker.querySelector('.js-date-picker__dates');\n            this.navigation = this.datePicker.querySelector('.js-date-picker__title-nav');\n            this.heading = this.datePicker.querySelector('.js-date-picker__title-label');\n            this.close = this.datePicker.querySelector('.js-date-picker__close');\n            this.accept = this.datePicker.querySelector('.js-date-picker__accept');\n        }\n        initCalendarAria() {\n            this.resetLabelCalendarTrigger();\n            const srLiveReagion = document.createElement('div');\n            srLiveReagion.setAttribute('aria-live', 'polite');\n            srLiveReagion.classList.add('sr-only', 'js-date-input__sr-live');\n            this.element.appendChild(srLiveReagion);\n            this.srLiveReagion = this.element.querySelector('.js-date-input__sr-live');\n        }\n        initCalendarEvents() {\n            if (this.input) this.input.addEventListener('focus', ()=>{\n                this.toggleCalendar(true);\n            });\n            if (this.multipleInput) this.multiDateArray.forEach((element)=>{\n                element.addEventListener('focus', ()=>{\n                    this.hideCalendar();\n                });\n            });\n            if (this.trigger) this.trigger.addEventListener('click', (event)=>{\n                event.preventDefault();\n                this.pickerVisible = false;\n                this.toggleCalendar();\n                this.trigger.setAttribute('aria-expanded', 'true');\n            });\n            if (this.close) this.close.addEventListener('click', (event)=>{\n                event.preventDefault();\n                this.hideCalendar();\n            });\n            if (this.accept) this.accept.addEventListener('click', (event)=>{\n                event.preventDefault();\n                const day = this.body.querySelector('button[tabindex=\"0\"]');\n                if (day) {\n                    this.dateSelected = true;\n                    this.selectedDay = day.innerText;\n                    this.selectedMonth = this.currentMonth;\n                    this.selectedYear = this.currentYear;\n                    this.setInputValue();\n                    if (this.input) this.input.focus();\n                    else if (this.multipleInput) {\n                        this.trigger.focus();\n                        this.hideCalendar();\n                    }\n                    this.resetLabelCalendarTrigger();\n                }\n            });\n            this.body.addEventListener('click', (event)=>{\n                event.preventDefault();\n                const day = event.target.closest('button');\n                if (day) {\n                    this.dateSelected = true;\n                    this.selectedDay = day.innerText;\n                    this.selectedMonth = this.currentMonth;\n                    this.selectedYear = this.currentYear;\n                    this.setInputValue();\n                    if (this.input) this.input.focus();\n                    else if (this.multipleInput) {\n                        this.trigger.focus();\n                        this.hideCalendar();\n                    }\n                    this.resetLabelCalendarTrigger();\n                }\n            });\n            this.navigation.addEventListener('click', (event)=>{\n                event.preventDefault();\n                const monthBtn = event.target.closest('.js-date-picker__month-nav-btn');\n                const yearBtn = event.target.closest('.js-date-picker__year-nav-btn');\n                if (monthBtn && monthBtn.classList.contains('js-date-picker__month-nav-btn--prev')) this.showPrevMonth(true);\n                else if (monthBtn && monthBtn.classList.contains('js-date-picker__month-nav-btn--next')) this.showNextMonth(true);\n                else if (yearBtn && yearBtn.classList.contains('js-date-picker__year-nav-btn--prev')) this.showPrevYear(true);\n                else if (yearBtn && yearBtn.classList.contains('js-date-picker__year-nav-btn--next')) this.showNextYear(true);\n            });\n            window.addEventListener('keydown', (event)=>{\n                if (event.code && event.code === 27 || event.key && event.key.toLowerCase() === 'escape') {\n                    if (document.activeElement.closest('.js-date-picker')) {\n                        const activeInput = document.activeElement.closest('.js-date-input').querySelector('input');\n                        activeInput.focus();\n                    } else this.hideCalendar();\n                }\n            });\n            window.addEventListener('click', (event)=>{\n                if (!event.target.closest('.js-date-picker') && !event.target.closest('.js-date-input') && this.pickerVisible) this.hideCalendar();\n            });\n            this.body.addEventListener('keydown', (event)=>{\n                let day = this.currentDay;\n                if (event.code && event.code === 40 || event.key && event.key.toLowerCase() === 'arrowdown') {\n                    day += 7;\n                    this.resetDayValue(day);\n                } else if (event.code && event.code === 39 || event.key && event.key.toLowerCase() === 'arrowright') {\n                    day += 1;\n                    this.resetDayValue(day);\n                } else if (event.code && event.code === 37 || event.key && event.key.toLowerCase() === 'arrowleft') {\n                    day -= 1;\n                    this.resetDayValue(day);\n                } else if (event.code && event.code === 38 || event.key && event.key.toLowerCase() === 'arrowup') {\n                    day -= 7;\n                    this.resetDayValue(day);\n                } else if (event.code && event.code === 35 || event.key && event.key.toLowerCase() === 'end') {\n                    event.preventDefault();\n                    day = day + 6 - this.getDayOfWeek(this.currentYear, this.currentMonth, day);\n                    this.resetDayValue(day);\n                } else if (event.code && event.code === 36 || event.key && event.key.toLowerCase() === 'home') {\n                    event.preventDefault();\n                    day -= this.getDayOfWeek(this.currentYear, this.currentMonth, day);\n                    this.resetDayValue(day);\n                } else if (event.code && event.code === 34 || event.key && event.key.toLowerCase() === 'pagedown') {\n                    event.preventDefault();\n                    this.showNextMonth();\n                } else if (event.code && event.code === 33 || event.key && event.key.toLowerCase() === 'pageup') {\n                    event.preventDefault();\n                    this.showPrevMonth();\n                }\n            });\n            this.datePicker.addEventListener('keydown', (event)=>{\n                if (event.code && event.code === 9 || event.key && event.key === 'Tab') this.trapFocus(event);\n            });\n            if (this.input) this.input.addEventListener('keydown', (event)=>{\n                if (event.code && event.code === 13 || event.key && event.key.toLowerCase() === 'enter') {\n                    this.resetCalendar();\n                    this.resetLabelCalendarTrigger();\n                    this.hideCalendar();\n                } else if (event.code && event.code === 40 || event.key && event.key.toLowerCase() === 'arrowdown' && this.pickerVisible) this.body.querySelector('button[tabindex=\"0\"]').focus();\n            });\n            if (this.multipleInput) this.multiDateArray.forEach((element)=>{\n                element.addEventListener('keydown', (event)=>{\n                    if (event.code && event.code === 13 || event.key && event.key.toLowerCase() === 'enter') {\n                        this.resetCalendar();\n                        this.resetLabelCalendarTrigger();\n                        this.hideCalendar();\n                    } else if (event.code && event.code === 40 || event.key && event.key.toLowerCase() === 'arrowdown' && this.pickerVisible) this.body.querySelector('button[tabindex=\"0\"]').focus();\n                });\n            });\n        }\n        getCurrentDay(date) {\n            return date ? this.getDayFromDate(date) : new Date().getDate();\n        }\n        getCurrentMonth(date) {\n            return date ? this.getMonthFromDate(date) : new Date().getMonth();\n        }\n        getCurrentYear(date) {\n            return date ? this.getYearFromDate(date) : new Date().getFullYear();\n        }\n        getDayFromDate(date) {\n            const day = parseInt(date.split('-')[2], 10);\n            return Number.isNaN(day) ? this.getCurrentDay(false) : day;\n        }\n        getMonthFromDate(date) {\n            const month = parseInt(date.split('-')[1], 10) - 1;\n            return Number.isNaN(month) ? this.getCurrentMonth(false) : month;\n        }\n        getYearFromDate(date) {\n            const year = parseInt(date.split('-')[0], 10);\n            return Number.isNaN(year) ? this.getCurrentYear(false) : year;\n        }\n        showNextMonth(bool) {\n            this.currentYear = this.currentMonth === 11 ? this.currentYear + 1 : this.currentYear;\n            this.currentMonth = (this.currentMonth + 1) % 12;\n            this.currentDay = this.checkDayInMonth();\n            this.showCalendar(bool);\n            this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n        }\n        showPrevMonth(bool) {\n            this.currentYear = this.currentMonth === 0 ? this.currentYear - 1 : this.currentYear;\n            this.currentMonth = this.currentMonth === 0 ? 11 : this.currentMonth - 1;\n            this.currentDay = this.checkDayInMonth();\n            this.showCalendar(bool);\n            this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n        }\n        showNextYear(bool) {\n            this.currentYear += 1;\n            this.currentMonth %= 12;\n            this.currentDay = this.checkDayInMonth();\n            this.showCalendar(bool);\n            this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n        }\n        showPrevYear(bool) {\n            this.currentYear -= 1;\n            this.currentMonth %= 12;\n            this.currentDay = this.checkDayInMonth();\n            this.showCalendar(bool);\n            this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n        }\n        checkDayInMonth() {\n            return this.currentDay > this.constructor.daysInMonth(this.currentYear, this.currentMonth) ? 1 : this.currentDay;\n        }\n        static daysInMonth(year, month) {\n            return 32 - new Date(year, month, 32).getDate();\n        }\n        resetCalendar() {\n            let currentDate = false;\n            let selectedDate;\n            if (this.input) selectedDate = this.input.value;\n            else if (this.multipleInput) {\n                if (this.dateInput.value !== '' && this.monthInput.value !== '' && this.yearInput.value !== '') selectedDate = `${this.dateInput.value}/${this.monthInput.value}/${this.yearInput.value}`;\n                else selectedDate = '';\n            }\n            this.dateSelected = false;\n            if (selectedDate !== '') {\n                const date = this.getDateFromInput();\n                this.dateSelected = true;\n                currentDate = date;\n            }\n            this.currentDay = this.getCurrentDay(currentDate);\n            this.currentMonth = this.getCurrentMonth(currentDate);\n            this.currentYear = this.getCurrentYear(currentDate);\n            this.selectedDay = this.dateSelected ? this.currentDay : false;\n            this.selectedMonth = this.dateSelected ? this.currentMonth : false;\n            this.selectedYear = this.dateSelected ? this.currentYear : false;\n        }\n        disabledDates() {\n            this.disabledArray = [];\n            if (this.datesDisabled) {\n                const disabledDates = this.datesDisabled.split(' ');\n                disabledDates.forEach((element)=>{\n                    this.disabledArray.push(element);\n                });\n            }\n        }\n        convertDateToParse(date) {\n            const dateArray = date.split(this.dateSeparator);\n            return `${dateArray[this.dateIndexes[2]]}, ${dateArray[this.dateIndexes[1]]}, ${dateArray[this.dateIndexes[0]]}`;\n        }\n        isDisabledDate(day, month, year) {\n            let disabled = false;\n            const dateParse = new Date(year, month, day);\n            const minDate = new Date(this.convertDateToParse(this.minDate));\n            const maxDate = new Date(this.convertDateToParse(this.maxDate));\n            if (this.minDate && minDate > dateParse) disabled = true;\n            if (this.maxDate && maxDate < dateParse) disabled = true;\n            if (this.disabledArray.length > 0) this.disabledArray.forEach((element)=>{\n                const disabledDate = new Date(this.convertDateToParse(element));\n                if (dateParse.getTime() === disabledDate.getTime()) disabled = true;\n            });\n            return disabled;\n        }\n        showCalendar(bool) {\n            const firstDay = this.constructor.getDayOfWeek(this.currentYear, this.currentMonth, '01');\n            this.body.innerHTML = '';\n            this.heading.innerHTML = `${this.months[this.currentMonth]} ${this.currentYear}`;\n            let date = 1;\n            let calendar = '';\n            for(let i = 0; i < 6; i += 1)for(let j = 0; j < 7; j += 1){\n                if (i === 0 && j < firstDay) calendar += '<li></li>';\n                else if (date > this.constructor.daysInMonth(this.currentYear, this.currentMonth)) break;\n                else {\n                    let classListDate = '';\n                    let tabindexValue = '-1';\n                    let disabled;\n                    if (date === this.currentDay) tabindexValue = '0';\n                    if (this.getCurrentMonth() === this.currentMonth && this.getCurrentYear() === this.currentYear && date === this.getCurrentDay()) classListDate += ` ${this.todayClass}`;\n                    if (this.isDisabledDate(date, this.currentMonth, this.currentYear)) {\n                        classListDate += ` ${this.dateClass}--disabled`;\n                        disabled = 'aria-disabled=\"true\"';\n                    }\n                    if (this.dateSelected && date === this.selectedDay && this.currentYear === this.selectedYear && this.currentMonth === this.selectedMonth) classListDate += ` ${this.selectedClass}`;\n                    calendar = `${calendar}<li><button class=\"${this.dateClass}${classListDate}\" tabindex=\"${tabindexValue}\" type=\"button\" ${disabled || ''}>${date}</button></li>`;\n                    date += 1;\n                }\n            }\n            this.body.innerHTML = calendar;\n            if (!this.pickerVisible) this.datePicker.classList.add(this.visibleClass);\n            this.pickerVisible = true;\n            if (!bool) this.body.querySelector('button[tabindex=\"0\"]').focus();\n            this.getFocusableElements();\n            this.placeCalendar();\n        }\n        hideCalendar() {\n            this.datePicker.classList.remove(this.visibleClass);\n            this.pickerVisible = false;\n            this.firstFocusable = false;\n            this.lastFocusable = false;\n            if (this.trigger) this.trigger.setAttribute('aria-expanded', 'false');\n        }\n        toggleCalendar(bool) {\n            if (!this.pickerVisible) {\n                this.resetCalendar();\n                this.showCalendar(bool);\n            } else this.hideCalendar();\n        }\n        static getDayOfWeek(year, month, day) {\n            let weekDay = new Date(year, month, day).getDay() - 1;\n            if (weekDay < 0) weekDay = 6;\n            return weekDay;\n        }\n        getDateIndexes() {\n            const dateFormat = this.dateFormat.toLowerCase().replace(/-/g, '');\n            return [\n                dateFormat.indexOf('d'),\n                dateFormat.indexOf('m'),\n                dateFormat.indexOf('y')\n            ];\n        }\n        setInputValue() {\n            if (this.input) this.input.value = this.getDateForInput(this.selectedDay, this.selectedMonth, this.selectedYear);\n            else if (this.multipleInput) {\n                this.dateInput.value = this.constructor.getReadableDate(this.selectedDay);\n                this.monthInput.value = this.constructor.getReadableDate(this.selectedMonth + 1);\n                this.yearInput.value = this.selectedYear;\n            }\n        }\n        getDateForInput(day, month, year) {\n            const dateArray = [];\n            dateArray[this.dateIndexes[0]] = this.constructor.getReadableDate(day);\n            dateArray[this.dateIndexes[1]] = this.constructor.getReadableDate(month + 1);\n            dateArray[this.dateIndexes[2]] = year;\n            return dateArray[0] + this.dateSeparator + dateArray[1] + this.dateSeparator + dateArray[2];\n        }\n        getDateFromInput() {\n            let dateArray;\n            if (this.input) dateArray = this.input.value.split(this.dateSeparator);\n            else if (this.multipleInput) dateArray = [\n                this.dateInput.value,\n                this.monthInput.value,\n                this.yearInput.value\n            ];\n            return `${dateArray[this.dateIndexes[2]]}-${dateArray[this.dateIndexes[1]]}-${dateArray[this.dateIndexes[0]]}`;\n        }\n        static getReadableDate(date) {\n            return date < 10 ? `0${date}` : date;\n        }\n        resetDayValue(day) {\n            const totDays = this.constructor.daysInMonth(this.currentYear, this.currentMonth);\n            if (day > totDays) {\n                this.currentDay = day - totDays;\n                this.showNextMonth(false);\n            } else if (day < 1) {\n                const newMonth = this.currentMonth === 0 ? 11 : this.currentMonth - 1;\n                this.currentDay = this.constructor.daysInMonth(this.currentYear, newMonth) + day;\n                this.showPrevMonth(false);\n            } else {\n                this.currentDay = day;\n                const focusItem = this.body.querySelector('button[tabindex=\"0\"]');\n                focusItem.setAttribute('tabindex', '-1');\n                focusItem.classList.remove(this.keyboardFocusClass);\n                const buttons = this.body.getElementsByTagName('button');\n                for(let i = 0; i < buttons.length; i += 1)if (parseInt(buttons[i].textContent, 10) === this.currentDay) {\n                    buttons[i].setAttribute('tabindex', '0');\n                    buttons[i].classList.add(this.keyboardFocusClass);\n                    buttons[i].focus();\n                    break;\n                }\n                this.getFocusableElements();\n            }\n        }\n        resetLabelCalendarTrigger() {\n            if (!this.trigger) return;\n            if (this.selectedYear && this.selectedMonth !== false && this.selectedDay) this.trigger.setAttribute('aria-label', `Selected date is ${new Date(this.selectedYear, this.selectedMonth, this.selectedDay).toDateString()}`);\n            else this.trigger.setAttribute('aria-label', this.triggerLabel);\n        }\n        getFocusableElements() {\n            const allFocusable = this.datePicker.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable], audio[controls], video[controls], summary');\n            this.getFirstFocusable(allFocusable);\n            this.getLastFocusable(allFocusable);\n        }\n        getFirstFocusable(elements) {\n            for(let i = 0; i < elements.length; i += 1)if ((elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length) && elements[i].getAttribute('tabindex') !== '-1') {\n                this.firstFocusable = elements[i];\n                return true;\n            }\n            return false;\n        }\n        getLastFocusable(elements) {\n            for(let i = elements.length - 1; i >= 0; i -= 1)if ((elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length) && elements[i].getAttribute('tabindex') !== '-1') {\n                this.lastFocusable = elements[i];\n                return true;\n            }\n            return false;\n        }\n        trapFocus(event) {\n            if (this.firstFocusable === document.activeElement && event.shiftKey) {\n                event.preventDefault();\n                this.lastFocusable.focus();\n            }\n            if (this.lastFocusable === document.activeElement && !event.shiftKey) {\n                event.preventDefault();\n                this.firstFocusable.focus();\n            }\n        }\n        placeCalendar() {\n            this.datePicker.style.left = '0px';\n            this.datePicker.style.right = 'auto';\n            const pickerBoundingRect = this.datePicker.getBoundingClientRect();\n            if (pickerBoundingRect.right > window.innerWidth) {\n                this.datePicker.style.left = 'auto';\n                this.datePicker.style.right = '0px';\n            }\n        }\n    }\n    function getSign(x) {\n        if (!Math.sign) return (x > 0) - (x < 0) || +x;\n        return Math.sign(x);\n    }\n    class SwipeContent {\n        constructor(element){\n            this.element = element;\n            this.delta = [\n                false,\n                false\n            ];\n            this.dragging = false;\n            this.intervalId = false;\n            this.changedTouches = false;\n        }\n        init() {\n            this.element.addEventListener('mousedown', this.handleEvent.bind(this));\n            this.element.addEventListener('touchstart', this.handleEvent.bind(this), {\n                passive: true\n            });\n        }\n        initDragging() {\n            this.element.addEventListener('mousemove', this.handleEvent.bind(this));\n            this.element.addEventListener('touchmove', this.handleEvent.bind(this), {\n                passive: true\n            });\n            this.element.addEventListener('mouseup', this.handleEvent.bind(this));\n            this.element.addEventListener('mouseleave', this.handleEvent.bind(this));\n            this.element.addEventListener('touchend', this.handleEvent.bind(this));\n        }\n        cancelDragging() {\n            if (this.intervalId) {\n                if (!window.requestAnimationFrame) clearInterval(this.intervalId);\n                else window.cancelAnimationFrame(this.intervalId);\n                this.intervalId = false;\n            }\n            this.element.removeEventListener('mousemove', this.handleEvent.bind(this));\n            this.element.removeEventListener('touchmove', this.handleEvent.bind(this));\n            this.element.removeEventListener('mouseup', this.handleEvent.bind(this));\n            this.element.removeEventListener('mouseleave', this.handleEvent.bind(this));\n            this.element.removeEventListener('touchend', this.handleEvent.bind(this));\n        }\n        handleEvent(event) {\n            switch(event.type){\n                case 'mousedown':\n                case 'touchstart':\n                    this.startDrag(event);\n                    break;\n                case 'mousemove':\n                case 'touchmove':\n                    this.drag(event);\n                    break;\n                case 'mouseup':\n                case 'mouseleave':\n                case 'touchend':\n                    this.endDrag(event);\n                    break;\n                default:\n                    console.log(`${event.type}.`);\n            }\n        }\n        startDrag(event) {\n            this.dragging = true;\n            this.initDragging();\n            this.delta = [\n                parseInt(this.unify(event).clientX, 10),\n                parseInt(this.unify(event).clientY, 10)\n            ];\n            this.emitSwipeEvents('dragStart', this.delta, event.target);\n        }\n        endDrag(event) {\n            this.cancelDragging();\n            const dx = parseInt(this.unify(event).clientX, 10);\n            const dy = parseInt(this.unify(event).clientY, 10);\n            if (this.delta && (this.delta[0] || this.delta[0] === 0)) {\n                const s = getSign(dx - this.delta[0]);\n                if (Math.abs(dx - this.delta[0]) > 30) {\n                    if (s < 0) this.emitSwipeEvents('swipeLeft', [\n                        dx,\n                        dy\n                    ]);\n                    else this.emitSwipeEvents('swipeRight', [\n                        dx,\n                        dy\n                    ]);\n                }\n                this.delta[0] = false;\n            }\n            if (this.delta && (this.delta[1] || this.delta[1] === 0)) {\n                const y = getSign(dy - this.delta[1]);\n                if (Math.abs(dy - this.delta[1]) > 30) {\n                    if (y < 0) this.emitSwipeEvents('swipeUp', [\n                        dx,\n                        dy\n                    ]);\n                    else this.emitSwipeEvents('swipeDown', [\n                        dx,\n                        dy\n                    ]);\n                }\n                this.delta[1] = false;\n            }\n            this.emitSwipeEvents('dragEnd', [\n                dx,\n                dy\n            ]);\n            this.dragging = false;\n        }\n        drag(event) {\n            if (!this.dragging) return;\n            if (!window.requestAnimationFrame) this.intervalId = setTimeout(()=>{\n                this.emitDrag(event);\n            }, 250);\n            else this.intervalId = window.requestAnimationFrame(()=>{\n                this.emitDrag(event);\n            });\n        }\n        unify(event) {\n            this.changedTouches = event.changedTouches;\n            return this.changedTouches ? this.changedTouches[0] : event;\n        }\n        emitDrag(event) {\n            this.emitSwipeEvents('dragging', [\n                parseInt(this.unify(event).clientX, 10),\n                parseInt(this.unify(event).clientY, 10)\n            ]);\n        }\n        emitSwipeEvents(eventName, detail, el) {\n            let trigger = false;\n            if (el) trigger = el;\n            const event = new CustomEvent(eventName, {\n                detail: {\n                    x: detail[0],\n                    y: detail[1],\n                    origin: trigger\n                }\n            });\n            this.element.dispatchEvent(event);\n        }\n    }\n    /* eslint-disable max-len */ class Carousel extends SwipeContent {\n        constructor(element){\n            super(element);\n            this.element = element;\n            this.containerClass = 'nsw-carousel-container';\n            this.controlClass = 'js-carousel__control';\n            this.wrapperClass = 'js-carousel__wrapper';\n            this.counterClass = 'js-carousel__counter';\n            this.counterTorClass = 'js-carousel__counter-tot';\n            this.navClass = 'js-carousel__navigation';\n            this.navItemClass = 'js-carousel__nav-item';\n            this.navigationItemClass = this.element.getAttribute('data-navigation-item-class') ? this.element.getAttribute('data-navigation-item-class') : 'nsw-carousel__nav-item';\n            this.navigationClass = this.element.getAttribute('data-navigation-class') ? this.element.getAttribute('data-navigation-class') : 'nsw-carousel__navigation';\n            this.paginationClass = this.element.getAttribute('data-pagination-class') ? this.element.getAttribute('data-pagination-class') : 'nsw-carousel__navigation--pagination';\n            this.draggingClass = 'nsw-carousel--is-dragging';\n            this.loadedClass = 'nsw-carousel--loaded';\n            this.animateClass = 'nsw-carousel__list--animating';\n            this.cloneClass = 'js-clone';\n            this.srClass = 'sr-only';\n            this.srLiveAreaClass = 'js-carousel__aria-live';\n            this.hideControlsClass = 'nsw-carousel--hide-controls';\n            this.hideClass = 'nsw-display-none';\n            this.centerClass = 'nsw-justify-content-center';\n            this.listWrapper = this.element.querySelector(`.${this.wrapperClass}`);\n            this.list = this.listWrapper ? this.listWrapper.querySelector('ol') : false;\n            this.items = this.list ? this.list.getElementsByTagName('li') : false;\n            this.controls = this.element.querySelectorAll(`.${this.controlClass}`);\n            this.counter = this.element.querySelectorAll(`.${this.counterClass}`);\n            this.counterTor = this.element.querySelectorAll(`.${this.counterTorClass}`);\n            this.ariaLabel = this.element.getAttribute('data-description') ? this.element.getAttribute('data-description') : 'Card carousel';\n            this.dragEnabled = !!(this.element.getAttribute('data-drag') && this.element.getAttribute('data-drag') === 'on');\n            this.loop = !!(this.element.getAttribute('data-loop') && this.element.getAttribute('data-loop') === 'on');\n            this.nav = !(this.element.getAttribute('data-navigation') && this.element.getAttribute('data-navigation') === 'off');\n            this.navigationPagination = !!(this.element.getAttribute('data-navigation-pagination') && this.element.getAttribute('data-navigation-pagination') === 'on');\n            this.justifyContent = !!(this.element.getAttribute('data-justify-content') && this.element.getAttribute('data-justify-content') === 'on');\n            this.initItems = [];\n            this.itemsNb = this.items.length;\n            this.visibItemsNb = 1;\n            this.itemsWidth = 1;\n            this.itemOriginalWidth = false;\n            this.selectedItem = 0;\n            this.translateContainer = 0;\n            this.containerWidth = 0;\n            this.animating = false;\n            this.dragStart = false;\n            this.resizeId = false;\n            this.cloneList = [];\n            this.itemAutoSize = false;\n            this.totTranslate = 0;\n            if (this.nav) this.loop = false;\n            this.flexSupported = CSS.supports('align-items', 'stretch');\n            this.transitionSupported = CSS.supports('transition', 'transform');\n            this.cssPropertiesSupported = 'CSS' in window && CSS.supports('color', 'var(--color-var)');\n        }\n        init() {\n            if (!this.items) return;\n            this.initCarouselLayout();\n            this.setItemsWidth(true);\n            this.insertBefore(this.visibItemsNb);\n            this.updateCarouselClones();\n            this.resetItemsTabIndex();\n            this.initAriaLive();\n            this.initCarouselEvents();\n            this.initCarouselCounter();\n        }\n        initCarouselLayout() {\n            this.element.classList.add(this.loadedClass);\n            this.element.setAttribute('aria-roledescription', 'carousel');\n            this.element.setAttribute('aria-label', this.ariaLabel);\n            const itemsArray = Array.from(this.items);\n            itemsArray.forEach((element, index)=>{\n                element.setAttribute('aria-roledescription', 'slide');\n                element.setAttribute('aria-label', `${index + 1} of ${itemsArray.length}`);\n                element.setAttribute('data-index', index);\n            });\n            this.carouselCreateContainer();\n            const itemStyle = this.items && window.getComputedStyle(this.items[0]);\n            const containerStyle = this.listWrapper && window.getComputedStyle(this.listWrapper);\n            let itemWidth = itemStyle ? parseFloat(itemStyle.getPropertyValue('width')) : 0;\n            const itemMargin = itemStyle ? parseFloat(itemStyle.getPropertyValue('margin-right')) : 0;\n            const containerPadding = containerStyle ? parseFloat(containerStyle.getPropertyValue('padding-left')) : 0;\n            let containerWidth = containerStyle ? parseFloat(containerStyle.getPropertyValue('width')) : 0;\n            if (!this.itemAutoSize) this.itemAutoSize = itemWidth;\n            containerWidth = this.getCarouselWidth(containerWidth);\n            if (!this.itemOriginalWidth) this.itemOriginalWidth = itemWidth;\n            else itemWidth = this.itemOriginalWidth;\n            if (this.itemAutoSize) {\n                this.itemOriginalWidth = parseInt(this.itemAutoSize, 10);\n                itemWidth = this.itemOriginalWidth;\n            }\n            if (containerWidth < itemWidth) {\n                this.itemOriginalWidth = containerWidth;\n                itemWidth = this.itemOriginalWidth;\n            }\n            this.visibItemsNb = parseInt((containerWidth - 2 * containerPadding + itemMargin) / (itemWidth + itemMargin), 10);\n            this.itemsWidth = parseFloat(((containerWidth - 2 * containerPadding + itemMargin) / this.visibItemsNb - itemMargin).toFixed(1));\n            this.containerWidth = (this.itemsWidth + itemMargin) * this.items.length;\n            this.translateContainer = 0 - (this.itemsWidth + itemMargin) * this.visibItemsNb;\n            if (!this.flexSupported) this.list.style.width = `${(this.itemsWidth + itemMargin) * this.visibItemsNb * 3}px`;\n            this.totTranslate = 0 - this.selectedItem * (this.itemsWidth + itemMargin);\n            if (this.items.length <= this.visibItemsNb) this.totTranslate = 0;\n            this.centerItems();\n        }\n        carouselCreateContainer() {\n            if (!this.element.parentElement.classList.contains(this.containerClass)) {\n                const el = document.createElement('div');\n                el.classList.add(this.containerClass);\n                this.element.parentNode.insertBefore(el, this.element);\n                el.appendChild(this.element);\n            }\n        }\n        setItemsWidth(bool) {\n            for(let i = 0; i < this.items.length; i += 1){\n                this.items[i].style.width = `${this.itemsWidth}px`;\n                if (bool) this.initItems.push(this.items[i]);\n            }\n        }\n        updateCarouselClones() {\n            if (!this.loop) return;\n            if (this.items.length < this.visibItemsNb * 3) this.insertAfter(this.visibItemsNb * 3 - this.items.length, this.items.length - this.visibItemsNb * 2);\n            else if (this.items.length > this.visibItemsNb * 3) this.removeClones(this.visibItemsNb * 3, this.items.length - this.visibItemsNb * 3);\n            this.setTranslate(`translateX(${this.translateContainer}px)`);\n        }\n        initCarouselEvents() {\n            if (this.nav) {\n                this.carouselCreateNavigation();\n                this.carouselInitNavigationEvents();\n            }\n            if (this.controls.length > 0) {\n                this.controls[0].addEventListener('click', (event)=>{\n                    event.preventDefault();\n                    this.showPrevItems();\n                    this.updateAriaLive();\n                });\n                this.controls[1].addEventListener('click', (event)=>{\n                    event.preventDefault();\n                    this.showNextItems();\n                    this.updateAriaLive();\n                });\n                this.resetCarouselControls();\n                this.emitCarouselActiveItemsEvent();\n            }\n            if (this.dragEnabled && window.requestAnimationFrame) {\n                super.init();\n                this.element.addEventListener('dragStart', (event)=>{\n                    if (event.detail.origin && event.detail.origin.closest(`.${this.controlClass}`)) return;\n                    if (event.detail.origin && event.detail.origin.closest(`.${this.navClass}`)) return;\n                    if (event.detail.origin && !event.detail.origin.closest(`.${this.wrapperClass}`)) return;\n                    this.element.classList.add(this.draggingClass);\n                    this.dragStart = event.detail.x;\n                    this.animateDragEnd();\n                });\n                this.element.addEventListener('dragging', (event)=>{\n                    if (!this.dragStart) return;\n                    if (this.animating || Math.abs(event.detail.x - this.dragStart) < 10) return;\n                    let translate = event.detail.x - this.dragStart + this.translateContainer;\n                    if (!this.loop) translate = event.detail.x - this.dragStart + this.totTranslate;\n                    this.setTranslate(`translateX(${translate}px)`);\n                });\n            }\n            window.addEventListener('resize', ()=>{\n                clearTimeout(this.resizeId);\n                this.resizeId = setTimeout(()=>{\n                    this.resetCarouselResize();\n                    this.resetDotsNavigation();\n                    this.resetCarouselControls();\n                    this.setCounterItem();\n                    this.centerItems();\n                    this.emitCarouselActiveItemsEvent();\n                }, 250);\n            });\n            this.element.addEventListener('keydown', (event)=>{\n                if (event.key && event.key.toLowerCase() === 'arrowright') this.showNextItems();\n                else if (event.key && event.key.toLowerCase() === 'arrowleft') this.showPrevItems();\n                else if (event.key && event.key.toLowerCase() === 'home') this.showPrevItems();\n                else if (event.key && event.key.toLowerCase() === 'end') this.showNextItems();\n                else if (event.key && event.key.toLowerCase() === 'enter') {\n                    event.preventDefault();\n                    event.target.click();\n                }\n            });\n            const itemLinks = this.element.querySelectorAll('.nsw-carousel__item a');\n            if (itemLinks.length > 0) itemLinks.forEach((link, index)=>{\n                link.addEventListener('focus', ()=>{\n                    const slider = link.closest('.js-carousel__wrapper');\n                    const carousel = slider.querySelector('.nsw-carousel__list');\n                    if (carousel) link.focus({\n                        preventScroll: true\n                    });\n                });\n                link.addEventListener('focusout', ()=>{\n                    const item = link.closest('.nsw-carousel__item');\n                    const dataIndex = Number(item.getAttribute('data-index')) + 1;\n                    if (dataIndex % this.visibItemsNb === 0 && dataIndex !== this.items.length) {\n                        itemLinks[index + 1].focus({\n                            preventScroll: true\n                        });\n                        this.showNextItems();\n                    }\n                });\n            });\n        }\n        showPrevItems() {\n            if (this.animating) return;\n            this.animating = true;\n            this.selectedItem = this.getIndex(this.selectedItem - this.visibItemsNb);\n            this.animateList('0', 'prev');\n        }\n        showNextItems() {\n            if (this.animating) return;\n            this.animating = true;\n            this.selectedItem = this.getIndex(this.selectedItem + this.visibItemsNb);\n            this.animateList(`${this.translateContainer * 2}px`, 'next');\n        }\n        animateDragEnd() {\n            const cb = (event)=>{\n                this.element.removeEventListener('dragEnd', cb);\n                this.element.classList.remove(this.draggingClass);\n                if (event.detail.x - this.dragStart < -40) {\n                    this.animating = false;\n                    this.showNextItems();\n                } else if (event.detail.x - this.dragStart > 40) {\n                    this.animating = false;\n                    this.showPrevItems();\n                } else if (event.detail.x - this.dragStart === 0) return;\n                else {\n                    this.animating = true;\n                    this.animateList(`${this.translateContainer}px`, false);\n                }\n                this.dragStart = false;\n            };\n            this.element.addEventListener('dragEnd', cb);\n        }\n        animateList(translate, direction) {\n            let trans = translate;\n            this.list.classList.add(this.animateClass);\n            const initTranslate = this.totTranslate;\n            if (!this.loop) trans = this.noLoopTranslateValue(direction);\n            setTimeout(()=>{\n                this.setTranslate(`translateX(${trans})`);\n            });\n            if (this.transitionSupported) {\n                const cb = (event)=>{\n                    if (event.propertyName && event.propertyName !== 'transform') return;\n                    if (this.list) {\n                        this.list.classList.remove(this.animateClass);\n                        this.list.removeEventListener('transitionend', cb);\n                    }\n                    this.animateListCb(direction);\n                };\n                this.list.addEventListener('transitionend', cb);\n            } else this.animateListCb(direction);\n            if (!this.loop && initTranslate === this.totTranslate) this.list.dispatchEvent(new CustomEvent('transitionend'));\n            this.resetCarouselControls();\n            this.setCounterItem();\n            this.emitCarouselActiveItemsEvent();\n        }\n        noLoopTranslateValue(direction) {\n            let translate = this.totTranslate;\n            if (direction === 'next') translate = this.totTranslate + this.translateContainer;\n            else if (direction === 'prev') translate = this.totTranslate - this.translateContainer;\n            else if (direction === 'click') translate = this.selectedDotIndex * this.translateContainer;\n            if (translate > 0) {\n                translate = 0;\n                this.selectedItem = 0;\n            }\n            if (translate < -this.translateContainer - this.containerWidth) {\n                translate = -this.translateContainer - this.containerWidth;\n                this.selectedItem = this.items.length - this.visibItemsNb;\n            }\n            if (this.visibItemsNb > this.items.length) translate = 0;\n            this.totTranslate = translate;\n            return `${translate}px`;\n        }\n        animateListCb(direction) {\n            if (direction) this.updateClones(direction);\n            this.animating = false;\n            this.resetItemsTabIndex();\n        }\n        updateClones(direction) {\n            if (!this.loop) return;\n            const index = direction === 'next' ? 0 : this.items.length - this.visibItemsNb;\n            this.removeClones(index, false);\n            if (direction === 'next') this.insertAfter(this.visibItemsNb, 0);\n            else this.insertBefore(this.visibItemsNb);\n            this.setTranslate(`translateX(${this.translateContainer}px)`);\n        }\n        insertBefore(nb, delta) {\n            if (!this.loop) return;\n            const clones = document.createDocumentFragment();\n            let start = 0;\n            if (delta) start = delta;\n            for(let i = start; i < nb; i += 1){\n                const index = this.getIndex(this.selectedItem - i - 1);\n                const clone = this.initItems[index].cloneNode(true);\n                clone.classList.add(this.cloneClass);\n                clones.insertBefore(clone, clones.firstChild);\n            }\n            this.list.insertBefore(clones, this.list.firstChild);\n            this.emitCarouselUpdateEvent();\n        }\n        insertAfter(nb, init) {\n            if (!this.loop) return;\n            const clones = document.createDocumentFragment();\n            for(let i = init; i < nb + init; i += 1){\n                const index = this.getIndex(this.selectedItem + this.visibItemsNb + i);\n                const clone = this.initItems[index].cloneNode(true);\n                clone.classList.add(this.cloneClass);\n                clones.appendChild(clone);\n            }\n            this.list.appendChild(clones);\n            this.emitCarouselUpdateEvent();\n        }\n        removeClones(index, bool) {\n            let newBool = bool;\n            if (!this.loop) return;\n            if (!bool) newBool = this.visibItemsNb;\n            for(let i = 0; i < newBool; i += 1)if (this.items[index]) this.list.removeChild(this.items[index]);\n        }\n        resetCarouselResize() {\n            const visibleItems = this.visibItemsNb;\n            this.resetItemAutoSize();\n            this.initCarouselLayout();\n            this.setItemsWidth(false);\n            this.resetItemsWidth();\n            if (this.loop) {\n                if (visibleItems > this.visibItemsNb) this.removeClones(0, visibleItems - this.visibItemsNb);\n                else if (visibleItems < this.visibItemsNb) this.insertBefore(this.visibItemsNb, visibleItems);\n                this.updateCarouselClones();\n            } else {\n                const translate = this.noLoopTranslateValue();\n                this.setTranslate(`translateX(${translate})`);\n            }\n            this.resetItemsTabIndex();\n        }\n        resetItemAutoSize() {\n            if (!this.cssPropertiesSupported) return;\n            this.items[0].removeAttribute('style');\n            this.itemAutoSize = getComputedStyle(this.items[0]).getPropertyValue('width');\n        }\n        resetItemsWidth() {\n            this.initItems.forEach((element)=>{\n                const el = element;\n                el.style.width = `${this.itemsWidth}px`;\n            });\n        }\n        resetItemsTabIndex() {\n            const carouselActive = this.items.length > this.visibItemsNb;\n            let j = this.items.length;\n            for(let i = 0; i < this.items.length; i += 1){\n                if (this.loop) {\n                    if (i < this.visibItemsNb || i >= 2 * this.visibItemsNb) {\n                        this.items[i].setAttribute('tabindex', '-1');\n                        this.items[i].setAttribute('aria-hidden', 'true');\n                        this.items[i].removeAttribute('aria-current');\n                    } else {\n                        if (i < j) j = i;\n                        this.items[i].removeAttribute('tabindex');\n                        this.items[i].removeAttribute('aria-hidden');\n                        this.items[i].setAttribute('aria-current', 'true');\n                    }\n                } else if ((i < this.selectedItem || i >= this.selectedItem + this.visibItemsNb) && carouselActive) {\n                    this.items[i].setAttribute('tabindex', '-1');\n                    this.items[i].setAttribute('aria-hidden', 'true');\n                    this.items[i].removeAttribute('aria-current');\n                } else {\n                    if (i < j) j = i;\n                    this.items[i].removeAttribute('tabindex');\n                    this.items[i].removeAttribute('aria-hidden');\n                    this.items[i].setAttribute('aria-current', 'true');\n                }\n            }\n            this.resetVisibilityOverflowItems(j);\n        }\n        initAriaLive() {\n            const srLiveArea = document.createElement('div');\n            srLiveArea.setAttribute('class', `${this.srClass} ${this.srLiveAreaClass}`);\n            srLiveArea.setAttribute('aria-live', 'polite');\n            srLiveArea.setAttribute('aria-atomic', 'true');\n            this.element.appendChild(srLiveArea);\n            this.ariaLive = srLiveArea;\n        }\n        updateAriaLive() {\n            this.ariaLive.innerHTML = `Item ${this.selectedItem + 1} selected. ${this.visibItemsNb} items of ${this.initItems.length} visible`;\n        }\n        getIndex(index) {\n            let i = index;\n            if (i < 0) i = this.getPositiveValue(i, this.itemsNb);\n            if (i >= this.itemsNb) i %= this.itemsNb;\n            return i;\n        }\n        getPositiveValue(value, add) {\n            let val = value;\n            val += add;\n            if (val > 0) return val;\n            return this.getPositiveValue(val, add);\n        }\n        setTranslate(translate) {\n            this.list.style.transform = translate;\n            this.list.style.msTransform = translate;\n        }\n        getCarouselWidth(computedWidth) {\n            let comWidth = computedWidth;\n            const closestHidden = this.listWrapper.closest(`.${this.srClass}`);\n            if (closestHidden) {\n                closestHidden.classList.remove(this.srClass);\n                comWidth = this.listWrapper.offsetWidth;\n                closestHidden.classList.add(this.srClass);\n            } else if (Number.isNaN(comWidth)) comWidth = this.getHiddenParentWidth(this.element);\n            return comWidth;\n        }\n        getHiddenParentWidth(element) {\n            const parent = element.parentElement;\n            if (parent.tagName.toLowerCase() === 'html') return 0;\n            const style = window.getComputedStyle(parent);\n            if (style.display === 'none' || style.visibility === 'hidden') {\n                parent.setAttribute('style', 'display: block!important; visibility: visible!important;');\n                const computedWidth = this.listWrapper.offsetWidth;\n                parent.style.display = '';\n                parent.style.visibility = '';\n                return computedWidth;\n            }\n            return this.getHiddenParentWidth(parent);\n        }\n        resetCarouselControls() {\n            if (this.loop) return;\n            if (this.controls.length > 0) {\n                if (this.totTranslate === 0) this.controls[0].setAttribute('disabled', true);\n                else this.controls[0].removeAttribute('disabled');\n                if (this.totTranslate === -this.translateContainer - this.containerWidth || this.items.length <= this.visibItemsNb) this.controls[1].setAttribute('disabled', true);\n                else this.controls[1].removeAttribute('disabled');\n            }\n            if (this.nav) {\n                const selectedDot = this.navigation.querySelectorAll(`.${this.navigationItemClass}--selected`);\n                if (selectedDot.length > 0) selectedDot[0].classList.remove(`${this.navigationItemClass}--selected`);\n                let newSelectedIndex = this.getSelectedDot();\n                if (this.totTranslate === -this.translateContainer - this.containerWidth) newSelectedIndex = this.navDots.length - 1;\n                this.navDots[newSelectedIndex].classList.add(`${this.navigationItemClass}--selected`);\n            }\n            if (this.totTranslate === 0 && (this.totTranslate === -this.translateContainer - this.containerWidth || this.items.length <= this.visibItemsNb)) this.element.classList.add(this.hideControlsClass);\n            else this.element.classList.remove(this.hideControlsClass);\n        }\n        emitCarouselUpdateEvent() {\n            this.cloneList = [];\n            const clones = this.element.querySelectorAll(`.${this.cloneClass}`);\n            clones.forEach((element)=>{\n                element.classList.remove(this.cloneClass);\n                this.cloneList.push(element);\n            });\n            this.emitCarouselEvents('carousel-updated', this.cloneList);\n        }\n        carouselCreateNavigation() {\n            if (this.element.querySelectorAll(`.${this.navClass}`).length > 0) return;\n            const navigation = document.createElement('ol');\n            let navChildren = '';\n            let navClasses = '';\n            if (this.navigationPagination) navClasses = `${this.navigationClass} ${this.paginationClass} ${this.navClass}`;\n            else navClasses = `${this.navigationClass} ${this.navClass}`;\n            if (this.items.length <= this.visibItemsNb) navClasses += ` ${this.hideClass}`;\n            navigation.setAttribute('class', navClasses);\n            const dotsNr = Math.ceil(this.items.length / this.visibItemsNb);\n            const selectedDot = this.getSelectedDot();\n            const indexClass = this.navigationPagination ? '' : this.srClass;\n            for(let i = 0; i < dotsNr; i += 1){\n                const className = i === selectedDot ? `class=\"${this.navigationItemClass} ${this.navigationItemClass}--selected ${this.navItemClass}\"` : `class=\"${this.navigationItemClass} ${this.navItemClass}\"`;\n                navChildren = `${navChildren}<li ${className}><button><span class=\"${indexClass}\">${i + 1}</span></button></li>`;\n            }\n            navigation.innerHTML = navChildren;\n            this.element.appendChild(navigation);\n        }\n        carouselInitNavigationEvents() {\n            this.navigation = this.element.querySelector(`.${this.navClass}`);\n            this.navDots = this.element.querySelectorAll(`.${this.navItemClass}`);\n            this.navIdEvent = this.carouselNavigationClick.bind(this);\n            this.navigation.addEventListener('click', this.navIdEvent);\n        }\n        carouselRemoveNavigation() {\n            if (this.navigation) this.element.removeChild(this.navigation);\n            if (this.navIdEvent) this.navigation.removeEventListener('click', this.navIdEvent);\n        }\n        resetDotsNavigation() {\n            if (!this.nav) return;\n            this.carouselRemoveNavigation();\n            this.carouselCreateNavigation();\n            this.carouselInitNavigationEvents();\n        }\n        carouselNavigationClick(event) {\n            const dot = event.target.closest(`.${this.navItemClass}`);\n            if (!dot) return;\n            if (this.animating) return;\n            this.animating = true;\n            const index = Array.from(this.navDots).indexOf(dot);\n            this.selectedDotIndex = index;\n            this.selectedItem = index * this.visibItemsNb;\n            this.animateList(false, 'click');\n        }\n        getSelectedDot() {\n            return Math.ceil(this.selectedItem / this.visibItemsNb);\n        }\n        initCarouselCounter() {\n            if (this.counterTor.length > 0) this.counterTor[0].textContent = this.itemsNb;\n            this.setCounterItem();\n        }\n        setCounterItem() {\n            if (this.counter.length === 0) return;\n            let totalItems = this.selectedItem + this.visibItemsNb;\n            if (totalItems > this.items.length) totalItems = this.items.length;\n            this.counter[0].textContent = totalItems;\n        }\n        centerItems() {\n            if (!this.justifyContent) return;\n            this.list.classList.toggle(this.centerClass, this.items.length < this.visibItemsNb);\n        }\n        emitCarouselActiveItemsEvent() {\n            this.emitCarouselEvents('carousel-active-items', {\n                firstSelectedItem: this.selectedItem,\n                visibleItemsNb: this.visibItemsNb\n            });\n        }\n        emitCarouselEvents(eventName, eventDetail) {\n            const event = new CustomEvent(eventName, {\n                detail: eventDetail\n            });\n            this.element.dispatchEvent(event);\n        }\n        resetVisibilityOverflowItems(j) {\n            const itemWidth = this.containerWidth / this.items.length;\n            const delta = (window.innerWidth - itemWidth * this.visibItemsNb) / 2;\n            const overflowItems = Math.ceil(delta / itemWidth);\n            for(let i = 0; i < overflowItems; i += 1){\n                const indexPrev = j - 1 - i;\n                if (indexPrev >= 0) this.items[indexPrev].removeAttribute('tabindex');\n                const indexNext = j + this.visibItemsNb + i;\n                if (indexNext < this.items.length) this.items[indexNext].removeAttribute('tabindex');\n            }\n        }\n    }\n    /* eslint-disable max-len */ class Dialog {\n        constructor(element){\n            this.element = element;\n            this.elementWrapper = this.element.querySelector('.nsw-dialog__wrapper');\n            this.openBtn = document.querySelectorAll(`.js-open-dialog-${this.element.getAttribute('id')}`);\n            this.closeBtn = this.element.querySelectorAll('.js-close-dialog');\n            this.focusableEls = this.element.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])');\n            this.body = document.body;\n            this.openEvent = this.openDialog.bind(this);\n            this.closeEvent = this.closeDialog.bind(this);\n            this.clickEvent = this.clickDialog.bind(this);\n            this.trapEvent = this.trapFocus.bind(this);\n        }\n        init() {\n            this.controls();\n        }\n        controls() {\n            if (!this.elementWrapper) return;\n            this.openBtn.forEach((btn)=>{\n                btn.addEventListener('click', this.openEvent, false);\n            });\n            this.closeBtn.forEach((btn)=>{\n                btn.addEventListener('click', this.closeEvent, false);\n            });\n            if (this.element.classList.contains('js-dialog-dismiss')) this.element.addEventListener('click', this.clickEvent, false);\n            if (this.focusableEls.length > 0) this.focusableEls[this.focusableEls.length - 1].addEventListener('blur', this.trapEvent, false);\n        }\n        openDialog() {\n            this.element.setAttribute('aria-expanded', 'true');\n            this.element.classList.add('active');\n            this.body.classList.add('dialog-active');\n            if (this.focusableEls.length > 0) this.focusableEls[0].focus();\n        }\n        closeDialog() {\n            this.element.setAttribute('aria-expanded', 'false');\n            this.element.classList.remove('active');\n            this.body.classList.remove('dialog-active');\n        }\n        clickDialog(event) {\n            if (!this.elementWrapper.contains(event.target)) this.closeDialog();\n        }\n        trapFocus(event) {\n            event.preventDefault();\n            if (this.focusableEls.length > 0) this.focusableEls[0].focus();\n        }\n    }\n    class ExternalLink {\n        constructor(element){\n            this.element = element;\n            this.uID = uniqueId('external');\n            this.linkIcon = this.element.querySelector('.nsw-material-icons');\n            this.linkIconTitle = this.linkIcon ? this.linkIcon.getAttribute('title') : false;\n            this.linkElement = false;\n        }\n        init() {\n            if (this.element.tagName !== 'A') return;\n            this.element.classList.add('nsw-link', 'nsw-link--icon');\n            this.constructor.setAttributes(this.element, {\n                target: '_blank',\n                rel: 'noopener'\n            });\n            if (this.linkIcon) this.constructor.setAttributes(this.linkIcon, {\n                focusable: 'false',\n                'aria-hidden': 'true'\n            });\n            if (this.linkIconTitle) this.createElement(this.linkIconTitle);\n        }\n        createElement(title) {\n            if (title) {\n                this.linkElement = document.createElement('span');\n                this.linkElement.id = this.uID;\n                this.linkElement.classList.add('sr-only');\n                this.linkElement.innerText = title;\n                this.element.insertAdjacentElement('afterend', this.linkElement);\n                this.constructor.setAttributes(this.element, {\n                    'aria-describedby': this.uID\n                });\n            }\n        }\n        static setAttributes(el, attrs) {\n            Object.keys(attrs).forEach((key)=>el.setAttribute(key, attrs[key]));\n        }\n    }\n    /* eslint-disable max-len */ class FileUpload {\n        constructor(element){\n            this.element = element;\n            this.input = this.element.querySelector('input.nsw-file-upload__input');\n            this.label = this.element.querySelector('label.nsw-file-upload__label');\n            this.multipleUpload = this.input && this.input.hasAttribute('multiple');\n            this.replaceFiles = this.element.hasAttribute('data-replace-files');\n            this.filesList = null;\n        }\n        init() {\n            if (!this.input) return;\n            if (!this.label) {\n                const label = document.createElement('label');\n                label.htmlFor = this.input.id;\n                label.classList.add('nsw-file-upload__label', 'nsw-button', 'nsw-button--dark-outline-solid');\n                label.textContent = 'Select file';\n                this.element.insertAdjacentElement('beforeend', label);\n                this.label = this.element.querySelector('label.nsw-file-upload__label');\n            }\n            this.input.addEventListener('change', this.handleInputChange.bind(this));\n            this.element.addEventListener('click', this.handleFileRemove.bind(this));\n        }\n        handleInputChange() {\n            this.updateFileList();\n        }\n        createFileList() {\n            const ul = document.createElement('ul');\n            ul.classList.add('nsw-file-upload__list');\n            this.label.insertAdjacentElement('afterend', ul);\n            this.filesList = this.element.querySelector('.nsw-file-upload__list');\n        }\n        createFileItem(file) {\n            const li = document.createElement('li');\n            li.classList.add('nsw-file-upload__item');\n            const html = `\n      <span class=\"nsw-file-upload__item-filename\"></span>\n      <button type=\"button\" class=\"nsw-icon-button\">\n        <span class=\"sr-only\">Remove file</span>\n        <span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">cancel</span>\n      </button>`;\n            li.insertAdjacentHTML('afterbegin', html);\n            li.querySelector('.nsw-file-upload__item-filename').textContent = this.constructor.truncateString(file.name, 50);\n            li.querySelector('.nsw-file-upload__item-filename').dataset.filename = file.name;\n            return li.outerHTML;\n        }\n        updateFileList() {\n            if (this.input.files.length === 0) {\n                // If there are previously stored files, re-sync the input and exit.\n                if (this.currentFiles && this.currentFiles.files && this.currentFiles.files.length > 0) {\n                    this.input.files = this.currentFiles.files;\n                    return;\n                }\n                // Clear list if otherwise\n                if (this.filesList) {\n                    this.filesList.innerHTML = '';\n                    this.filesList.classList.remove('active');\n                }\n                return;\n            }\n            if (!this.filesList) this.createFileList();\n            this.filesList.classList.add('active');\n            const dataTransfer = new DataTransfer();\n            const existingFiles = new Set();\n            if (this.replaceFiles) {\n                this.filesList.innerHTML = '';\n                this.currentFiles = new DataTransfer();\n            }\n            // Collect existing files to maintain them in the list (if multiple is allowed)\n            if (this.multipleUpload && this.currentFiles && this.currentFiles.files) for(let i = 0; i < this.currentFiles.files.length; i += 1){\n                const file = this.currentFiles.files[i];\n                dataTransfer.items.add(file);\n                existingFiles.add(file.name);\n            }\n            let fileListHTML = '';\n            // Add only new files\n            for(let i = 0; i < this.input.files.length; i += 1){\n                const file = this.input.files[i];\n                if (!existingFiles.has(file.name)) {\n                    dataTransfer.items.add(file);\n                    fileListHTML += this.createFileItem(file);\n                }\n            }\n            this.currentFiles = dataTransfer;\n            if (fileListHTML) this.filesList.insertAdjacentHTML('beforeend', fileListHTML);\n            this.input.files = this.currentFiles.files;\n        }\n        handleFileRemove(event) {\n            if (!event.target.closest('.nsw-icon-button')) return;\n            event.preventDefault();\n            const item = event.target.closest('.nsw-file-upload__item');\n            const { filename } = item.querySelector('.nsw-file-upload__item-filename').dataset;\n            const dataTransfer = new DataTransfer();\n            for(let i = 0; i < this.currentFiles.files.length; i += 1){\n                const file = this.currentFiles.files[i];\n                if (file.name !== filename) dataTransfer.items.add(file);\n            }\n            this.currentFiles = dataTransfer;\n            this.input.files = this.currentFiles.files;\n            item.remove();\n            if (this.filesList.children.length === 0) this.filesList.classList.remove('active');\n        }\n        static truncateString(str, num) {\n            return str.length <= num ? str : `${str.slice(0, num)}...`;\n        }\n    }\n    /* eslint-disable max-len */ class Filters {\n        constructor(element){\n            this.element = element;\n            // Classes\n            this.hideClass = 'nsw-display-none';\n            this.showClass = 'active';\n            this.openClass = 'filters-open';\n            this.prefix = 'nsw-';\n            this.class = 'filters';\n            this.controlsClass = `${this.class}__controls`;\n            this.wrapperClass = `${this.class}__wrapper`;\n            this.listClass = `${this.class}__list`;\n            this.itemClass = `${this.class}__item`;\n            this.resetClass = `${this.class}__cancel`;\n            this.submitClass = `${this.class}__accept`;\n            this.closeClass = `${this.class}__back`;\n            this.countClass = `${this.class}__count`;\n            this.allClass = `${this.class}__all`;\n            this.moreClass = `${this.class}__more`;\n            // Elements\n            this.count = this.element.querySelector(`.js-${this.countClass}`);\n            this.controls = this.element.querySelector(`.${this.prefix}${this.controlsClass}`);\n            this.controlsButton = this.controls && this.controls.querySelector('button');\n            this.controlsButtonIcons = this.controlsButton && this.controlsButton.querySelectorAll('span');\n            this.controlsButtonText = this.controlsButton && this.controlsButton.querySelector('span:not(.nsw-material-icons)');\n            this.controlsButtonTextContent = this.controlsButton && this.controlsButtonText.innerText;\n            this.wrapper = this.element.querySelector(`.${this.prefix}${this.wrapperClass}`);\n            this.closeButton = this.wrapper && this.wrapper.querySelector(`.${this.prefix}${this.closeClass} button`);\n            this.submitButton = this.wrapper && this.wrapper.querySelector(`.${this.prefix}${this.submitClass} button`);\n            this.resetButton = this.wrapper && this.wrapper.querySelector(`.${this.prefix}${this.resetClass} button`);\n            this.items = this.wrapper && this.wrapper.querySelectorAll(`.${this.prefix}${this.itemClass}`);\n            this.accordionButtons = this.wrapper && this.wrapper.querySelectorAll(`.${this.prefix}${this.itemClass}-button`);\n            this.showMoreContent = this.element.querySelectorAll(`.${this.prefix}${this.allClass}`);\n            this.showMoreButtons = this.element.querySelectorAll(`.${this.prefix}${this.moreClass}`);\n            this.focusableElements = 'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])';\n            // Get default selected option\n            this.selectedOption = this.element.querySelector('option[selected]');\n            // Accordion arrays\n            this.buttons = [];\n            this.content = [];\n            this.options = [];\n            this.selected = [];\n        }\n        init() {\n            this.element.classList.add('ready');\n            if (this.accordionButtons) this.accordionButtons.forEach((button)=>{\n                const buttonElem = button;\n                const uID = uniqueId('collapsed');\n                buttonElem.setAttribute('type', 'button');\n                buttonElem.setAttribute('aria-expanded', 'false');\n                buttonElem.setAttribute('aria-controls', uID);\n                const label = buttonElem.querySelector(`.${this.prefix}${this.itemClass}-name`);\n                buttonElem.setAttribute('data-label', label.innerText);\n                const contentElem = buttonElem.nextElementSibling;\n                contentElem.id = buttonElem.getAttribute('aria-controls');\n                contentElem.hidden = true;\n                this.content.push(contentElem);\n                this.buttons.push(buttonElem);\n            });\n            this.updateDom();\n            this.initEvents();\n        }\n        initEvents() {\n            document.addEventListener('DOMContentLoaded', ()=>{\n                this.updateDom();\n            });\n            if (this.options) this.options.forEach((element)=>{\n                element.addEventListener('change', ()=>{\n                    this.updateDom();\n                });\n            });\n            if (this.controlsButton) this.controlsButton.addEventListener('click', (event)=>{\n                this.showFilters(event);\n            });\n            if (this.submitButton) this.submitButton.disabled = true;\n            if (this.closeButton) this.closeButton.addEventListener('click', (event)=>{\n                this.closeFilters(event);\n            });\n            if (this.buttons) this.buttons.forEach((element)=>{\n                element.addEventListener('click', (event)=>{\n                    this.toggleAccordion(event);\n                });\n            });\n            if (this.resetButton) {\n                this.resetButton.addEventListener('click', (event)=>{\n                    this.clearAll(event);\n                });\n                this.resetButton.addEventListener('change', (event)=>{\n                    this.clearAll(event);\n                });\n            }\n            if (this.showMoreButtons) this.showMoreButtons.forEach((element, index)=>{\n                element.addEventListener('click', (event)=>{\n                    this.showMore(event, index);\n                });\n            });\n        }\n        setAccordionState(element, state) {\n            const targetContent = this.getTargetContent(element);\n            const firstfocusable = targetContent.querySelector(this.focusableElements);\n            if (state === 'open') {\n                element.classList.add(this.showClass);\n                element.setAttribute('aria-expanded', 'true');\n                targetContent.hidden = false;\n                this.constructor.moveFocusFn(firstfocusable);\n            } else if (state === 'close') {\n                element.classList.remove(this.showClass);\n                element.setAttribute('aria-expanded', 'false');\n                targetContent.hidden = true;\n            }\n        }\n        toggleAccordion(event) {\n            const { currentTarget } = event;\n            const targetContent = this.getTargetContent(currentTarget);\n            if (targetContent.hidden) this.setAccordionState(currentTarget, 'open');\n            else this.setAccordionState(currentTarget, 'close');\n        }\n        getTargetContent(element) {\n            const currentIndex = this.buttons.indexOf(element);\n            return this.content[currentIndex];\n        }\n        toggleSubmit(array) {\n            if (this.submitButton) {\n                if (array.length > 0) this.submitButton.disabled = false;\n                else this.submitButton.disabled = true;\n            }\n        }\n        showMore(event, index) {\n            event.preventDefault();\n            const firstfocusable = this.showMoreContent[index].querySelector(this.focusableElements);\n            this.showMoreContent[index].classList.remove(this.hideClass);\n            event.target.classList.add(this.hideClass);\n            this.constructor.moveFocusFn(firstfocusable);\n        }\n        closeFilters(event) {\n            event.preventDefault();\n            this.element.classList.remove(this.showClass);\n            document.body.classList.remove(this.openClass);\n        }\n        showFilters(event) {\n            event.preventDefault();\n            if (this.element.classList.contains('nsw-filters--down')) this.element.classList.toggle(this.showClass);\n            else {\n                this.trapFocus(this.wrapper);\n                this.element.classList.add(this.showClass);\n                document.body.classList.add(this.openClass);\n            }\n        }\n        clearAll(event) {\n            event.preventDefault();\n            const simulateEvent = new MouseEvent('change', {\n                view: window,\n                bubbles: true,\n                cancelable: true\n            });\n            const multiSelect = this.element.querySelector('.js-multi-select');\n            const multiSelectAll = multiSelect && multiSelect.querySelector('.js-multi-select__all');\n            const multiSelectOptions = multiSelect && multiSelect.querySelectorAll('.js-multi-select__option');\n            if (this.options.length > 0) this.options.forEach((input)=>{\n                const option = input;\n                if (option.type === 'text') option.value = '';\n                else if (option.type === 'select-one') {\n                    if (this.selectedOption) {\n                        console.log(Array.from(option.options).indexOf(this.selectedOption));\n                        option.selectedIndex = Array.from(option.options).indexOf(this.selectedOption);\n                    } else option.selectedIndex = 0;\n                } else if (option.type === 'checkbox') {\n                    if (option.defaultChecked) option.checked = true;\n                    else option.checked = false;\n                } else if (!option.parentElement.classList.contains('js-multi-select__option')) option.value = false;\n            });\n            if (multiSelect) {\n                multiSelectAll.classList.remove(this.showClass);\n                multiSelectOptions.forEach((element)=>{\n                    element.setAttribute('aria-selected', 'true');\n                    element.dispatchEvent(new Event(simulateEvent));\n                    element.click();\n                });\n            }\n            this.updateDom();\n        }\n        getOptions() {\n            this.options = [];\n            if (this.items) this.items.forEach((element)=>{\n                const content = element.querySelector(`.${this.prefix}${this.itemClass}-content`);\n                const textInputs = content.querySelectorAll('input[type=\"text\"]');\n                const singleSelects = content.querySelectorAll('select:not([multiple]):not(.nsw-display-none)');\n                const multiSelects = content.querySelectorAll('select[multiple]:not(.nsw-display-none)');\n                const checkboxes = content.querySelectorAll('input[type=\"checkbox\"]');\n                this.options.push(...textInputs, ...singleSelects, ...checkboxes, ...multiSelects);\n            });\n        }\n        getSelected() {\n            this.selected = [];\n            if (this.options.length > 0) {\n                const select = this.options.filter((option)=>option.type === 'select-one' && option.value !== '');\n                const checkboxes = this.options.filter((option)=>option.checked);\n                const text = this.options.filter((option)=>option.type === 'text' && option.value !== '');\n                const multiple = this.options.filter((option)=>option.type === 'select-multiple' && option.value !== '');\n                const selectMultiple = this.constructor.getMultiSelectValues(multiple);\n                this.selected = [\n                    ...select,\n                    ...checkboxes,\n                    ...text,\n                    ...selectMultiple\n                ];\n            }\n        }\n        selectedCount(array) {\n            if (!this.count) return;\n            const dateInputs = array.filter((option)=>option.closest('.nsw-form__date'));\n            const removedDateInputs = array.filter((option)=>!option.closest('.nsw-form__date'));\n            let buttonText = `${this.controlsButtonTextContent}`;\n            let countText = '';\n            if (dateInputs.length > 0) countText = ` (${removedDateInputs.length + 1})`;\n            else countText = ` (${array.length})`;\n            if (dateInputs.length === 0 && array.length === 0) this.controlsButtonText.innerText = buttonText;\n            else {\n                buttonText += countText;\n                this.controlsButtonText.innerText = buttonText;\n            }\n        }\n        setSelectedState() {\n            const formElements = 'textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled]):not(.nsw-display-none)';\n            const checkIcon = '<span class=\"material-icons nsw-material-icons nsw-material-icons--valid\" focusable=\"false\" aria-hidden=\"true\">check_circle</span>';\n            this.buttons.forEach((element)=>{\n                const buttonName = element.querySelector(`.${this.prefix}${this.itemClass}-name`);\n                const label = element.getAttribute('data-label');\n                const content = element.nextElementSibling;\n                const values = content.querySelectorAll(formElements);\n                const selected = Array.from(values).filter((field)=>{\n                    if (field.type === 'checkbox' || field.type === 'radio') return field.checked;\n                    return field.value !== '';\n                });\n                if (selected.length > 0) {\n                    buttonName.innerText = label;\n                    buttonName.innerHTML = `${label} ${checkIcon}`;\n                } else if (selected.length === 0) buttonName.innerText = label;\n            });\n        }\n        updateDom() {\n            this.getOptions();\n            this.getSelected();\n            this.toggleSubmit(this.selected);\n            this.selectedCount(this.selected);\n            this.setSelectedState();\n        }\n        trapFocus(element) {\n            const focusableContent = element.querySelectorAll(this.focusableElements);\n            const firstFocusableElement = focusableContent[0];\n            const lastFocusableElement = focusableContent[focusableContent.length - 1];\n            document.addEventListener('keydown', (event)=>{\n                const tab = event.code && event.code === 9 || event.key && event.key === 'Tab';\n                if (!tab) return;\n                if (document.activeElement === firstFocusableElement && event.shiftKey) {\n                    event.preventDefault();\n                    lastFocusableElement.focus();\n                }\n                if (document.activeElement === lastFocusableElement && !event.shiftKey) {\n                    event.preventDefault();\n                    firstFocusableElement.focus();\n                }\n            });\n            firstFocusableElement.focus();\n        }\n        static getMultiSelectValues(array) {\n            let selectedOptions = [];\n            if (array.length > 0) array.forEach((element)=>{\n                selectedOptions = Array.from(element.options).filter((option)=>option.selected);\n            });\n            return selectedOptions;\n        }\n        static moveFocusFn(element) {\n            element.focus();\n            if (document.activeElement !== element) {\n                element.setAttribute('tabindex', '-1');\n                element.focus();\n            }\n        }\n    }\n    class GlobalAlert {\n        constructor(element){\n            this.element = element;\n            this.closeButton = this.element.querySelector('button.js-close-alert');\n            this.cookieName = this.element.getAttribute('data-cookie-name') || false;\n        }\n        init() {\n            if (this.cookieName && this.constructor.getCookie(this.cookieName)) {\n                this.element.hidden = true;\n                return;\n            }\n            if (this.closeButton) this.controls();\n        }\n        controls() {\n            this.closeButton.addEventListener('click', ()=>{\n                this.closeMessage();\n            });\n        }\n        closeMessage() {\n            this.element.hidden = true;\n            if (this.cookieName) this.constructor.setCookie(this.cookieName, 'dismissed', 7);\n        }\n        static setCookie(name, value, days) {\n            const date = new Date();\n            date.setTime(date.getTime() + days * 86400000);\n            const expires = `expires=${date.toUTCString()}`;\n            document.cookie = `${name}=${value};${expires};path=/`;\n        }\n        static getCookie(name) {\n            const nameEQ = `${name}=`;\n            const ca = document.cookie.split(';');\n            for(let i = 0; i < ca.length; i += 1){\n                let c = ca[i];\n                while(c.charAt(0) === ' ')c = c.substring(1, c.length);\n                if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n            }\n            return null;\n        }\n    }\n    class Navigation {\n        constructor(element){\n            this.nav = element;\n            this.navID = this.nav.id;\n            this.openNavButton = document.querySelector('.js-open-nav');\n            this.closeNavButtons = this.nav.querySelectorAll('.js-close-nav');\n            this.closeSubNavButtons = this.nav.querySelectorAll('.js-close-sub-nav');\n            this.isMegaMenuElement = this.nav.classList.contains('js-mega-menu');\n            this.mainNavIsOpen = false;\n            this.transitionEvent = whichTransitionEvent();\n            this.mobileShowMainTransitionEndEvent = (e)=>this.mobileShowMainNav(e);\n            this.mobileHideMainTransitionEndEvent = (e)=>this.mobileHideMainNav(e);\n            this.showSubNavTransitionEndEvent = (e)=>this.showSubNav(e);\n            this.mobileTrapTabKeyEvent = (e)=>this.mobileMainNavTrapTabs(e);\n            this.mobileSubNavTrapTabKeyEvent = (e)=>this.trapkeyEventStuff(e);\n            this.desktopButtonClickEvent = (e)=>this.buttonClickDesktop(e);\n            this.desktopButtonKeydownEvent = (e)=>this.buttonKeydownDesktop(e);\n            this.checkFocusEvent = (e)=>this.checkIfContainsFocus(e);\n            this.openSubNavElements = [];\n            this.breakpoint = window.matchMedia('(min-width: 62em)');\n        }\n        init() {\n            this.initEvents();\n            this.responsiveCheck(this.breakpoint);\n            if (this.nav) this.breakpoint.addEventListener('change', (event)=>this.responsiveCheck(event));\n        }\n        initEvents() {\n            if (this.isMegaMenuElement) {\n                document.addEventListener('click', this.handleOutsideClick.bind(this), false);\n                document.addEventListener('keydown', this.escapeClose.bind(this), false);\n            }\n            if (this.openNavButton) this.openNavButton.addEventListener('click', this.mobileToggleMainNav.bind(this), false);\n            this.closeNavButtons.forEach((element)=>{\n                element.addEventListener('click', this.mobileToggleMainNav.bind(this), false);\n            });\n            this.closeSubNavButtons.forEach((element)=>{\n                element.addEventListener('click', this.closeSubNav.bind(this), false);\n            });\n        }\n        responsiveCheck(event) {\n            let megaMenuListItems = [];\n            if (event.matches) {\n                megaMenuListItems = [].slice.call(this.nav.querySelectorAll('ul > li'));\n                document.body.classList.remove('main-nav-active');\n            } else megaMenuListItems = [].slice.call(this.nav.querySelectorAll('li'));\n            this.tearDownNavControls();\n            this.setUpNavControls(megaMenuListItems);\n        }\n        handleOutsideClick(event) {\n            // removes handleOutsideClick functionality from docs site\n            if (this.nav.closest('.nsw-docs')) return;\n            if (!this.mainNavIsOpen) return;\n            const isOutsideNav = !this.nav.contains(event.target);\n            if (isOutsideNav) this.toggleSubNavDesktop(true);\n        }\n        tearDownNavControls() {\n            if (this.isMegaMenuElement) {\n                const listItems = [].slice.call(this.nav.querySelectorAll('li'));\n                listItems.forEach((item)=>{\n                    const submenu = item.querySelector('[id^=sub-nav-]');\n                    const link = item.querySelector('a');\n                    if (submenu) {\n                        link.removeAttribute('role');\n                        link.removeAttribute('aria-expanded');\n                        link.removeAttribute('aria-controls');\n                        link.removeEventListener('click', this.desktopButtonClickEvent, false);\n                        link.removeEventListener('keydown', this.desktopButtonKeydownEvent, false);\n                    }\n                });\n            }\n        }\n        setUpNavControls(listItems) {\n            if (this.isMegaMenuElement) listItems.forEach((item)=>{\n                const submenu = item.querySelector('[id^=sub-nav-]');\n                const link = item.querySelector('a');\n                if (submenu) {\n                    link.setAttribute('role', 'button');\n                    link.setAttribute('aria-expanded', 'false');\n                    link.setAttribute('aria-controls', submenu.id);\n                    link.addEventListener('click', this.desktopButtonClickEvent, false);\n                    link.addEventListener('keydown', this.desktopButtonKeydownEvent, false);\n                }\n            });\n        }\n        mobileMainNavTrapTabs(e) {\n            const elemObj = getFocusableElementBySelector(this.navID, [\n                '> div button',\n                '> ul > li > a'\n            ]);\n            trapTabKey(e, elemObj);\n        }\n        mobileShowMainNav(_ref) {\n            let { propertyName } = _ref;\n            if (propertyName !== 'transform') return;\n            getFocusableElementBySelector(this.navID, [\n                '> div button',\n                '> ul > li > a'\n            ]).all[1].focus();\n            this.nav.classList.add('active');\n            this.nav.classList.remove('activating');\n            this.nav.removeEventListener(this.transitionEvent, this.mobileShowMainTransitionEndEvent, false);\n            this.nav.addEventListener('keydown', this.mobileTrapTabKeyEvent, false);\n        }\n        mobileHideMainNav(_ref2) {\n            let { propertyName } = _ref2;\n            if (propertyName !== 'transform') return;\n            this.nav.classList.remove('active');\n            this.nav.classList.remove('closing');\n            while(this.openSubNavElements.length > 0){\n                const { submenu } = this.whichSubNavLatest();\n                submenu.removeEventListener('keydown', this.mobileSubNavTrapTabKeyEvent, false);\n                submenu.classList.remove('active');\n                submenu.classList.remove('closing');\n                this.openSubNavElements.pop();\n            }\n            this.nav.removeEventListener(this.transitionEvent, this.mobileHideMainTransitionEndEvent, false);\n            this.nav.removeEventListener('keydown', this.mobileTrapTabKeyEvent, false);\n        }\n        mobileToggleMainNav(e) {\n            const { currentTarget } = e;\n            const isExpanded = currentTarget.getAttribute('aria-expanded') === 'true';\n            if (isExpanded) {\n                document.body.classList.remove('main-nav-active');\n                this.openNavButton.focus();\n                this.nav.classList.add('closing');\n                this.nav.addEventListener(this.transitionEvent, this.mobileHideMainTransitionEndEvent, false);\n            } else {\n                document.body.classList.add('main-nav-active');\n                this.nav.classList.add('activating');\n                this.nav.addEventListener(this.transitionEvent, this.mobileShowMainTransitionEndEvent, false);\n            }\n        }\n        buttonClickDesktop(event) {\n            const isDesktop = this.breakpoint.matches;\n            if (!isDesktop || !event.target.closest('.nsw-main-nav__sub-nav')) {\n                this.saveElements(event);\n                this.toggleSubNavDesktop();\n                event.preventDefault();\n            }\n        }\n        buttonKeydownDesktop(event) {\n            if (event.key === ' ' || event.key === 'Enter' || event.key === 'Spacebar') {\n                this.saveElements(event);\n                this.toggleSubNavDesktop();\n                event.preventDefault();\n            }\n        }\n        escapeClose(e) {\n            if (e.key === 'Escape') {\n                // removes handleOutsideClick functionality from docs site\n                if (this.nav.closest('.nsw-docs')) return;\n                const { link } = this.whichSubNavLatest();\n                const isExpanded = link.getAttribute('aria-expanded') === 'true';\n                if (isExpanded) {\n                    this.toggleSubNavDesktop(true);\n                    e.preventDefault();\n                    link.focus();\n                }\n            }\n        }\n        saveElements(e) {\n            const { currentTarget } = e;\n            const temp = {\n                submenu: document.getElementById(currentTarget.getAttribute('aria-controls')),\n                link: currentTarget,\n                linkParent: currentTarget.parentNode\n            };\n            this.openSubNavElements.push(temp);\n        }\n        showSubNav(_ref3) {\n            let { propertyName } = _ref3;\n            const { submenu } = this.whichSubNavLatest();\n            if (propertyName !== 'transform') return;\n            getFocusableElementBySelector(submenu.id, [\n                '> div button',\n                '> .nsw-main-nav__title a',\n                '> ul > li > a'\n            ]).all[2].focus();\n            submenu.removeEventListener(this.transitionEvent, this.showSubNavTransitionEndEvent, false);\n        }\n        closeSubNav() {\n            const { submenu, link } = this.whichSubNavLatest();\n            if (this.breakpoint.matches) {\n                link.setAttribute('aria-expanded', false);\n                link.classList.remove('active');\n                this.nav.removeEventListener('focus', this.checkFocusEvent, true);\n                // fix: workaround for safari because it doesn't support focus event\n                this.nav.removeEventListener('click', this.checkFocusEvent, true);\n            } else {\n                link.focus();\n                submenu.removeEventListener('keydown', this.mobileSubNavTrapTabKeyEvent, false);\n            }\n            submenu.classList.remove('active');\n            submenu.closest('ul').parentElement.classList.remove('no-scroll');\n            this.openSubNavElements.pop();\n        }\n        openSubNav() {\n            const { submenu, link } = this.whichSubNavLatest();\n            if (this.breakpoint.matches) {\n                link.setAttribute('aria-expanded', true);\n                link.classList.add('active');\n                this.nav.addEventListener('focus', this.checkFocusEvent, true);\n                // fix: workaround for safari because it doesn't support focus event\n                this.nav.addEventListener('click', this.checkFocusEvent, true);\n            } else {\n                submenu.addEventListener('keydown', this.mobileSubNavTrapTabKeyEvent, false);\n                submenu.addEventListener(this.transitionEvent, this.showSubNavTransitionEndEvent, false);\n            }\n            submenu.closest('ul').parentElement.scrollTop = 0;\n            submenu.closest('ul').parentElement.classList.add('no-scroll');\n            submenu.classList.add('active');\n        }\n        toggleSubNavDesktop() {\n            const { link } = this.whichSubNavLatest();\n            const isExpanded = link.getAttribute('aria-expanded') === 'true';\n            if (isExpanded) {\n                this.mainNavIsOpen = false;\n                this.closeSubNav();\n            } else {\n                this.mainNavIsOpen = true;\n                this.openSubNav();\n            }\n        }\n        checkIfContainsFocus(e) {\n            const { linkParent } = this.whichSubNavLatest();\n            const focusWithin = linkParent.contains(e.target);\n            const isButton = e.target.closest('a').getAttribute('role') === 'button';\n            if (!focusWithin && isButton) this.toggleSubNavDesktop();\n        }\n        whichSubNavLatest() {\n            const lastSubNav = this.openSubNavElements.length - 1;\n            return this.openSubNavElements[lastSubNav];\n        }\n        trapkeyEventStuff(e) {\n            const { submenu } = this.whichSubNavLatest();\n            const elemObj = getFocusableElementBySelector(submenu.id, [\n                '> div button',\n                '> ul > li > a'\n            ]);\n            trapTabKey(e, elemObj);\n        }\n    }\n    /**\n   * Custom positioning reference element.\n   * @see https://floating-ui.com/docs/virtual-elements\n   */ const min = Math.min;\n    const max = Math.max;\n    const round = Math.round;\n    const createCoords = (v)=>({\n            x: v,\n            y: v\n        });\n    const oppositeSideMap = {\n        left: 'right',\n        right: 'left',\n        bottom: 'top',\n        top: 'bottom'\n    };\n    const oppositeAlignmentMap = {\n        start: 'end',\n        end: 'start'\n    };\n    function clamp(start, value, end) {\n        return max(start, min(value, end));\n    }\n    function evaluate(value, param) {\n        return typeof value === 'function' ? value(param) : value;\n    }\n    function getSide(placement) {\n        return placement.split('-')[0];\n    }\n    function getAlignment(placement) {\n        return placement.split('-')[1];\n    }\n    function getOppositeAxis(axis) {\n        return axis === 'x' ? 'y' : 'x';\n    }\n    function getAxisLength(axis) {\n        return axis === 'y' ? 'height' : 'width';\n    }\n    function getSideAxis(placement) {\n        return [\n            'top',\n            'bottom'\n        ].includes(getSide(placement)) ? 'y' : 'x';\n    }\n    function getAlignmentAxis(placement) {\n        return getOppositeAxis(getSideAxis(placement));\n    }\n    function getAlignmentSides(placement, rects, rtl) {\n        if (rtl === void 0) rtl = false;\n        const alignment = getAlignment(placement);\n        const alignmentAxis = getAlignmentAxis(placement);\n        const length = getAxisLength(alignmentAxis);\n        let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n        if (rects.reference[length] > rects.floating[length]) mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n        return [\n            mainAlignmentSide,\n            getOppositePlacement(mainAlignmentSide)\n        ];\n    }\n    function getExpandedPlacements(placement) {\n        const oppositePlacement = getOppositePlacement(placement);\n        return [\n            getOppositeAlignmentPlacement(placement),\n            oppositePlacement,\n            getOppositeAlignmentPlacement(oppositePlacement)\n        ];\n    }\n    function getOppositeAlignmentPlacement(placement) {\n        return placement.replace(/start|end/g, (alignment)=>oppositeAlignmentMap[alignment]);\n    }\n    function getSideList(side, isStart, rtl) {\n        const lr = [\n            'left',\n            'right'\n        ];\n        const rl = [\n            'right',\n            'left'\n        ];\n        const tb = [\n            'top',\n            'bottom'\n        ];\n        const bt = [\n            'bottom',\n            'top'\n        ];\n        switch(side){\n            case 'top':\n            case 'bottom':\n                if (rtl) return isStart ? rl : lr;\n                return isStart ? lr : rl;\n            case 'left':\n            case 'right':\n                return isStart ? tb : bt;\n            default:\n                return [];\n        }\n    }\n    function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n        const alignment = getAlignment(placement);\n        let list = getSideList(getSide(placement), direction === 'start', rtl);\n        if (alignment) {\n            list = list.map((side)=>side + \"-\" + alignment);\n            if (flipAlignment) list = list.concat(list.map(getOppositeAlignmentPlacement));\n        }\n        return list;\n    }\n    function getOppositePlacement(placement) {\n        return placement.replace(/left|right|bottom|top/g, (side)=>oppositeSideMap[side]);\n    }\n    function expandPaddingObject(padding) {\n        return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            ...padding\n        };\n    }\n    function getPaddingObject(padding) {\n        return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n            top: padding,\n            right: padding,\n            bottom: padding,\n            left: padding\n        };\n    }\n    function rectToClientRect(rect) {\n        const { x, y, width, height } = rect;\n        return {\n            width,\n            height,\n            top: y,\n            left: x,\n            right: x + width,\n            bottom: y + height,\n            x,\n            y\n        };\n    }\n    function computeCoordsFromPlacement(_ref, placement, rtl) {\n        let { reference, floating } = _ref;\n        const sideAxis = getSideAxis(placement);\n        const alignmentAxis = getAlignmentAxis(placement);\n        const alignLength = getAxisLength(alignmentAxis);\n        const side = getSide(placement);\n        const isVertical = sideAxis === 'y';\n        const commonX = reference.x + reference.width / 2 - floating.width / 2;\n        const commonY = reference.y + reference.height / 2 - floating.height / 2;\n        const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n        let coords;\n        switch(side){\n            case 'top':\n                coords = {\n                    x: commonX,\n                    y: reference.y - floating.height\n                };\n                break;\n            case 'bottom':\n                coords = {\n                    x: commonX,\n                    y: reference.y + reference.height\n                };\n                break;\n            case 'right':\n                coords = {\n                    x: reference.x + reference.width,\n                    y: commonY\n                };\n                break;\n            case 'left':\n                coords = {\n                    x: reference.x - floating.width,\n                    y: commonY\n                };\n                break;\n            default:\n                coords = {\n                    x: reference.x,\n                    y: reference.y\n                };\n        }\n        switch(getAlignment(placement)){\n            case 'start':\n                coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n                break;\n            case 'end':\n                coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n                break;\n        }\n        return coords;\n    }\n    /**\n   * Computes the `x` and `y` coordinates that will place the floating element\n   * next to a given reference element.\n   *\n   * This export does not have any `platform` interface logic. You will need to\n   * write one for the platform you are using Floating UI with.\n   */ const computePosition$1 = async (reference, floating, config)=>{\n        const { placement = 'bottom', strategy = 'absolute', middleware = [], platform } = config;\n        const validMiddleware = middleware.filter(Boolean);\n        const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n        let rects = await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n        });\n        let { x, y } = computeCoordsFromPlacement(rects, placement, rtl);\n        let statefulPlacement = placement;\n        let middlewareData = {};\n        let resetCount = 0;\n        for(let i = 0; i < validMiddleware.length; i++){\n            const { name, fn } = validMiddleware[i];\n            const { x: nextX, y: nextY, data, reset } = await fn({\n                x,\n                y,\n                initialPlacement: placement,\n                placement: statefulPlacement,\n                strategy,\n                middlewareData,\n                rects,\n                platform,\n                elements: {\n                    reference,\n                    floating\n                }\n            });\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = {\n                ...middlewareData,\n                [name]: {\n                    ...middlewareData[name],\n                    ...data\n                }\n            };\n            if (reset && resetCount <= 50) {\n                resetCount++;\n                if (typeof reset === 'object') {\n                    if (reset.placement) statefulPlacement = reset.placement;\n                    if (reset.rects) rects = reset.rects === true ? await platform.getElementRects({\n                        reference,\n                        floating,\n                        strategy\n                    }) : reset.rects;\n                    ({ x, y } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n                }\n                i = -1;\n            }\n        }\n        return {\n            x,\n            y,\n            placement: statefulPlacement,\n            strategy,\n            middlewareData\n        };\n    };\n    /**\n   * Resolves with an object of overflow side offsets that determine how much the\n   * element is overflowing a given clipping boundary on each side.\n   * - positive = overflowing the boundary by that number of pixels\n   * - negative = how many pixels left before it will overflow\n   * - 0 = lies flush with the boundary\n   * @see https://floating-ui.com/docs/detectOverflow\n   */ async function detectOverflow(state, options) {\n        var _await$platform$isEle;\n        if (options === void 0) options = {};\n        const { x, y, platform, rects, elements, strategy } = state;\n        const { boundary = 'clippingAncestors', rootBoundary = 'viewport', elementContext = 'floating', altBoundary = false, padding = 0 } = evaluate(options, state);\n        const paddingObject = getPaddingObject(padding);\n        const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n        const element = elements[altBoundary ? altContext : elementContext];\n        const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n            element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating)),\n            boundary,\n            rootBoundary,\n            strategy\n        }));\n        const rect = elementContext === 'floating' ? {\n            x,\n            y,\n            width: rects.floating.width,\n            height: rects.floating.height\n        } : rects.reference;\n        const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n        const offsetScale = await (platform.isElement == null ? void 0 : platform.isElement(offsetParent)) ? await (platform.getScale == null ? void 0 : platform.getScale(offsetParent)) || {\n            x: 1,\n            y: 1\n        } : {\n            x: 1,\n            y: 1\n        };\n        const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n            elements,\n            rect,\n            offsetParent,\n            strategy\n        }) : rect);\n        return {\n            top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n            bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n            left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n            right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n        };\n    }\n    /**\n   * Provides data to position an inner element of the floating element so that it\n   * appears centered to the reference element.\n   * @see https://floating-ui.com/docs/arrow\n   */ const arrow$1 = (options)=>({\n            name: 'arrow',\n            options,\n            async fn (state) {\n                const { x, y, placement, rects, platform, elements, middlewareData } = state;\n                // Since `element` is required, we don't Partial<> the type.\n                const { element, padding = 0 } = evaluate(options, state) || {};\n                if (element == null) return {};\n                const paddingObject = getPaddingObject(padding);\n                const coords = {\n                    x,\n                    y\n                };\n                const axis = getAlignmentAxis(placement);\n                const length = getAxisLength(axis);\n                const arrowDimensions = await platform.getDimensions(element);\n                const isYAxis = axis === 'y';\n                const minProp = isYAxis ? 'top' : 'left';\n                const maxProp = isYAxis ? 'bottom' : 'right';\n                const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n                const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                const startDiff = coords[axis] - rects.reference[axis];\n                const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n                let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n                // DOM platform can return `window` as the `offsetParent`.\n                if (!clientSize || !await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent))) clientSize = elements.floating[clientProp] || rects.floating[length];\n                const centerToReference = endDiff / 2 - startDiff / 2;\n                // If the padding is large enough that it causes the arrow to no longer be\n                // centered, modify the padding so that it is centered.\n                const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n                const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n                const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n                // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds.\n                const min$1 = minPadding;\n                const max = clientSize - arrowDimensions[length] - maxPadding;\n                const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                const offset = clamp(min$1, center, max);\n                // If the reference is small enough that the arrow's padding causes it to\n                // to point to nothing for an aligned placement, adjust the offset of the\n                // floating element itself. To ensure `shift()` continues to take action,\n                // a single reset is performed when this is true.\n                const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n                const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n                return {\n                    [axis]: coords[axis] + alignmentOffset,\n                    data: {\n                        [axis]: offset,\n                        centerOffset: center - offset - alignmentOffset,\n                        ...shouldAddOffset && {\n                            alignmentOffset\n                        }\n                    },\n                    reset: shouldAddOffset\n                };\n            }\n        });\n    /**\n   * Optimizes the visibility of the floating element by flipping the `placement`\n   * in order to keep it in view when the preferred placement(s) will overflow the\n   * clipping boundary. Alternative to `autoPlacement`.\n   * @see https://floating-ui.com/docs/flip\n   */ const flip$1 = function(options) {\n        if (options === void 0) options = {};\n        return {\n            name: 'flip',\n            options,\n            async fn (state) {\n                var _middlewareData$arrow, _middlewareData$flip;\n                const { placement, middlewareData, rects, initialPlacement, platform, elements } = state;\n                const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = true, fallbackPlacements: specifiedFallbackPlacements, fallbackStrategy = 'bestFit', fallbackAxisSideDirection = 'none', flipAlignment = true, ...detectOverflowOptions } = evaluate(options, state);\n                // If a reset by the arrow was caused due to an alignment offset being\n                // added, we should skip any logic now since `flip()` has already done its\n                // work.\n                // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n                if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) return {};\n                const side = getSide(placement);\n                const initialSideAxis = getSideAxis(initialPlacement);\n                const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n                const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n                const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [\n                    getOppositePlacement(initialPlacement)\n                ] : getExpandedPlacements(initialPlacement));\n                const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n                if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n                const placements = [\n                    initialPlacement,\n                    ...fallbackPlacements\n                ];\n                const overflow = await detectOverflow(state, detectOverflowOptions);\n                const overflows = [];\n                let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n                if (checkMainAxis) overflows.push(overflow[side]);\n                if (checkCrossAxis) {\n                    const sides = getAlignmentSides(placement, rects, rtl);\n                    overflows.push(overflow[sides[0]], overflow[sides[1]]);\n                }\n                overflowsData = [\n                    ...overflowsData,\n                    {\n                        placement,\n                        overflows\n                    }\n                ];\n                // One or more sides is overflowing.\n                if (!overflows.every((side)=>side <= 0)) {\n                    var _middlewareData$flip2, _overflowsData$filter;\n                    const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                    const nextPlacement = placements[nextIndex];\n                    if (nextPlacement) // Try next placement and re-run the lifecycle.\n                    return {\n                        data: {\n                            index: nextIndex,\n                            overflows: overflowsData\n                        },\n                        reset: {\n                            placement: nextPlacement\n                        }\n                    };\n                    // First, find the candidates that fit on the mainAxis side of overflow,\n                    // then find the placement that fits the best on the main crossAxis side.\n                    let resetPlacement = (_overflowsData$filter = overflowsData.filter((d)=>d.overflows[0] <= 0).sort((a, b)=>a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n                    // Otherwise fallback.\n                    if (!resetPlacement) switch(fallbackStrategy){\n                        case 'bestFit':\n                            {\n                                var _overflowsData$filter2;\n                                const placement = (_overflowsData$filter2 = overflowsData.filter((d)=>{\n                                    if (hasFallbackAxisSideDirection) {\n                                        const currentSideAxis = getSideAxis(d.placement);\n                                        return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal\n                                        // reading directions favoring greater width.\n                                        currentSideAxis === 'y';\n                                    }\n                                    return true;\n                                }).map((d)=>[\n                                        d.placement,\n                                        d.overflows.filter((overflow)=>overflow > 0).reduce((acc, overflow)=>acc + overflow, 0)\n                                    ]).sort((a, b)=>a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                                if (placement) resetPlacement = placement;\n                                break;\n                            }\n                        case 'initialPlacement':\n                            resetPlacement = initialPlacement;\n                            break;\n                    }\n                    if (placement !== resetPlacement) return {\n                        reset: {\n                            placement: resetPlacement\n                        }\n                    };\n                }\n                return {};\n            }\n        };\n    };\n    // For type backwards-compatibility, the `OffsetOptions` type was also\n    // Derivable.\n    async function convertValueToCoords(state, options) {\n        const { placement, platform, elements } = state;\n        const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n        const side = getSide(placement);\n        const alignment = getAlignment(placement);\n        const isVertical = getSideAxis(placement) === 'y';\n        const mainAxisMulti = [\n            'left',\n            'top'\n        ].includes(side) ? -1 : 1;\n        const crossAxisMulti = rtl && isVertical ? -1 : 1;\n        const rawValue = evaluate(options, state);\n        // eslint-disable-next-line prefer-const\n        let { mainAxis, crossAxis, alignmentAxis } = typeof rawValue === 'number' ? {\n            mainAxis: rawValue,\n            crossAxis: 0,\n            alignmentAxis: null\n        } : {\n            mainAxis: 0,\n            crossAxis: 0,\n            alignmentAxis: null,\n            ...rawValue\n        };\n        if (alignment && typeof alignmentAxis === 'number') crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n        return isVertical ? {\n            x: crossAxis * crossAxisMulti,\n            y: mainAxis * mainAxisMulti\n        } : {\n            x: mainAxis * mainAxisMulti,\n            y: crossAxis * crossAxisMulti\n        };\n    }\n    /**\n   * Modifies the placement by translating the floating element along the\n   * specified axes.\n   * A number (shorthand for `mainAxis` or distance), or an axes configuration\n   * object may be passed.\n   * @see https://floating-ui.com/docs/offset\n   */ const offset$1 = function(options) {\n        if (options === void 0) options = 0;\n        return {\n            name: 'offset',\n            options,\n            async fn (state) {\n                var _middlewareData$offse, _middlewareData$arrow;\n                const { x, y, placement, middlewareData } = state;\n                const diffCoords = await convertValueToCoords(state, options);\n                // If the placement is the same and the arrow caused an alignment offset\n                // then we don't need to change the positioning coordinates.\n                if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) return {};\n                return {\n                    x: x + diffCoords.x,\n                    y: y + diffCoords.y,\n                    data: {\n                        ...diffCoords,\n                        placement\n                    }\n                };\n            }\n        };\n    };\n    /**\n   * Optimizes the visibility of the floating element by shifting it in order to\n   * keep it in view when it will overflow the clipping boundary.\n   * @see https://floating-ui.com/docs/shift\n   */ const shift$1 = function(options) {\n        if (options === void 0) options = {};\n        return {\n            name: 'shift',\n            options,\n            async fn (state) {\n                const { x, y, placement } = state;\n                const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = false, limiter = {\n                    fn: (_ref)=>{\n                        let { x, y } = _ref;\n                        return {\n                            x,\n                            y\n                        };\n                    }\n                }, ...detectOverflowOptions } = evaluate(options, state);\n                const coords = {\n                    x,\n                    y\n                };\n                const overflow = await detectOverflow(state, detectOverflowOptions);\n                const crossAxis = getSideAxis(getSide(placement));\n                const mainAxis = getOppositeAxis(crossAxis);\n                let mainAxisCoord = coords[mainAxis];\n                let crossAxisCoord = coords[crossAxis];\n                if (checkMainAxis) {\n                    const minSide = mainAxis === 'y' ? 'top' : 'left';\n                    const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                    const min = mainAxisCoord + overflow[minSide];\n                    const max = mainAxisCoord - overflow[maxSide];\n                    mainAxisCoord = clamp(min, mainAxisCoord, max);\n                }\n                if (checkCrossAxis) {\n                    const minSide = crossAxis === 'y' ? 'top' : 'left';\n                    const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                    const min = crossAxisCoord + overflow[minSide];\n                    const max = crossAxisCoord - overflow[maxSide];\n                    crossAxisCoord = clamp(min, crossAxisCoord, max);\n                }\n                const limitedCoords = limiter.fn({\n                    ...state,\n                    [mainAxis]: mainAxisCoord,\n                    [crossAxis]: crossAxisCoord\n                });\n                return {\n                    ...limitedCoords,\n                    data: {\n                        x: limitedCoords.x - x,\n                        y: limitedCoords.y - y\n                    }\n                };\n            }\n        };\n    };\n    /**\n   * Built-in `limiter` that will stop `shift()` at a certain point.\n   */ const limitShift$1 = function(options) {\n        if (options === void 0) options = {};\n        return {\n            options,\n            fn (state) {\n                const { x, y, placement, rects, middlewareData } = state;\n                const { offset = 0, mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = true } = evaluate(options, state);\n                const coords = {\n                    x,\n                    y\n                };\n                const crossAxis = getSideAxis(placement);\n                const mainAxis = getOppositeAxis(crossAxis);\n                let mainAxisCoord = coords[mainAxis];\n                let crossAxisCoord = coords[crossAxis];\n                const rawOffset = evaluate(offset, state);\n                const computedOffset = typeof rawOffset === 'number' ? {\n                    mainAxis: rawOffset,\n                    crossAxis: 0\n                } : {\n                    mainAxis: 0,\n                    crossAxis: 0,\n                    ...rawOffset\n                };\n                if (checkMainAxis) {\n                    const len = mainAxis === 'y' ? 'height' : 'width';\n                    const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n                    const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n                    if (mainAxisCoord < limitMin) mainAxisCoord = limitMin;\n                    else if (mainAxisCoord > limitMax) mainAxisCoord = limitMax;\n                }\n                if (checkCrossAxis) {\n                    var _middlewareData$offse, _middlewareData$offse2;\n                    const len = mainAxis === 'y' ? 'width' : 'height';\n                    const isOriginSide = [\n                        'top',\n                        'left'\n                    ].includes(getSide(placement));\n                    const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n                    const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n                    if (crossAxisCoord < limitMin) crossAxisCoord = limitMin;\n                    else if (crossAxisCoord > limitMax) crossAxisCoord = limitMax;\n                }\n                return {\n                    [mainAxis]: mainAxisCoord,\n                    [crossAxis]: crossAxisCoord\n                };\n            }\n        };\n    };\n    function hasWindow() {\n        return typeof window !== 'undefined';\n    }\n    function getNodeName(node) {\n        if (isNode(node)) return (node.nodeName || '').toLowerCase();\n        // Mocked nodes in testing environments may not be instances of Node. By\n        // returning `#document` an infinite loop won't occur.\n        // https://github.com/floating-ui/floating-ui/issues/2317\n        return '#document';\n    }\n    function getWindow(node) {\n        var _node$ownerDocument;\n        return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n    }\n    function getDocumentElement(node) {\n        var _ref;\n        return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n    }\n    function isNode(value) {\n        if (!hasWindow()) return false;\n        return value instanceof Node || value instanceof getWindow(value).Node;\n    }\n    function isElement(value) {\n        if (!hasWindow()) return false;\n        return value instanceof Element || value instanceof getWindow(value).Element;\n    }\n    function isHTMLElement(value) {\n        if (!hasWindow()) return false;\n        return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n    }\n    function isShadowRoot(value) {\n        if (!hasWindow() || typeof ShadowRoot === 'undefined') return false;\n        return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n    }\n    function isOverflowElement(element) {\n        const { overflow, overflowX, overflowY, display } = getComputedStyle$1(element);\n        return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && ![\n            'inline',\n            'contents'\n        ].includes(display);\n    }\n    function isTableElement(element) {\n        return [\n            'table',\n            'td',\n            'th'\n        ].includes(getNodeName(element));\n    }\n    function isTopLayer(element) {\n        return [\n            ':popover-open',\n            ':modal'\n        ].some((selector)=>{\n            try {\n                return element.matches(selector);\n            } catch (e) {\n                return false;\n            }\n        });\n    }\n    function isContainingBlock(elementOrCss) {\n        const webkit = isWebKit();\n        const css = isElement(elementOrCss) ? getComputedStyle$1(elementOrCss) : elementOrCss;\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n        // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n        return [\n            'transform',\n            'translate',\n            'scale',\n            'rotate',\n            'perspective'\n        ].some((value)=>css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || [\n            'transform',\n            'translate',\n            'scale',\n            'rotate',\n            'perspective',\n            'filter'\n        ].some((value)=>(css.willChange || '').includes(value)) || [\n            'paint',\n            'layout',\n            'strict',\n            'content'\n        ].some((value)=>(css.contain || '').includes(value));\n    }\n    function getContainingBlock(element) {\n        let currentNode = getParentNode(element);\n        while(isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)){\n            if (isContainingBlock(currentNode)) return currentNode;\n            else if (isTopLayer(currentNode)) return null;\n            currentNode = getParentNode(currentNode);\n        }\n        return null;\n    }\n    function isWebKit() {\n        if (typeof CSS === 'undefined' || !CSS.supports) return false;\n        return CSS.supports('-webkit-backdrop-filter', 'none');\n    }\n    function isLastTraversableNode(node) {\n        return [\n            'html',\n            'body',\n            '#document'\n        ].includes(getNodeName(node));\n    }\n    function getComputedStyle$1(element) {\n        return getWindow(element).getComputedStyle(element);\n    }\n    function getNodeScroll(element) {\n        if (isElement(element)) return {\n            scrollLeft: element.scrollLeft,\n            scrollTop: element.scrollTop\n        };\n        return {\n            scrollLeft: element.scrollX,\n            scrollTop: element.scrollY\n        };\n    }\n    function getParentNode(node) {\n        if (getNodeName(node) === 'html') return node;\n        const result = // Step into the shadow DOM of the parent of a slotted node.\n        node.assignedSlot || // DOM Element detected.\n        node.parentNode || // ShadowRoot detected.\n        isShadowRoot(node) && node.host || // Fallback.\n        getDocumentElement(node);\n        return isShadowRoot(result) ? result.host : result;\n    }\n    function getNearestOverflowAncestor(node) {\n        const parentNode = getParentNode(node);\n        if (isLastTraversableNode(parentNode)) return node.ownerDocument ? node.ownerDocument.body : node.body;\n        if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) return parentNode;\n        return getNearestOverflowAncestor(parentNode);\n    }\n    function getOverflowAncestors(node, list, traverseIframes) {\n        var _node$ownerDocument2;\n        if (list === void 0) list = [];\n        if (traverseIframes === void 0) traverseIframes = true;\n        const scrollableAncestor = getNearestOverflowAncestor(node);\n        const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n        const win = getWindow(scrollableAncestor);\n        if (isBody) {\n            const frameElement = getFrameElement(win);\n            return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n        }\n        return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n    }\n    function getFrameElement(win) {\n        return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n    }\n    function getCssDimensions(element) {\n        const css = getComputedStyle$1(element);\n        // In testing environments, the `width` and `height` properties are empty\n        // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n        let width = parseFloat(css.width) || 0;\n        let height = parseFloat(css.height) || 0;\n        const hasOffset = isHTMLElement(element);\n        const offsetWidth = hasOffset ? element.offsetWidth : width;\n        const offsetHeight = hasOffset ? element.offsetHeight : height;\n        const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n        if (shouldFallback) {\n            width = offsetWidth;\n            height = offsetHeight;\n        }\n        return {\n            width,\n            height,\n            $: shouldFallback\n        };\n    }\n    function unwrapElement(element) {\n        return !isElement(element) ? element.contextElement : element;\n    }\n    function getScale(element) {\n        const domElement = unwrapElement(element);\n        if (!isHTMLElement(domElement)) return createCoords(1);\n        const rect = domElement.getBoundingClientRect();\n        const { width, height, $ } = getCssDimensions(domElement);\n        let x = ($ ? round(rect.width) : rect.width) / width;\n        let y = ($ ? round(rect.height) : rect.height) / height;\n        // 0, NaN, or Infinity should always fallback to 1.\n        if (!x || !Number.isFinite(x)) x = 1;\n        if (!y || !Number.isFinite(y)) y = 1;\n        return {\n            x,\n            y\n        };\n    }\n    const noOffsets = /*#__PURE__*/ createCoords(0);\n    function getVisualOffsets(element) {\n        const win = getWindow(element);\n        if (!isWebKit() || !win.visualViewport) return noOffsets;\n        return {\n            x: win.visualViewport.offsetLeft,\n            y: win.visualViewport.offsetTop\n        };\n    }\n    function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n        if (isFixed === void 0) isFixed = false;\n        if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) return false;\n        return isFixed;\n    }\n    function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n        if (includeScale === void 0) includeScale = false;\n        if (isFixedStrategy === void 0) isFixedStrategy = false;\n        const clientRect = element.getBoundingClientRect();\n        const domElement = unwrapElement(element);\n        let scale = createCoords(1);\n        if (includeScale) {\n            if (offsetParent) {\n                if (isElement(offsetParent)) scale = getScale(offsetParent);\n            } else scale = getScale(element);\n        }\n        const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n        let x = (clientRect.left + visualOffsets.x) / scale.x;\n        let y = (clientRect.top + visualOffsets.y) / scale.y;\n        let width = clientRect.width / scale.x;\n        let height = clientRect.height / scale.y;\n        if (domElement) {\n            const win = getWindow(domElement);\n            const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n            let currentWin = win;\n            let currentIFrame = getFrameElement(currentWin);\n            while(currentIFrame && offsetParent && offsetWin !== currentWin){\n                const iframeScale = getScale(currentIFrame);\n                const iframeRect = currentIFrame.getBoundingClientRect();\n                const css = getComputedStyle$1(currentIFrame);\n                const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n                const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n                x *= iframeScale.x;\n                y *= iframeScale.y;\n                width *= iframeScale.x;\n                height *= iframeScale.y;\n                x += left;\n                y += top;\n                currentWin = getWindow(currentIFrame);\n                currentIFrame = getFrameElement(currentWin);\n            }\n        }\n        return rectToClientRect({\n            width,\n            height,\n            x,\n            y\n        });\n    }\n    // If <html> has a CSS width greater than the viewport, then this will be\n    // incorrect for RTL.\n    function getWindowScrollBarX(element, rect) {\n        const leftScroll = getNodeScroll(element).scrollLeft;\n        if (!rect) return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n        return rect.left + leftScroll;\n    }\n    function getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n        if (ignoreScrollbarX === void 0) ignoreScrollbarX = false;\n        const htmlRect = documentElement.getBoundingClientRect();\n        const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 : // RTL <body> scrollbar.\n        getWindowScrollBarX(documentElement, htmlRect));\n        const y = htmlRect.top + scroll.scrollTop;\n        return {\n            x,\n            y\n        };\n    }\n    function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n        let { elements, rect, offsetParent, strategy } = _ref;\n        const isFixed = strategy === 'fixed';\n        const documentElement = getDocumentElement(offsetParent);\n        const topLayer = elements ? isTopLayer(elements.floating) : false;\n        if (offsetParent === documentElement || topLayer && isFixed) return rect;\n        let scroll = {\n            scrollLeft: 0,\n            scrollTop: 0\n        };\n        let scale = createCoords(1);\n        const offsets = createCoords(0);\n        const isOffsetParentAnElement = isHTMLElement(offsetParent);\n        if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n            if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) scroll = getNodeScroll(offsetParent);\n            if (isHTMLElement(offsetParent)) {\n                const offsetRect = getBoundingClientRect(offsetParent);\n                scale = getScale(offsetParent);\n                offsets.x = offsetRect.x + offsetParent.clientLeft;\n                offsets.y = offsetRect.y + offsetParent.clientTop;\n            }\n        }\n        const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n        return {\n            width: rect.width * scale.x,\n            height: rect.height * scale.y,\n            x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n            y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n        };\n    }\n    function getClientRects(element) {\n        return Array.from(element.getClientRects());\n    }\n    // Gets the entire size of the scrollable document area, even extending outside\n    // of the `<html>` and `<body>` rect bounds if horizontally scrollable.\n    function getDocumentRect(element) {\n        const html = getDocumentElement(element);\n        const scroll = getNodeScroll(element);\n        const body = element.ownerDocument.body;\n        const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n        const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n        let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n        const y = -scroll.scrollTop;\n        if (getComputedStyle$1(body).direction === 'rtl') x += max(html.clientWidth, body.clientWidth) - width;\n        return {\n            width,\n            height,\n            x,\n            y\n        };\n    }\n    function getViewportRect(element, strategy) {\n        const win = getWindow(element);\n        const html = getDocumentElement(element);\n        const visualViewport = win.visualViewport;\n        let width = html.clientWidth;\n        let height = html.clientHeight;\n        let x = 0;\n        let y = 0;\n        if (visualViewport) {\n            width = visualViewport.width;\n            height = visualViewport.height;\n            const visualViewportBased = isWebKit();\n            if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n                x = visualViewport.offsetLeft;\n                y = visualViewport.offsetTop;\n            }\n        }\n        return {\n            width,\n            height,\n            x,\n            y\n        };\n    }\n    // Returns the inner client rect, subtracting scrollbars if present.\n    function getInnerBoundingClientRect(element, strategy) {\n        const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n        const top = clientRect.top + element.clientTop;\n        const left = clientRect.left + element.clientLeft;\n        const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n        const width = element.clientWidth * scale.x;\n        const height = element.clientHeight * scale.y;\n        const x = left * scale.x;\n        const y = top * scale.y;\n        return {\n            width,\n            height,\n            x,\n            y\n        };\n    }\n    function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n        let rect;\n        if (clippingAncestor === 'viewport') rect = getViewportRect(element, strategy);\n        else if (clippingAncestor === 'document') rect = getDocumentRect(getDocumentElement(element));\n        else if (isElement(clippingAncestor)) rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n        else {\n            const visualOffsets = getVisualOffsets(element);\n            rect = {\n                x: clippingAncestor.x - visualOffsets.x,\n                y: clippingAncestor.y - visualOffsets.y,\n                width: clippingAncestor.width,\n                height: clippingAncestor.height\n            };\n        }\n        return rectToClientRect(rect);\n    }\n    function hasFixedPositionAncestor(element, stopNode) {\n        const parentNode = getParentNode(element);\n        if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) return false;\n        return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n    }\n    // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n    // clipping (or hiding) child elements. This returns all clipping ancestors\n    // of the given element up the tree.\n    function getClippingElementAncestors(element, cache) {\n        const cachedResult = cache.get(element);\n        if (cachedResult) return cachedResult;\n        let result = getOverflowAncestors(element, [], false).filter((el)=>isElement(el) && getNodeName(el) !== 'body');\n        let currentContainingBlockComputedStyle = null;\n        const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n        let currentNode = elementIsFixed ? getParentNode(element) : element;\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n        while(isElement(currentNode) && !isLastTraversableNode(currentNode)){\n            const computedStyle = getComputedStyle$1(currentNode);\n            const currentNodeIsContaining = isContainingBlock(currentNode);\n            if (!currentNodeIsContaining && computedStyle.position === 'fixed') currentContainingBlockComputedStyle = null;\n            const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && [\n                'absolute',\n                'fixed'\n            ].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n            if (shouldDropCurrentNode) // Drop non-containing blocks.\n            result = result.filter((ancestor)=>ancestor !== currentNode);\n            else // Record last containing block for next iteration.\n            currentContainingBlockComputedStyle = computedStyle;\n            currentNode = getParentNode(currentNode);\n        }\n        cache.set(element, result);\n        return result;\n    }\n    // Gets the maximum area that the element is visible in due to any number of\n    // clipping ancestors.\n    function getClippingRect(_ref) {\n        let { element, boundary, rootBoundary, strategy } = _ref;\n        const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n        const clippingAncestors = [\n            ...elementClippingAncestors,\n            rootBoundary\n        ];\n        const firstClippingAncestor = clippingAncestors[0];\n        const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor)=>{\n            const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n            accRect.top = max(rect.top, accRect.top);\n            accRect.right = min(rect.right, accRect.right);\n            accRect.bottom = min(rect.bottom, accRect.bottom);\n            accRect.left = max(rect.left, accRect.left);\n            return accRect;\n        }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n        return {\n            width: clippingRect.right - clippingRect.left,\n            height: clippingRect.bottom - clippingRect.top,\n            x: clippingRect.left,\n            y: clippingRect.top\n        };\n    }\n    function getDimensions(element) {\n        const { width, height } = getCssDimensions(element);\n        return {\n            width,\n            height\n        };\n    }\n    function getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n        const isOffsetParentAnElement = isHTMLElement(offsetParent);\n        const documentElement = getDocumentElement(offsetParent);\n        const isFixed = strategy === 'fixed';\n        const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n        let scroll = {\n            scrollLeft: 0,\n            scrollTop: 0\n        };\n        const offsets = createCoords(0);\n        if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n            if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) scroll = getNodeScroll(offsetParent);\n            if (isOffsetParentAnElement) {\n                const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n                offsets.x = offsetRect.x + offsetParent.clientLeft;\n                offsets.y = offsetRect.y + offsetParent.clientTop;\n            } else if (documentElement) // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n            // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n            offsets.x = getWindowScrollBarX(documentElement);\n        }\n        const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n        const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n        const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n        return {\n            x,\n            y,\n            width: rect.width,\n            height: rect.height\n        };\n    }\n    function isStaticPositioned(element) {\n        return getComputedStyle$1(element).position === 'static';\n    }\n    function getTrueOffsetParent(element, polyfill) {\n        if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') return null;\n        if (polyfill) return polyfill(element);\n        let rawOffsetParent = element.offsetParent;\n        // Firefox returns the <html> element as the offsetParent if it's non-static,\n        // while Chrome and Safari return the <body> element. The <body> element must\n        // be used to perform the correct calculations even if the <html> element is\n        // non-static.\n        if (getDocumentElement(element) === rawOffsetParent) rawOffsetParent = rawOffsetParent.ownerDocument.body;\n        return rawOffsetParent;\n    }\n    // Gets the closest ancestor positioned element. Handles some edge cases,\n    // such as table ancestors and cross browser bugs.\n    function getOffsetParent(element, polyfill) {\n        const win = getWindow(element);\n        if (isTopLayer(element)) return win;\n        if (!isHTMLElement(element)) {\n            let svgOffsetParent = getParentNode(element);\n            while(svgOffsetParent && !isLastTraversableNode(svgOffsetParent)){\n                if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) return svgOffsetParent;\n                svgOffsetParent = getParentNode(svgOffsetParent);\n            }\n            return win;\n        }\n        let offsetParent = getTrueOffsetParent(element, polyfill);\n        while(offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent))offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n        if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) return win;\n        return offsetParent || getContainingBlock(element) || win;\n    }\n    const getElementRects = async function(data) {\n        const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n        const getDimensionsFn = this.getDimensions;\n        const floatingDimensions = await getDimensionsFn(data.floating);\n        return {\n            reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n            floating: {\n                x: 0,\n                y: 0,\n                width: floatingDimensions.width,\n                height: floatingDimensions.height\n            }\n        };\n    };\n    function isRTL(element) {\n        return getComputedStyle$1(element).direction === 'rtl';\n    }\n    const platform = {\n        convertOffsetParentRelativeRectToViewportRelativeRect,\n        getDocumentElement,\n        getClippingRect,\n        getOffsetParent,\n        getElementRects,\n        getClientRects,\n        getDimensions,\n        getScale,\n        isElement,\n        isRTL\n    };\n    /**\n   * Modifies the placement by translating the floating element along the\n   * specified axes.\n   * A number (shorthand for `mainAxis` or distance), or an axes configuration\n   * object may be passed.\n   * @see https://floating-ui.com/docs/offset\n   */ const offset = offset$1;\n    /**\n   * Optimizes the visibility of the floating element by shifting it in order to\n   * keep it in view when it will overflow the clipping boundary.\n   * @see https://floating-ui.com/docs/shift\n   */ const shift = shift$1;\n    /**\n   * Optimizes the visibility of the floating element by flipping the `placement`\n   * in order to keep it in view when the preferred placement(s) will overflow the\n   * clipping boundary. Alternative to `autoPlacement`.\n   * @see https://floating-ui.com/docs/flip\n   */ const flip = flip$1;\n    /**\n   * Provides data to position an inner element of the floating element so that it\n   * appears centered to the reference element.\n   * @see https://floating-ui.com/docs/arrow\n   */ const arrow = arrow$1;\n    /**\n   * Built-in `limiter` that will stop `shift()` at a certain point.\n   */ const limitShift = limitShift$1;\n    /**\n   * Computes the `x` and `y` coordinates that will place the floating element\n   * next to a given reference element.\n   */ const computePosition = (reference, floating, options)=>{\n        // This caches the expensive `getClippingElementAncestors` function so that\n        // multiple lifecycle resets re-use the same result. It only lives for a\n        // single call. If other functions become expensive, we can add them as well.\n        const cache = new Map();\n        const mergedOptions = {\n            platform,\n            ...options\n        };\n        const platformWithCache = {\n            ...mergedOptions.platform,\n            _c: cache\n        };\n        return computePosition$1(reference, floating, {\n            ...mergedOptions,\n            platform: platformWithCache\n        });\n    };\n    /* eslint-disable max-len */ class Popover {\n        constructor(element){\n            this.element = element;\n            this.popoverId = this.element.getAttribute('aria-controls');\n            this.popoverPosition = this.element.dataset.popoverPosition || 'bottom';\n            this.popoverGap = this.element.dataset.popoverGap || 5;\n            this.popoverAnchor = this.element.querySelector('[data-anchor]') || this.element;\n            this.popoverElement = this.popoverId && document.querySelector(`#${this.popoverId}`);\n            this.popoverVisibleClass = 'active';\n            this.popoverContent = false;\n            this.popoverIsOpen = false;\n            this.firstFocusable = null;\n            this.lastFocusable = null;\n        }\n        init() {\n            if (!this.popoverElement) return;\n            this.constructor.setAttributes(this.element, {\n                tabindex: '0',\n                'aria-haspopup': 'dialog'\n            });\n            this.initEvents();\n        }\n        initEvents() {\n            this.element.addEventListener('click', this.togglePopover.bind(this));\n            this.element.addEventListener('keyup', (event)=>{\n                if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') this.togglePopover();\n            });\n            window.addEventListener('DOMContentLoaded', ()=>{\n                this.popoverContent = this.popoverElement.innerHTML;\n            });\n            this.popoverElement.addEventListener('keydown', this.trapFocus.bind(this));\n            window.addEventListener('click', (event)=>{\n                this.checkPopoverClick(event.target);\n            });\n            window.addEventListener('keyup', (event)=>{\n                if (event.code && event.code.toLowerCase() === 'escape' || event.key && event.key.toLowerCase() === 'escape') this.checkPopoverFocus();\n            });\n            this.debouncedTogglePopover = this.constructor.debounce(()=>{\n                if (this.popoverIsOpen) this.togglePopover();\n            }, 300);\n            window.addEventListener('resize', this.debouncedTogglePopover);\n            window.addEventListener('scroll', this.debouncedTogglePopover);\n        }\n        static debounce(func, wait) {\n            let timeout;\n            return function executedFunction() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                const later = ()=>{\n                    clearTimeout(timeout);\n                    func(...args);\n                };\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n            };\n        }\n        togglePopover() {\n            if (this.popoverElement.classList.contains('active')) this.hidePopover();\n            else {\n                this.popoverElement.focus();\n                this.showPopover();\n            }\n        }\n        showPopover() {\n            this.constructor.setAttributes(this.popoverElement, {\n                tabindex: '0',\n                role: 'dialog'\n            });\n            this.popoverElement.setAttribute('aria-expanded', 'true');\n            this.popoverElement.classList.add('active');\n            this.popoverIsOpen = true;\n            this.getFocusableElements();\n            this.popoverElement.focus({\n                preventScroll: true\n            });\n            this.element.addEventListener('transitionend', ()=>{\n                this.focusPopover();\n            }, {\n                once: true\n            });\n            this.updatePopover(this.popoverElement, this.popoverPosition);\n        }\n        hidePopover() {\n            this.popoverElement.setAttribute('aria-expanded', 'false');\n            this.popoverElement.classList.remove('active');\n            this.popoverIsOpen = false;\n        }\n        async updatePopover(popover, placement) {\n            let anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.popoverAnchor;\n            try {\n                const { x, y } = await computePosition(anchor, popover, {\n                    placement,\n                    middleware: [\n                        offset(parseInt(this.popoverGap, 10)),\n                        flip({\n                            fallbackAxisSideDirection: 'start',\n                            crossAxis: false\n                        }),\n                        shift({\n                            limiter: limitShift()\n                        })\n                    ]\n                });\n                Object.assign(popover.style, {\n                    left: `${x}px`,\n                    top: `${y}px`\n                });\n            } catch (error) {\n                console.error('Error updating popover position:', error);\n            }\n        }\n        checkPopoverClick(target) {\n            if (!this.popoverIsOpen) return;\n            if (!this.popoverElement.contains(target) && !target.closest(`[aria-controls=\"${this.popoverId}\"]`)) this.togglePopover();\n        }\n        checkPopoverFocus() {\n            if (!this.popoverIsOpen) return;\n            this.constructor.moveFocus(this.element);\n            this.togglePopover();\n        }\n        focusPopover() {\n            if (this.firstFocusable) this.firstFocusable.focus({\n                preventScroll: true\n            });\n            else this.constructor.moveFocus(this.popoverElement);\n        }\n        getFocusableElements() {\n            const focusableElString = '[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable], audio[controls], video[controls], summary';\n            const allFocusable = this.popoverElement.querySelectorAll(focusableElString);\n            this.getFirstVisible(allFocusable);\n            this.getLastVisible(allFocusable);\n        }\n        getFirstVisible(elements) {\n            for(let i = 0; i < elements.length; i += 1)if (this.constructor.isVisible(elements[i])) {\n                this.firstFocusable = elements[i];\n                break;\n            }\n        }\n        getLastVisible(elements) {\n            for(let i = elements.length - 1; i >= 0; i -= 1)if (this.constructor.isVisible(elements[i])) {\n                this.lastFocusable = elements[i];\n                break;\n            }\n        }\n        trapFocus(event) {\n            if (this.firstFocusable === document.activeElement && event.shiftKey) {\n                event.preventDefault();\n                this.lastFocusable.focus();\n            }\n            if (this.lastFocusable === document.activeElement && !event.shiftKey) {\n                event.preventDefault();\n                this.firstFocusable.focus();\n            }\n        }\n        static isVisible(element) {\n            return element.offsetWidth || element.offsetHeight || element.getClientRects().length;\n        }\n        static moveFocus(element) {\n            element.focus({\n                preventScroll: true\n            });\n            if (document.activeElement !== element) {\n                element.setAttribute('tabindex', '-1');\n                element.focus();\n            }\n        }\n        static setAttributes(el, attrs) {\n            Object.keys(attrs).forEach((key)=>el.setAttribute(key, attrs[key]));\n        }\n    }\n    /* eslint-disable max-len */ class Select {\n        constructor(element){\n            this.element = element;\n            this.select = this.element.querySelector('select');\n            this.optGroups = this.select && this.select.getElementsByTagName('optgroup');\n            this.options = this.select && this.select.getElementsByTagName('option');\n            this.selectId = this.select && this.select.getAttribute('id');\n            this.trigger = false;\n            this.dropdown = false;\n            this.customOptions = false;\n            this.list = false;\n            this.allButton = false;\n            this.arrowIcon = this.element.getElementsByTagName('svg');\n            this.label = document.querySelector(`[for=\"${this.selectId}\"]`);\n            this.selectedOptCounter = 0;\n            this.optionIndex = 0;\n            this.noSelectText = this.element.getAttribute('data-select-text') || 'Select';\n            this.multiSelectText = this.element.getAttribute('data-multi-select-text') || '{n} items selected';\n            this.nMultiSelect = this.element.getAttribute('data-n-multi-select') || 1;\n            this.noUpdateLabel = this.element.getAttribute('data-update-text') && this.element.getAttribute('data-update-text') === 'off';\n            this.insetLabel = this.element.getAttribute('data-inset-label') && this.element.getAttribute('data-inset-label') === 'on';\n            this.hideClass = 'nsw-display-none';\n            this.showClass = 'active';\n            this.errorClass = 'has-error';\n            this.srClass = 'sr-only';\n            this.prefix = 'nsw-';\n            this.class = 'multi-select';\n            this.buttonClass = `${this.class}__button`;\n            this.allButtonClass = `${this.class}__all`;\n            this.listClass = `${this.class}__list`;\n            this.optionClass = `${this.class}__option`;\n            this.dropdownClass = `${this.class}__dropdown`;\n            this.checkboxClass = `${this.class}__checkbox`;\n            this.itemClass = `${this.class}__item`;\n            this.labelClass = `${this.class}__label`;\n            this.termClass = `${this.class}__term`;\n            this.detailsClass = `${this.class}__details`;\n            this.selectClass = 'form__select';\n            this.checkboxLabelClass = 'form__checkbox-label';\n            this.checkboxInputClass = 'form__checkbox-input';\n        }\n        init() {\n            if (!this.select) return;\n            this.element.insertAdjacentHTML('beforeend', this.initButtonSelect() + this.initListSelect());\n            this.dropdown = this.element.querySelector(`.js-${this.dropdownClass}`);\n            this.trigger = this.element.querySelector(`.js-${this.buttonClass}`);\n            this.customOptions = this.dropdown.querySelectorAll(`.js-${this.optionClass}`);\n            this.list = this.dropdown.querySelector(`.js-${this.listClass}`);\n            this.list.insertAdjacentHTML('afterbegin', this.initAllButton());\n            this.allButton = this.list.querySelector(`.js-${this.allButtonClass}`);\n            this.select.classList.add(this.hideClass);\n            if (this.arrowIcon.length > 0) this.arrowIcon[0].style.display = 'none';\n            this.initCustomSelectEvents();\n            this.updateAllButton();\n        }\n        initCustomSelectEvents() {\n            this.initSelection();\n            this.trigger.addEventListener('click', (event)=>{\n                event.preventDefault();\n                this.toggleCustomSelect(false);\n            });\n            if (this.label) this.label.addEventListener('click', ()=>{\n                this.constructor.moveFocusFn(this.trigger);\n            });\n            this.dropdown.addEventListener('keydown', (event)=>{\n                if (event.key && event.key.toLowerCase() === 'arrowup') this.keyboardCustomSelect('prev', event);\n                else if (event.key && event.key.toLowerCase() === 'arrowdown') this.keyboardCustomSelect('next', event);\n            });\n            window.addEventListener('keyup', (event)=>{\n                if (event.key && event.key.toLowerCase() === 'escape') {\n                    this.moveFocusToSelectTrigger();\n                    this.toggleCustomSelect('false');\n                }\n            });\n            window.addEventListener('click', (event)=>{\n                this.checkCustomSelectClick(event.target);\n            });\n        }\n        toggleCustomSelect(bool) {\n            let ariaExpanded;\n            if (bool) ariaExpanded = bool;\n            else ariaExpanded = this.trigger.getAttribute('aria-expanded') === 'true' ? 'false' : 'true';\n            this.trigger.setAttribute('aria-expanded', ariaExpanded);\n            const options = this.dropdown.querySelectorAll(`.js-${this.optionClass}`);\n            options.forEach((option)=>{\n                const isVisible = ariaExpanded === 'true';\n                option.setAttribute('aria-hidden', !isVisible);\n            });\n            if (ariaExpanded === 'true') {\n                const selectedOption = this.getSelectedOption() || this.allButton;\n                this.constructor.moveFocusFn(selectedOption);\n                const cb = ()=>{\n                    this.constructor.moveFocusFn(selectedOption);\n                    this.dropdown.removeEventListener('transitionend', cb);\n                };\n                this.dropdown.addEventListener('transitionend', cb);\n                this.constructor.trapFocus(this.dropdown);\n                this.placeDropdown();\n            }\n        }\n        placeDropdown() {\n            const { top, bottom, left } = this.trigger.getBoundingClientRect();\n            this.dropdown.classList.toggle(`${this.prefix}${this.dropdownClass}--right`, window.innerWidth < left + this.dropdown.offsetWidth);\n            const moveUp = window.innerHeight - bottom < top;\n            this.dropdown.classList.toggle(`${this.prefix}${this.dropdownClass}--up`, moveUp);\n            const maxHeight = moveUp ? top - 20 : window.innerHeight - bottom - 20;\n            const vhCalc = Math.ceil(100 * maxHeight / window.innerHeight);\n            this.dropdown.setAttribute('style', `max-height: ${vhCalc}vh;`);\n        }\n        keyboardCustomSelect(direction, event) {\n            event.preventDefault();\n            const allOptions = [\n                ...this.customOptions,\n                this.allButton\n            ];\n            let index = allOptions.findIndex((option)=>option === document.activeElement.closest(`.js-${this.optionClass}`));\n            index = direction === 'next' ? index + 1 : index - 1;\n            if (index < 0) index = allOptions.length - 1;\n            if (index >= allOptions.length) index = 0;\n            const targetOption = allOptions[index].querySelector(`.js-${this.checkboxClass}`) || this.allButton;\n            this.constructor.moveFocusFn(targetOption);\n        }\n        toggleAllButton() {\n            const status = !this.allButton.classList.contains(this.showClass);\n            this.allButton.classList.toggle(this.showClass, status);\n            const [optionsArray, totalOptions, selectedOptions] = this.getOptions();\n            optionsArray.forEach((option)=>{\n                option.setAttribute('aria-selected', 'false');\n                this.selectOption(option);\n            });\n            if (selectedOptions === totalOptions) optionsArray.forEach((option)=>this.selectOption(option));\n        }\n        initSelection() {\n            this.allButton.addEventListener('click', (event)=>{\n                event.preventDefault();\n                this.toggleAllButton();\n            });\n            this.dropdown.addEventListener('change', (event)=>{\n                const option = event.target.closest(`.js-${this.optionClass}`);\n                if (!option) return;\n                this.selectOption(option);\n            });\n            this.dropdown.addEventListener('click', (event)=>{\n                const option = event.target.closest(`.js-${this.optionClass}`);\n                if (!option || !event.target.classList.contains(`js-${this.optionClass}`)) return;\n                this.selectOption(option);\n            });\n        }\n        selectOption(option) {\n            const input = option.querySelector(`.js-${this.checkboxClass}`);\n            if (option.hasAttribute('aria-selected') && option.getAttribute('aria-selected') === 'true') {\n                input.checked = false;\n                input.removeAttribute('checked');\n                option.setAttribute('aria-selected', 'false');\n                this.updateNativeSelect(option.getAttribute('data-index'), false);\n            } else {\n                input.checked = true;\n                input.value = true;\n                input.setAttribute('checked', '');\n                option.setAttribute('aria-selected', 'true');\n                this.updateNativeSelect(option.getAttribute('data-index'), true);\n            }\n            const triggerLabel = this.getSelectedOptionText();\n            const [selectedLabel] = triggerLabel;\n            this.trigger.querySelector(`.js-${this.labelClass}`).innerHTML = selectedLabel;\n            this.trigger.classList.toggle(`${this.prefix}${this.buttonClass}--active`, this.selectedOptCounter > 0);\n            this.updateTriggerAria(triggerLabel[1]);\n            this.updateAllButton();\n        }\n        updateAllButton() {\n            const [, totalOptions, selectedOptions] = this.getOptions();\n            if (selectedOptions === totalOptions) this.allButton.classList.add(this.showClass);\n            else this.allButton.classList.remove(this.showClass);\n        }\n        updateNativeSelect(index, bool) {\n            this.options[index].selected = bool;\n            this.select.dispatchEvent(new CustomEvent('change', {\n                bubbles: true\n            }));\n        }\n        updateTriggerAria(ariaLabel) {\n            this.trigger.setAttribute('aria-label', ariaLabel);\n        }\n        getSelectedOptionText() {\n            const noSelectionText = `<span class=\"${this.prefix}${this.termClass}\">${this.noSelectText}</span>`;\n            if (this.noUpdateLabel) return [\n                noSelectionText,\n                this.noSelectText\n            ];\n            let label = '';\n            let ariaLabel = '';\n            this.selectedOptCounter = 0;\n            for(let i = 0; i < this.options.length; i += 1)if (this.options[i].selected) {\n                if (this.selectedOptCounter !== 0) label += ', ';\n                label = `${label}${this.options[i].text}`;\n                this.selectedOptCounter += 1;\n            }\n            if (this.selectedOptCounter > this.nMultiSelect) {\n                label = `<span class=\"${this.prefix}${this.detailsClass}\">${this.multiSelectText.replace('{n}', this.selectedOptCounter)}</span>`;\n                ariaLabel = `${this.multiSelectText.replace('{n}', this.selectedOptCounter)}, ${this.noSelectText}`;\n            } else if (this.selectedOptCounter > 0) {\n                ariaLabel = `${label}, ${this.noSelectText}`;\n                label = `<span class=\"${this.prefix}${this.detailsClass}\">${label}</span>`;\n            } else {\n                label = noSelectionText;\n                ariaLabel = this.noSelectText;\n            }\n            if (this.insetLabel && this.selectedOptCounter > 0) label = noSelectionText + label;\n            return [\n                label,\n                ariaLabel\n            ];\n        }\n        initButtonSelect() {\n            const customClasses = this.element.getAttribute('data-trigger-class') ? ` ${this.element.getAttribute('data-trigger-class')}` : '';\n            const error = this.select.getAttribute('aria-invalid');\n            const triggerLabel = this.getSelectedOptionText();\n            const activeSelectionClass = this.selectedOptCounter > 0 ? ` ${this.buttonClass}--active` : '';\n            let button = `<button class=\"js-${this.buttonClass} ${error === 'true' ? this.errorClass : ''} ${this.prefix}${this.selectClass} ${this.prefix}${this.buttonClass}${customClasses}${activeSelectionClass}\" aria-label=\"${triggerLabel[1]}\" aria-expanded=\"false\" aria-controls=\"${this.selectId}-dropdown\"><span aria-hidden=\"true\" class=\"js-${this.labelClass} ${this.prefix}${this.labelClass}\">${triggerLabel[0]}</span><span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">keyboard_arrow_down</span>`;\n            if (this.arrowIcon.length > 0 && this.arrowIcon[0].outerHTML) button += this.arrowIcon[0].outerHTML;\n            return `${button}</button>`;\n        }\n        initListSelect() {\n            let list = `<div class=\"js-${this.dropdownClass} ${this.prefix}${this.dropdownClass}\" aria-describedby=\"${this.selectId}-description\" id=\"${this.selectId}-dropdown\">`;\n            list += this.getSelectLabelSR();\n            if (this.optGroups.length > 0) for(let i = 0; i < this.optGroups.length; i += 1){\n                const optGroupList = this.optGroups[i].getElementsByTagName('option');\n                const optGroupLabel = `<li><span class=\"${this.prefix}${this.itemClass} ${this.prefix}${this.itemClass}--optgroup\">${this.optGroups[i].getAttribute('label')}</span></li>`;\n                list = `${list}<ul class=\"${this.prefix}${this.listClass}\" role=\"listbox\" aria-multiselectable=\"true\">${optGroupLabel}${this.getOptionsList(optGroupList)}</ul>`;\n            }\n            else list = `${list}<ul class=\"${this.prefix}${this.listClass} js-${this.listClass}\" role=\"listbox\" aria-multiselectable=\"true\">${this.getOptionsList(this.options)}</ul>`;\n            return list;\n        }\n        initAllButton() {\n            return `<button class=\"${this.prefix}${this.allButtonClass} js-${this.allButtonClass}\"><span>All</span></button>`;\n        }\n        getSelectLabelSR() {\n            if (this.label) return `<p class=\"${this.srClass}\" id=\"${this.selectId}-description\">${this.label.textContent}</p>`;\n            return '';\n        }\n        getOptionsList(options) {\n            let list = '';\n            for(let i = 0; i < options.length; i += 1){\n                const selected = options[i].hasAttribute('selected') ? ' aria-selected=\"true\"' : ' aria-selected=\"false\"';\n                const disabled = options[i].hasAttribute('disabled') ? 'disabled' : '';\n                const checked = options[i].hasAttribute('selected') ? 'checked' : '';\n                const uniqueName = this.constructor.createSafeCss(`${this.selectId}-${options[i].value}-${this.optionIndex.toString()}`);\n                const ariaHidden = options[i].hasAttribute('hidden') ? 'aria-hidden=\"true\"' : '';\n                list = `${list}<li class=\"js-${this.optionClass}\" role=\"option\" data-value=\"${options[i].value}\" ${selected} ${ariaHidden} data-label=\"${options[i].text}\" data-index=\"${this.optionIndex}\"><input class=\"${this.prefix}${this.checkboxInputClass} js-${this.checkboxClass}\" type=\"checkbox\" id=\"${uniqueName}\" ${checked} ${disabled}><label class=\"${this.prefix}${this.checkboxLabelClass} ${this.prefix}${this.itemClass} ${this.prefix}${this.itemClass}--option\" for=\"${uniqueName}\"><span>${options[i].text}</span></label></li>`;\n                this.optionIndex += 1;\n            }\n            return list;\n        }\n        getSelectedOption() {\n            const option = this.dropdown.querySelector('[aria-selected=\"true\"]');\n            if (option) return option.querySelector(`.js-${this.checkboxClass}`);\n            return this.allButton;\n        }\n        getOptions() {\n            const options = Array.from(this.dropdown.querySelectorAll(`.js-${this.optionClass}`));\n            const total = options.length;\n            const selected = options.filter((option)=>option.getAttribute('aria-selected') === 'true').length;\n            return [\n                options,\n                total,\n                selected\n            ];\n        }\n        moveFocusToSelectTrigger() {\n            if (!document.activeElement.closest(`.js-${this.class}`)) return;\n            this.trigger.focus();\n        }\n        static trapFocus(element) {\n            const focusableElements = 'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])';\n            const firstFocusableElement = element.querySelectorAll(focusableElements)[0];\n            const focusableContent = element.querySelectorAll(focusableElements);\n            const lastFocusableElement = focusableContent[focusableContent.length - 1];\n            document.addEventListener('keydown', (event)=>{\n                const isTabPressed = event.key === 'Tab' || event.code === 9;\n                if (!isTabPressed) return;\n                if (event.shiftKey) {\n                    if (document.activeElement === firstFocusableElement) {\n                        lastFocusableElement.focus();\n                        event.preventDefault();\n                    }\n                } else if (document.activeElement === lastFocusableElement) {\n                    firstFocusableElement.focus();\n                    event.preventDefault();\n                }\n            });\n            firstFocusableElement.focus();\n        }\n        checkCustomSelectClick(target) {\n            if (!this.element.contains(target)) this.toggleCustomSelect('false');\n        }\n        static createSafeCss(str) {\n            const invalidBeginningOfClassname = /^([0-9]|--|-[0-9])/;\n            if (typeof str !== 'string') return '';\n            const strippedClassname = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g).map((x)=>x.toLowerCase()).join('-');\n            return invalidBeginningOfClassname.test(strippedClassname) ? `_${strippedClassname}` : strippedClassname;\n        }\n        static moveFocusFn(element) {\n            element.focus();\n            if (document.activeElement !== element) {\n                element.setAttribute('tabindex', '-1');\n                element.focus();\n            }\n        }\n    }\n    class SiteSearch {\n        constructor(element){\n            this.element = element;\n            this.originalButton = document.querySelector('.js-open-search');\n            this.targetElement = document.getElementById(this.element.getAttribute('aria-controls'));\n            this.searchInput = this.targetElement.querySelector('input.js-search-input');\n            this.pressed = this.element.getAttribute('aria-expanded') === 'true';\n        }\n        init() {\n            if (!this.originalButton) return;\n            this.controls();\n        }\n        controls() {\n            this.element.addEventListener('click', this.showHide.bind(this), false);\n        }\n        showHide() {\n            if (this.pressed) {\n                this.targetElement.hidden = true;\n                this.originalButton.hidden = false;\n                this.originalButton.focus();\n            } else {\n                this.targetElement.hidden = false;\n                this.originalButton.hidden = true;\n                this.searchInput.focus();\n            }\n        }\n    }\n    class Tabs {\n        constructor(element, showTab){\n            this.element = element;\n            this.tablistClass = '.nsw-tabs__list';\n            this.tablistItemClass = 'li';\n            this.tablistLinkClass = 'a';\n            this.showTab = showTab;\n            this.tabList = this.element.querySelector(this.tablistClass);\n            this.tabItems = this.tabList && this.tabList.querySelectorAll(this.tablistItemClass);\n            this.allowedKeys = [\n                35,\n                36,\n                37,\n                39,\n                40\n            ];\n            this.tabLinks = [];\n            this.tabPanel = [];\n            this.selectedTab = null;\n            this.clickTabEvent = (event)=>this.clickTab(event);\n            this.arrowKeysEvent = (event)=>this.arrowKeys(event);\n            this.owns = [];\n        }\n        init() {\n            if (!this.tabList) return;\n            this.setUpDom();\n            this.controls();\n            this.setInitalTab();\n        }\n        setUpDom() {\n            const tabListWrapper = document.createElement('div');\n            tabListWrapper.classList.add('nsw-tabs__list-wrapper');\n            this.element.prepend(tabListWrapper);\n            tabListWrapper.prepend(this.tabList);\n            this.tabList.setAttribute('role', 'tablist');\n            this.tabItems.forEach((item)=>{\n                const itemElem = item;\n                const itemLink = item.querySelector(this.tablistLinkClass);\n                const panel = this.element.querySelector(itemLink.hash);\n                const uID = uniqueId('tab');\n                this.owns.push(uID);\n                itemElem.setAttribute('role', 'presentation');\n                this.enhanceTabLink(itemLink, uID);\n                this.enhanceTabPanel(panel, uID);\n            });\n            this.tabList.setAttribute('aria-owns', this.owns.join(' '));\n        }\n        enhanceTabLink(link, id) {\n            link.setAttribute('role', 'tab');\n            link.setAttribute('id', id);\n            link.setAttribute('aria-selected', false);\n            link.setAttribute('tabindex', '-1');\n            this.tabLinks.push(link);\n        }\n        enhanceTabPanel(panel, id) {\n            const panelElem = panel;\n            panelElem.setAttribute('role', 'tabpanel');\n            panelElem.setAttribute('role', 'tabpanel');\n            panelElem.setAttribute('aria-labelledBy', id);\n            panelElem.setAttribute('tabindex', '0');\n            panelElem.hidden = true;\n            this.tabPanel.push(panelElem);\n        }\n        setInitalTab() {\n            const { tabLinks, tabPanel, showTab } = this;\n            const index = showTab === undefined ? 0 : showTab;\n            const selectedLink = tabLinks[index];\n            selectedLink.classList.add('active');\n            selectedLink.removeAttribute('tabindex');\n            selectedLink.setAttribute('aria-selected', true);\n            tabPanel[index].hidden = false;\n            this.selectedTab = selectedLink;\n        }\n        clickTab(e) {\n            e.preventDefault();\n            this.switchTabs(e.currentTarget);\n        }\n        switchTabs(elem) {\n            const clickedTab = elem;\n            if (clickedTab !== this.selectedTab) {\n                clickedTab.focus();\n                clickedTab.removeAttribute('tabindex');\n                clickedTab.setAttribute('aria-selected', true);\n                clickedTab.classList.add('active');\n                this.selectedTab.setAttribute('aria-selected', false);\n                this.selectedTab.setAttribute('tabindex', '-1');\n                this.selectedTab.classList.remove('active');\n                const clickedTabIndex = this.tabLinks.indexOf(clickedTab);\n                const selectedTabIndex = this.tabLinks.indexOf(this.selectedTab);\n                this.tabPanel[clickedTabIndex].hidden = false;\n                this.tabPanel[selectedTabIndex].hidden = true;\n                this.selectedTab = clickedTab;\n                if (!clickedTab.classList.contains('js-tabs-fixed')) clickedTab.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'nearest',\n                    inline: 'nearest'\n                });\n            }\n        }\n        arrowKeys(_ref) {\n            let { which } = _ref;\n            const linkLength = this.tabLinks.length - 1;\n            let index = this.tabLinks.indexOf(this.selectedTab);\n            let down = false;\n            if (this.allowedKeys.includes(which)) {\n                switch(which){\n                    case 35:\n                        index = linkLength;\n                        break;\n                    case 36:\n                        index = 0;\n                        break;\n                    case 37:\n                        index = index === 0 ? -1 : index -= 1;\n                        break;\n                    case 39:\n                        index = index === linkLength ? -1 : index += 1;\n                        break;\n                    case 40:\n                        down = true;\n                        break;\n                }\n                if (index > -1) {\n                    if (down) this.tabPanel[index].focus();\n                    else this.switchTabs(this.tabLinks[index]);\n                }\n            }\n        }\n        controls() {\n            this.tabLinks.forEach((link)=>{\n                link.addEventListener('click', this.clickTabEvent, false);\n                link.addEventListener('keydown', this.arrowKeysEvent, false);\n            });\n        }\n    }\n    /* eslint-disable */ function cleanHTML(str, nodes) {\n        function stringToHTML() {\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(str, 'text/html');\n            return doc.body || document.createElement('body');\n        }\n        function removeScripts(html) {\n            const scripts = html.querySelectorAll('script');\n            for (const script of scripts)script.remove();\n        }\n        function isPossiblyDangerous(name, value) {\n            const val = value.replace(/\\s+/g, '').toLowerCase();\n            if ([\n                'src',\n                'href',\n                'xlink:href'\n            ].includes(name)) {\n                if (val.includes('javascript:') || val.includes('data:text/html')) return true;\n            }\n            if (name.startsWith('on')) return true;\n            return false;\n        }\n        function removeAttributes(elem) {\n            const atts = elem.attributes;\n            for (const { name, value } of atts){\n                if (!isPossiblyDangerous(name, value)) continue;\n                elem.removeAttribute(name);\n            }\n        }\n        function clean(html) {\n            const htmlNodes = html.children;\n            for (const node of htmlNodes){\n                removeAttributes(node);\n                clean(node);\n            }\n        }\n        const html = stringToHTML();\n        removeScripts(html);\n        clean(html);\n        return nodes ? html.childNodes : html.innerHTML;\n    }\n    /* eslint-disable max-len, import/no-extraneous-dependencies */ class Toggletip {\n        constructor(element){\n            this.toggletip = element;\n            this.toggletipId = this.toggletip.getAttribute('aria-controls');\n            this.toggletipElement = this.toggletipId && document.querySelector(`#${this.toggletipId}`);\n            this.toggletipContent = false;\n            this.toggletipAnchor = this.toggletip.querySelector('[data-anchor]') || this.toggletip;\n            this.toggletipText = this.toggletip.innerText;\n            this.toggletipHeading = this.toggletip.getAttribute('data-title') || this.toggletipText;\n            this.arrowElement = false;\n            this.closeButton = false;\n            this.toggletipIsOpen = false;\n            this.toggletipVisibleClass = 'active';\n            this.firstFocusable = false;\n            this.lastFocusable = false;\n        }\n        init() {\n            if (!this.toggletipElement) return;\n            this.constructor.setAttributes(this.toggletip, {\n                tabindex: '0',\n                'aria-haspopup': 'dialog'\n            });\n            this.initEvents();\n        }\n        initEvents() {\n            this.toggletip.addEventListener('click', this.toggleToggletip.bind(this));\n            this.toggletip.addEventListener('keyup', (event)=>{\n                if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') this.toggleToggletip();\n            });\n            window.addEventListener('DOMContentLoaded', ()=>{\n                this.toggletipContent = this.toggletipElement.innerHTML;\n            });\n            this.toggletipElement.addEventListener('keydown', this.trapFocus.bind(this));\n            window.addEventListener('click', (event)=>{\n                this.checkToggletipClick(event.target);\n            });\n            window.addEventListener('keyup', (event)=>{\n                if (event.code && event.code.toLowerCase() === 'escape' || event.key && event.key.toLowerCase() === 'escape') this.checkToggletipFocus();\n            });\n            window.addEventListener('resize', ()=>{\n                if (this.toggletipIsOpen) this.toggleToggletip();\n            });\n            window.addEventListener('scroll', ()=>{\n                if (this.toggletipIsOpen) this.toggleToggletip();\n            });\n        }\n        toggleToggletip() {\n            if (this.toggletipElement.classList.contains('active')) this.hideToggletip();\n            else {\n                this.toggletipElement.focus();\n                this.showToggletip();\n            }\n        }\n        createToggletipElement() {\n            if (this.toggletipElement) {\n                this.toggletipElement.innerHTML = '';\n                const createToggletip = `\n      <div class=\"nsw-toggletip__header\">\n        <div id=\"nsw-toggletip__header\" class=\"sr-only\">${cleanHTML(this.toggletipHeading)}</div>\n        <button type=\"button\" class=\"nsw-icon-button\">\n          <span class=\"sr-only\">Remove file</span>\n          <span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">close</span>\n        </button>\n      </div>\n      <div id=\"nsw-toggletip__content\" class=\"nsw-toggletip__content\">\n        ${cleanHTML(this.toggletipContent)}\n      </div>\n      <div class=\"nsw-toggletip__arrow\"></div>`;\n                this.toggletipElement.insertAdjacentHTML('afterbegin', createToggletip);\n            }\n            this.constructor.setAttributes(this.toggletipElement, {\n                'aria-labelledby': 'nsw-toggletip__header',\n                'aria-describedby': 'nsw-toggletip__content',\n                'aria-expanded': 'false',\n                tabindex: '0',\n                role: 'dialog'\n            });\n        }\n        showToggletip() {\n            this.createToggletipElement();\n            this.arrowElement = this.toggletipElement.querySelector('.nsw-toggletip__arrow');\n            this.closeButton = this.toggletipElement.querySelector('.nsw-icon-button');\n            this.toggletipElement.setAttribute('aria-expanded', 'true');\n            this.toggletipElement.classList.add('active');\n            this.toggletipIsOpen = true;\n            this.getFocusableElements();\n            this.toggletipElement.focus({\n                preventScroll: true\n            });\n            this.toggletip.addEventListener('transitionend', ()=>{\n                this.focusToggletip();\n            }, {\n                once: true\n            });\n            this.updateToggletip(this.toggletipElement, this.arrowElement);\n            this.closeButton.addEventListener('click', this.toggleToggletip.bind(this));\n        }\n        hideToggletip() {\n            this.toggletipElement.setAttribute('aria-expanded', 'false');\n            this.toggletipElement.classList.remove('active');\n            this.toggletipIsOpen = false;\n        }\n        updateToggletip(toggletip, arrowElement) {\n            let anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.toggletipAnchor;\n            computePosition(anchor, toggletip, {\n                placement: 'top',\n                middleware: [\n                    offset(8),\n                    flip(),\n                    shift({\n                        padding: 5\n                    }),\n                    arrow({\n                        element: arrowElement\n                    })\n                ]\n            }).then((_ref)=>{\n                let { x, y, placement, middlewareData } = _ref;\n                Object.assign(toggletip.style, {\n                    left: `${x}px`,\n                    top: `${y}px`\n                });\n                const { x: arrowX, y: arrowY } = middlewareData.arrow;\n                const staticSide = {\n                    top: 'bottom',\n                    right: 'left',\n                    bottom: 'top',\n                    left: 'right'\n                }[placement.split('-')[0]];\n                Object.assign(arrowElement.style, {\n                    left: arrowX != null ? `${arrowX}px` : '',\n                    top: arrowY != null ? `${arrowY}px` : '',\n                    right: '',\n                    bottom: '',\n                    [staticSide]: '-6px'\n                });\n            });\n        }\n        checkToggletipClick(target) {\n            if (!this.toggletipIsOpen) return;\n            if (!this.toggletipElement.contains(target) && !target.closest(`[aria-controls=\"${this.toggletipId}\"]`)) this.toggleToggletip();\n        }\n        checkToggletipFocus() {\n            if (!this.toggletipIsOpen) return;\n            this.constructor.moveFocus(this.toggletip);\n            this.toggleToggletip();\n        }\n        focusToggletip() {\n            if (this.firstFocusable) this.firstFocusable.focus({\n                preventScroll: true\n            });\n            else this.constructor.moveFocus(this.toggletipElement);\n        }\n        getFocusableElements() {\n            const focusableElString = '[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable], audio[controls], video[controls], summary';\n            const allFocusable = this.toggletipElement.querySelectorAll(focusableElString);\n            this.getFirstVisible(allFocusable);\n            this.getLastVisible(allFocusable);\n        }\n        getFirstVisible(elements) {\n            for(let i = 0; i < elements.length; i += 1)if (this.constructor.isVisible(elements[i])) {\n                this.firstFocusable = elements[i];\n                break;\n            }\n        }\n        getLastVisible(elements) {\n            for(let i = elements.length - 1; i >= 0; i -= 1)if (this.constructor.isVisible(elements[i])) {\n                this.lastFocusable = elements[i];\n                break;\n            }\n        }\n        trapFocus(event) {\n            if (this.firstFocusable === document.activeElement && event.shiftKey) {\n                event.preventDefault();\n                this.lastFocusable.focus();\n            }\n            if (this.lastFocusable === document.activeElement && !event.shiftKey) {\n                event.preventDefault();\n                this.firstFocusable.focus();\n            }\n        }\n        static isVisible(element) {\n            return element.offsetWidth || element.offsetHeight || element.getClientRects().length;\n        }\n        static moveFocus(element) {\n            element.focus({\n                preventScroll: true\n            });\n            if (document.activeElement !== element) {\n                element.setAttribute('tabindex', '-1');\n                element.focus();\n            }\n        }\n        static setAttributes(el, attrs) {\n            Object.keys(attrs).forEach((key)=>el.setAttribute(key, attrs[key]));\n        }\n    }\n    /* eslint-disable max-len */ class Tooltip {\n        constructor(element){\n            this.tooltip = element;\n            this.uID = uniqueId('tooltip');\n            this.tooltipElement = false;\n            this.arrowElement = false;\n            this.tooltipContent = false;\n            this.tooltipDelay = 400;\n            this.screenSize = false;\n            this.tooltipTheme = this.tooltip.getAttribute('data-theme') || 'dark';\n        }\n        init() {\n            this.tooltipContent = this.tooltip.getAttribute('title');\n            if (!this.tooltipContent) return;\n            this.constructor.setAttributes(this.tooltip, {\n                'data-tooltip-content': this.tooltipContent,\n                'aria-describedby': this.uID,\n                tabindex: '0'\n            });\n            this.tooltip.removeAttribute('title');\n            const eventArray = [\n                'mouseenter',\n                'mouseleave',\n                'focus',\n                'blur'\n            ];\n            eventArray.forEach((event, _ref)=>{\n                let { listener = this.handleEvent.bind(this) } = _ref;\n                this.tooltip.addEventListener(event, listener);\n            });\n        }\n        handleEvent(event) {\n            switch(event.type){\n                case 'mouseenter':\n                case 'focus':\n                    this.showTooltip(this, event);\n                    break;\n                case 'mouseleave':\n                case 'blur':\n                    this.hideTooltip(this, event);\n                    break;\n                default:\n                    console.log(`Unexpected event type: ${event.type}`);\n                    break;\n            }\n        }\n        createTooltipElement() {\n            if (!this.tooltipElement) {\n                this.tooltipElement = document.createElement('div');\n                document.body.appendChild(this.tooltipElement);\n            }\n            this.constructor.setAttributes(this.tooltipElement, {\n                id: this.uID,\n                class: `nsw-tooltip__element nsw-tooltip__element--${this.tooltipTheme}`,\n                role: 'tooltip'\n            });\n            if (this.tooltip) {\n                this.arrowElement = document.createElement('div');\n                this.arrowElement.className = 'nsw-tooltip__arrow';\n            }\n            this.tooltipContent = this.tooltip.getAttribute('data-tooltip-content');\n            this.tooltipElement.innerHTML = this.tooltipContent;\n            this.tooltipElement.insertAdjacentElement('beforeend', this.arrowElement);\n        }\n        showTooltip() {\n            setTimeout(()=>{\n                this.createTooltipElement();\n                this.tooltipElement.classList.add('active');\n                const range = document.createRange();\n                const text = this.tooltipElement.childNodes[0];\n                range.setStartBefore(text);\n                range.setEndAfter(text);\n                const clientRect = range.getBoundingClientRect();\n                this.matchMedia();\n                this.tooltipElement.style.width = `${clientRect.width + this.screenSize}px`;\n                this.updateTooltip(this.tooltipElement, this.arrowElement);\n            }, this.tooltipDelay);\n        }\n        hideTooltip() {\n            setTimeout(()=>{\n                this.tooltipElement.classList.remove('active');\n                this.tooltipElement.style.width = '';\n            }, this.tooltipDelay);\n        }\n        matchMedia() {\n            if (window.matchMedia('(min-width: 576px)').matches) this.screenSize = 32;\n            else this.screenSize = 16;\n        }\n        updateTooltip(tooltip, arrowElement) {\n            let anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.tooltip;\n            computePosition(anchor, tooltip, {\n                placement: 'top',\n                middleware: [\n                    offset(8),\n                    flip(),\n                    shift({\n                        padding: 5\n                    }),\n                    arrow({\n                        element: arrowElement\n                    })\n                ]\n            }).then((_ref2)=>{\n                let { x, y, placement, middlewareData } = _ref2;\n                Object.assign(tooltip.style, {\n                    left: `${x}px`,\n                    top: `${y}px`\n                });\n                // Accessing the data\n                const { x: arrowX, y: arrowY } = middlewareData.arrow;\n                const staticSide = {\n                    top: 'bottom',\n                    right: 'left',\n                    bottom: 'top',\n                    left: 'right'\n                }[placement.split('-')[0]];\n                Object.assign(arrowElement.style, {\n                    left: arrowX != null ? `${arrowX}px` : '',\n                    top: arrowY != null ? `${arrowY}px` : '',\n                    right: '',\n                    bottom: '',\n                    [staticSide]: '-6px'\n                });\n            });\n        }\n        static setAttributes(el, attrs) {\n            Object.keys(attrs).forEach((key)=>el.setAttribute(key, attrs[key]));\n        }\n    }\n    class UtilityList extends Toggletip {\n        constructor(element){\n            let toggletip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : element.querySelector('.js-share');\n            super(toggletip === null ? element : toggletip);\n            this.element = element;\n            this.share = toggletip;\n            this.print = this.element.querySelectorAll('.js-print-page');\n            this.download = this.element.querySelectorAll('.js-download-page');\n            this.copy = this.element.querySelectorAll('.js-copy-clipboard');\n            this.shareItems = this.share && this.share.querySelectorAll('a');\n            this.urlLocation = window.location.href;\n            this.copyElement = false;\n        }\n        init() {\n            if (this.share) {\n                super.init();\n                this.shareItems.forEach((share)=>{\n                    const shareLocation = share.getAttribute('data-url');\n                    if (!shareLocation) share.setAttribute('data-url', window.location.href);\n                });\n                this.share.addEventListener('click', (event)=>{\n                    const button = event.target.closest('a');\n                    if (!button) return;\n                    event.preventDefault();\n                    const social = button.getAttribute('data-social');\n                    const url = this.getSocialUrl(button, social);\n                    if (social === 'mail') window.location.href = url;\n                    else window.open(url, `${social}-share-dialog`, 'width=626,height=436');\n                });\n            }\n            if (this.print) this.print.forEach((element)=>{\n                element.setAttribute('tabindex', '0');\n                element.addEventListener('click', ()=>{\n                    window.print();\n                });\n                element.addEventListener('keyup', (event)=>{\n                    if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') window.print();\n                });\n            });\n            if (this.download) this.download.forEach((element)=>{\n                element.setAttribute('tabindex', '0');\n            });\n            if (this.copy) this.copy.forEach((element)=>{\n                element.setAttribute('tabindex', '0');\n                element.addEventListener('click', ()=>{\n                    this.copyToClipboard(element);\n                });\n                element.addEventListener('keyup', (event)=>{\n                    if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') this.copyToClipboard(element);\n                });\n            });\n        }\n        getSocialUrl(button, social) {\n            const params = this.getSocialParams(social);\n            let newUrl = '';\n            if (social === 'twitter') this.getTwitterText(button);\n            params.forEach((param)=>{\n                let paramValue = button.getAttribute(`data-${param}`);\n                if (param === 'hashtags') paramValue = encodeURI(paramValue.replace(/#| /g, ''));\n                if (paramValue) {\n                    if (social === 'facebook') newUrl = `${newUrl}u=${encodeURIComponent(paramValue)}&`;\n                    else newUrl = `${newUrl + param}=${encodeURIComponent(paramValue)}&`;\n                }\n            });\n            if (social === 'linkedin') newUrl = `mini=true&${newUrl}`;\n            return `${button.getAttribute('href')}?${newUrl}`;\n        }\n        getSocialParams(social) {\n            switch(social){\n                case 'twitter':\n                    this.socialParams = [\n                        'text',\n                        'hashtags'\n                    ];\n                    break;\n                case 'facebook':\n                case 'linkedin':\n                    this.socialParams = [\n                        'url'\n                    ];\n                    break;\n                case 'mail':\n                    this.socialParams = [\n                        'subject',\n                        'body'\n                    ];\n                    break;\n                default:\n                    console.log('No social links found');\n                    break;\n            }\n            return this.socialParams;\n        }\n        getTwitterText(button) {\n            let twitText = button.getAttribute('data-text');\n            const twitUrl = button.getAttribute('data-url') || this.urlLocation;\n            const twitUsername = button.getAttribute('data-username');\n            if (twitUsername) twitText = `${twitText} ${twitUrl} via ${twitUsername}`;\n            else twitText = `${twitText} ${twitUrl}`;\n            button.setAttribute('data-text', twitText);\n            button.removeAttribute('data-url');\n            button.removeAttribute('data-username');\n        }\n        copyToClipboard(element) {\n            if (!navigator.clipboard) {\n                const input = document.createElement('input');\n                input.setAttribute('value', this.urlLocation);\n                document.body.appendChild(input);\n                input.select();\n                document.execCommand('copy');\n                document.body.removeChild(input);\n                this.copiedMessage(element);\n            } else navigator.clipboard.writeText(this.urlLocation).then(()=>{\n                this.copiedMessage(element);\n            });\n        }\n        copiedMessage(element) {\n            this.copyElement = element;\n            const icon = '<span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">link</span>';\n            const originalText = this.copyElement.innerHTML;\n            this.copyElement.classList.add('copied');\n            this.copyElement.innerHTML = `${icon} Copied`;\n            setTimeout(()=>{\n                this.copyElement.classList.remove('copied');\n                this.copyElement.innerHTML = originalText;\n            }, 3000);\n        }\n    }\n    /* eslint-disable max-len */ if (window.NodeList && !NodeList.prototype.forEach) NodeList.prototype.forEach = Array.prototype.forEach;\n    if (!Element.prototype.closest) {\n        if (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n        Element.prototype.closest = function closest(s) {\n            const el = this;\n            let ancestor = this;\n            if (!document.documentElement.contains(el)) return null;\n            do {\n                if (ancestor.matches(s)) return ancestor;\n                ancestor = ancestor.parentElement;\n            }while (ancestor !== null);\n            return null;\n        };\n    }\n    function initSite() {\n        const accordions = document.querySelectorAll('.js-accordion');\n        const backTop = document.querySelectorAll('button.js-back-to-top');\n        const breadcrumbs = document.querySelectorAll('.js-breadcrumbs');\n        const carousel = document.querySelectorAll('.js-carousel');\n        const closeSearchButton = document.querySelectorAll('button.js-close-search');\n        const datePicker = document.querySelectorAll('.js-date-input');\n        const dialogs = document.querySelectorAll('.js-dialog');\n        const fileUpload = document.querySelectorAll('.js-file-upload');\n        const filters = document.querySelectorAll('.js-filters');\n        const globalAlert = document.querySelectorAll('.js-global-alert');\n        const link = document.querySelectorAll('a.js-link');\n        const multiSelect = document.querySelectorAll('.js-multi-select');\n        const navigation = document.getElementById('main-nav');\n        const openSearchButton = document.querySelectorAll('button.js-open-search');\n        const popover = document.querySelectorAll('.js-popover');\n        const tabs = document.querySelectorAll('.js-tabs');\n        const toggletip = document.querySelectorAll('.js-toggletip');\n        const tooltip = document.querySelectorAll('.js-tooltip');\n        const utilityList = document.querySelectorAll('.js-utility-list');\n        if (accordions) accordions.forEach((element)=>{\n            new Accordion(element).init();\n        });\n        if (backTop) backTop.forEach((element)=>{\n            new BackTop(element).init();\n        });\n        if (breadcrumbs) breadcrumbs.forEach((element)=>{\n            new Breadcrumbs(element).init();\n        });\n        if (carousel) carousel.forEach((element)=>{\n            new Carousel(element).init();\n        });\n        if (closeSearchButton) closeSearchButton.forEach((element)=>{\n            new SiteSearch(element).init();\n        });\n        if (datePicker) datePicker.forEach((element)=>{\n            new DatePicker(element).init();\n        });\n        if (dialogs) dialogs.forEach((element)=>{\n            new Dialog(element).init();\n        });\n        if (fileUpload) fileUpload.forEach((element)=>{\n            new FileUpload(element).init();\n        });\n        if (filters) filters.forEach((element)=>{\n            new Filters(element).init();\n        });\n        if (globalAlert) globalAlert.forEach((element)=>{\n            new GlobalAlert(element).init();\n        });\n        if (link) link.forEach((element)=>{\n            new ExternalLink(element).init();\n        });\n        if (multiSelect) multiSelect.forEach((element)=>{\n            new Select(element).init();\n        });\n        if (navigation) new Navigation(navigation).init();\n        if (openSearchButton) openSearchButton.forEach((element)=>{\n            new SiteSearch(element).init();\n        });\n        if (popover) popover.forEach((element)=>{\n            new Popover(element).init();\n        });\n        if (tabs) tabs.forEach((element)=>{\n            new Tabs(element).init();\n        });\n        if (toggletip) toggletip.forEach((element)=>{\n            new Toggletip(element).init();\n        });\n        if (tooltip) tooltip.forEach((element)=>{\n            new Tooltip(element).init();\n        });\n        if (utilityList) utilityList.forEach((element)=>{\n            new UtilityList(element).init();\n        });\n    }\n    exports1.Accordion = Accordion;\n    exports1.BackTop = BackTop;\n    exports1.Carousel = Carousel;\n    exports1.DatePicker = DatePicker;\n    exports1.Dialog = Dialog;\n    exports1.ExternalLink = ExternalLink;\n    exports1.FileUpload = FileUpload;\n    exports1.Filters = Filters;\n    exports1.GlobalAlert = GlobalAlert;\n    exports1.Navigation = Navigation;\n    exports1.Popover = Popover;\n    exports1.Select = Select;\n    exports1.SiteSearch = SiteSearch;\n    exports1.Tabs = Tabs;\n    exports1.Toggletip = Toggletip;\n    exports1.Tooltip = Tooltip;\n    exports1.UtilityList = UtilityList;\n    exports1.initSite = initSite;\n});\n\n//# sourceMappingURL=about.f31cadf2.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('NSW', ['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.NSW = {}));\n})(this, (function (exports) { 'use strict';\n\n  // Unique ID creation requires a high quality random # generator. In the browser we therefore\n  // require the crypto API and do not support built-in fallback to lower quality random number\n  // generators (like Math.random()).\n  let getRandomValues;\n  const rnds8 = new Uint8Array(16);\n  function rng() {\n    // lazy load so that environments that need to polyfill have a chance to do so\n    if (!getRandomValues) {\n      // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n      getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n      if (!getRandomValues) {\n        throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n      }\n    }\n    return getRandomValues(rnds8);\n  }\n\n  /**\n   * Convert array of 16 byte values to UUID string format of the form:\n   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n   */\n\n  const byteToHex = [];\n  for (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n  }\n  function unsafeStringify(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n  }\n\n  const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n  var native = {\n    randomUUID\n  };\n\n  function v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n      return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = rnds[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(rnds);\n  }\n\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  const uniqueId = prefix => {\n    const prefixValue = prefix === undefined ? 'nsw' : prefix;\n    const uuid = v4();\n    return `${prefixValue}-${uuid}`;\n  };\n  const focusObjectGenerator = arr => {\n    const focusableElements = {\n      all: arr,\n      first: arr[0],\n      last: arr[arr.length - 1],\n      length: arr.length\n    };\n    return focusableElements;\n  };\n  const getFocusableElementBySelector = (id, selectorArr) => {\n    const elements = [];\n    for (let i = 0; i < selectorArr.length; i += 1) {\n      elements.push([].slice.call(document.querySelectorAll(`#${id} ${selectorArr[i]}`)));\n    }\n    const mergedElementArr = [].concat(...elements);\n    return focusObjectGenerator(mergedElementArr);\n  };\n  const trapTabKey = (event, focusObject) => {\n    const {\n      activeElement\n    } = document;\n    const focusableElement = focusObject;\n    if (event.keyCode !== 9) return false;\n    if (focusableElement.length === 1) {\n      event.preventDefault();\n    } else if (event.shiftKey && activeElement === focusableElement.first) {\n      focusableElement.last.focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && activeElement === focusableElement.last) {\n      focusableElement.first.focus();\n      event.preventDefault();\n    }\n    return true;\n  };\n  const whichTransitionEvent = () => {\n    const el = document.createElement('fakeelement');\n    const transitions = {\n      transition: 'transitionend',\n      OTransition: 'oTransitionEnd',\n      MozTransition: 'transitionend',\n      WebkitTransition: 'webkitTransitionEnd'\n    };\n    const found = Object.keys(transitions).filter(key => el.style[key] !== undefined);\n    return transitions[found[0]];\n  };\n\n  function createButtons(_ref) {\n    let {\n      textContent\n    } = _ref;\n    const fragment = document.createDocumentFragment();\n    const button = document.createElement('button');\n    const uID = uniqueId('accordion');\n    button.textContent = textContent;\n    button.setAttribute('type', 'button');\n    button.setAttribute('aria-expanded', 'false');\n    button.setAttribute('aria-controls', uID);\n    button.classList.add('nsw-accordion__button');\n    button.insertAdjacentHTML('beforeend', `\n  <span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">keyboard_arrow_down</span>\n  `);\n    fragment.appendChild(button);\n    return fragment;\n  }\n  class Accordion {\n    constructor(element) {\n      this.element = element;\n      const [expandAll, collapseAll] = Array.from(this.element.querySelectorAll('.nsw-accordion__toggle button'));\n      this.accordionHeadingClass = '.nsw-accordion__title';\n      this.headings = this.element.querySelectorAll(this.accordionHeadingClass);\n      this.expandAllBtn = expandAll;\n      this.collapseAllBtn = collapseAll;\n      this.isExpandedOnLoad = this.element.querySelectorAll('.nsw-accordion__open');\n      this.buttons = [];\n      this.content = [];\n      this.toggleEvent = event => this.toggle(event);\n      this.expandAllEvent = event => this.expandAll(event);\n      this.collapseAllEvent = event => this.collapseAll(event);\n    }\n    init() {\n      this.setUpDom();\n      this.controls();\n    }\n    setUpDom() {\n      this.element.classList.add('ready');\n      if (this.collapseAllBtn) {\n        this.collapseAllBtn.disabled = true;\n      }\n      this.headings.forEach(heading => {\n        const headingElem = heading;\n        const contentElem = heading.nextElementSibling;\n        const buttonFrag = createButtons(heading);\n        headingElem.textContent = '';\n        headingElem.appendChild(buttonFrag);\n        const buttonElem = headingElem.getElementsByTagName('button')[0];\n        if (contentElem) {\n          contentElem.id = buttonElem.getAttribute('aria-controls');\n          contentElem.hidden = 'until-found';\n          this.content.push(contentElem);\n        }\n        this.buttons.push(buttonElem);\n      });\n      if (this.isExpandedOnLoad) {\n        this.isExpandedOnLoad.forEach(element => {\n          const openButton = element.querySelector('button');\n          this.setAccordionState(openButton, 'open');\n        });\n      }\n    }\n    controls() {\n      this.buttons.forEach(element => {\n        element.addEventListener('click', this.toggleEvent, false);\n        element.addEventListener('beforematch', this.toggleEvent, false);\n      });\n      if (this.expandAllBtn && this.collapseAllBtn) {\n        this.expandAllBtn.addEventListener('click', this.expandAllEvent, false);\n        this.collapseAllBtn.addEventListener('click', this.collapseAllEvent, false);\n      }\n    }\n    getTargetContent(element) {\n      const currentIndex = this.buttons.indexOf(element);\n      return this.content[currentIndex];\n    }\n    setAccordionState(element, state) {\n      const targetContent = this.getTargetContent(element);\n      if (state === 'open') {\n        element.classList.add('active');\n        element.setAttribute('aria-expanded', 'true');\n        targetContent.hidden = false;\n      } else if (state === 'close') {\n        element.classList.remove('active');\n        element.setAttribute('aria-expanded', 'false');\n        targetContent.hidden = 'until-found';\n      }\n    }\n    toggle(event) {\n      const {\n        currentTarget\n      } = event;\n      const targetContent = this.getTargetContent(currentTarget);\n      if (targetContent) {\n        const isHidden = targetContent.hidden;\n        if (isHidden === true || isHidden === 'until-found') {\n          this.setAccordionState(currentTarget, 'open');\n        } else {\n          this.setAccordionState(currentTarget, 'close');\n        }\n        if (this.expandAllBtn && this.collapseAllBtn) {\n          this.expandAllBtn.disabled = this.content.every(item => item.hidden === false);\n          this.collapseAllBtn.disabled = this.content.every(item => item.hidden === 'until-found');\n        }\n      }\n    }\n    expandAll() {\n      this.buttons.forEach(element => {\n        this.setAccordionState(element, 'open');\n      });\n      this.expandAllBtn.disabled = true;\n      this.collapseAllBtn.disabled = false;\n    }\n    collapseAll() {\n      this.buttons.forEach(element => {\n        this.setAccordionState(element, 'close');\n      });\n      this.expandAllBtn.disabled = false;\n      this.collapseAllBtn.disabled = true;\n    }\n  }\n\n  class BackTop {\n    constructor(element) {\n      this.element = element;\n      this.dataElement = this.element.getAttribute('data-element');\n      this.scrollOffset = this.element.getAttribute('data-offset');\n      this.text = false;\n      this.icon = false;\n      this.scrollElement = this.dataElement ? document.querySelector(this.dataElement) : window;\n      this.scrollPosition = 0;\n      this.width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n      this.height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n      this.condition = false;\n    }\n    init() {\n      this.createButton();\n      this.element.addEventListener('click', event => {\n        event.preventDefault();\n        if (!window.requestAnimationFrame) {\n          this.scrollElement.scrollTo(0, 0);\n        } else if (this.dataElement) {\n          this.scrollElement.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n        } else {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n        }\n      });\n      this.checkBackToTop();\n      const debounceEvent = this.debounce(this.checkBackToTop);\n      this.scrollElement.addEventListener('scroll', () => {\n        debounceEvent();\n      });\n      const debounceResize = this.debounce(this.resizeHandler);\n      window.addEventListener('resize', () => {\n        debounceResize();\n      });\n    }\n    createButton() {\n      const textSpan = this.constructor.createElement('span');\n      const iconSpan = this.constructor.createElement('span', ['material-icons', 'nsw-material-icons'], {\n        title: 'Back to top',\n        focusable: 'false',\n        'aria-hidden': 'true'\n      });\n      this.element.append(textSpan, iconSpan);\n      this.text = this.element.querySelector('span:not(.material-icons)');\n      this.icon = this.element.querySelector('span.material-icons');\n      this.createButtonContent();\n    }\n    createButtonContent() {\n      if (this.width < 768) {\n        this.text.innerText = 'Top';\n        this.icon.innerText = 'keyboard_arrow_up';\n      } else {\n        this.text.innerText = 'Back to top';\n        this.icon.innerText = 'north';\n      }\n    }\n    checkBackToTop() {\n      let windowTop = this.scrollElement.scrollTop || document.documentElement.scrollTop;\n      if (!this.dataElement) windowTop = window.scrollY || document.documentElement.scrollTop;\n      const scroll = this.scrollPosition;\n      this.scrollPosition = window.scrollY;\n      if (this.scrollOffset && this.scrollOffset > 0) {\n        this.condition = windowTop >= this.scrollOffset;\n        this.element.classList.toggle('active', this.condition);\n      } else {\n        this.condition = scroll > this.scrollPosition && this.scrollPosition > 200;\n        this.element.classList.toggle('active', this.condition);\n      }\n    }\n    resizeHandler() {\n      const oldWidth = this.width;\n      const oldHeight = this.height;\n      this.width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n      this.height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n      if (oldWidth !== this.width && oldHeight === this.height) {\n        this.createButtonContent();\n      }\n    }\n    debounce(fn) {\n      var _this = this;\n      let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n      let timeout;\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const context = _this;\n        if (!window.requestAnimationFrame) {\n          clearTimeout(timeout);\n          timeout = setTimeout(() => fn.apply(context, args), wait);\n        } else {\n          if (timeout) {\n            window.cancelAnimationFrame(timeout);\n          }\n          timeout = window.requestAnimationFrame(() => {\n            fn.apply(context, args);\n          });\n        }\n      };\n    }\n    static createElement(tag) {\n      let classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const element = document.createElement(tag);\n      if (classes.length > 0) {\n        element.classList.add(...classes);\n      }\n      Object.entries(attributes).forEach(_ref => {\n        let [key, value] = _ref;\n        element.setAttribute(key, value);\n      });\n      return element;\n    }\n  }\n\n  class Breadcrumbs {\n    constructor(element) {\n      this.element = element;\n      this.allBreadcrumbs = this.element.querySelector('.nsw-breadcrumbs ol');\n      this.secondBreadcrumb = this.element.querySelector('.js-breadcrumbs li:nth-child(2)');\n      this.condition = false;\n    }\n    init() {\n      if (this.allBreadcrumbs.children.length > 3) {\n        this.createToggle();\n      }\n    }\n    createToggle() {\n      const toggle = this.constructor.createElement('li', ['nsw-breadcrumbs__show-more-toggle']);\n      toggle.innerHTML = '<button aria-label=\"Show more breadcrumbs\" class=\"nsw-breadcrumbs__toggle-button\" type=\"button\">…</button>';\n      toggle.addEventListener('click', () => {\n        this.allBreadcrumbs.classList.toggle('nsw-breadcrumbs__show-all');\n      });\n      this.allBreadcrumbs.insertBefore(toggle, this.secondBreadcrumb);\n    }\n    static createElement(tag) {\n      let classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const element = document.createElement(tag);\n      if (classes.length > 0) {\n        element.classList.add(...classes);\n      }\n      Object.entries(attributes).forEach(_ref => {\n        let [key, value] = _ref;\n        element.setAttribute(key, value);\n      });\n      return element;\n    }\n  }\n\n  /* eslint-disable max-len */\n  class DatePicker {\n    constructor(element) {\n      this.element = element;\n      this.prefix = 'nsw-';\n      this.class = 'date-picker';\n      this.uID = uniqueId('calendar-label');\n      this.dateClass = `${this.prefix}${this.class}__date`;\n      this.todayClass = `${this.dateClass}--today`;\n      this.selectedClass = `${this.dateClass}--selected`;\n      this.keyboardFocusClass = `${this.dateClass}--keyboard-focus`;\n      this.visibleClass = `${this.prefix}${this.class}--is-visible`;\n      this.months = this.element.getAttribute('data-months') ? this.element.getAttribute('data-months') : ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      this.dateFormat = this.element.getAttribute('data-date-format') ? this.element.getAttribute('data-date-format') : 'd-m-y';\n      this.dateSeparator = this.element.getAttribute('data-date-separator') ? this.element.getAttribute('data-date-separator') : '/';\n      this.datesDisabled = this.element.getAttribute('data-dates-disabled') ? this.element.getAttribute('data-dates-disabled') : '';\n      this.minDate = this.element.getAttribute('data-min-date') ? this.element.getAttribute('data-min-date') : '';\n      this.maxDate = this.element.getAttribute('data-max-date') ? this.element.getAttribute('data-max-date') : '';\n      this.input = this.element.querySelector('.js-date-input__text');\n      this.trigger = this.element.querySelector('.js-date-input__trigger');\n      this.triggerLabel = this.trigger && this.trigger.getAttribute('aria-label') ? this.trigger.getAttribute('aria-label') : 'Select a date';\n      this.datePicker = this.element.querySelector('.js-date-picker');\n      this.body = this.datePicker && this.datePicker.querySelector('.js-date-picker__dates');\n      this.navigation = this.datePicker && this.datePicker.querySelector('.js-date-picker__title-nav');\n      this.heading = this.datePicker && this.datePicker.querySelector('.js-date-picker__title-label');\n      this.close = this.datePicker && this.datePicker.querySelector('.js-date-picker__close');\n      this.accept = this.datePicker && this.datePicker.querySelector('.js-date-picker__accept');\n      this.multipleInput = this.element.querySelector('.js-date-input-multiple');\n      this.dateInput = this.multipleInput && this.multipleInput.querySelector('.js-date-picker-date');\n      this.monthInput = this.multipleInput && this.multipleInput.querySelector('.js-date-picker-month');\n      this.yearInput = this.multipleInput && this.multipleInput.querySelector('.js-date-picker-year');\n      this.multiDateArray = [this.dateInput, this.monthInput, this.yearInput];\n      this.dateIndexes = this.getDateIndexes();\n      this.pickerVisible = false;\n      this.dateSelected = false;\n      this.selectedDay = false;\n      this.selectedMonth = false;\n      this.selectedYear = false;\n      this.firstFocusable = false;\n      this.lastFocusable = false;\n      this.disabledArray = false;\n    }\n    init() {\n      if (!this.input && !this.multipleInput) return;\n      if (!this.datePicker) {\n        this.initCreateCalendar();\n      }\n      this.disabledDates();\n      this.resetCalendar();\n      this.initCalendarAria();\n      this.initCalendarEvents();\n      this.placeCalendar();\n    }\n    initCreateCalendar() {\n      const calendar = `\n    <div class=\"nsw-date-picker js-date-picker\" role=\"dialog\" aria-labelledby=\"${this.uID}\">\n      <header class=\"nsw-date-picker__header\">\n        <div class=\"nsw-date-picker__title\">\n          <span class=\"nsw-date-picker__title-label js-date-picker__title-label\" id=\"${this.uID}\"></span>\n\n          <nav>\n            <ul class=\"nsw-date-picker__title-nav js-date-picker__title-nav\">\n              <li>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__year-nav-btn js-date-picker__year-nav-btn--prev\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">keyboard_double_arrow_left</span>\n                </button>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__month-nav-btn js-date-picker__month-nav-btn--prev\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">chevron_left</span>\n                </button>\n              </li>\n\n              <li>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__month-nav-btn js-date-picker__month-nav-btn--next\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">chevron_right</span>\n                </button>\n                <button class=\"nsw-icon-button nsw-date-picker__title-nav-btn js-date-picker__year-nav-btn js-date-picker__year-nav-btn--next\" type=\"button\">\n                  <span class=\"material-icons nsw-material-icons\">keyboard_double_arrow_right</span>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <ol class=\"nsw-date-picker__week\">\n          <li><div class=\"nsw-date-picker__day\">M<span class=\"sr-only\">onday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">T<span class=\"sr-only\">uesday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">W<span class=\"sr-only\">ednesday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">T<span class=\"sr-only\">hursday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">F<span class=\"sr-only\">riday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">S<span class=\"sr-only\">aturday</span></div></li>\n          <li><div class=\"nsw-date-picker__day\">S<span class=\"sr-only\">unday</span></div></li>\n        </ol>\n      </header>\n\n      <ol class=\"nsw-date-picker__dates js-date-picker__dates\" aria-labelledby=\"${this.uID}\">\n        \n      </ol>\n\n      <div class=\"nsw-date-picker__buttongroup\">\n        <button type=\"button\" class=\"nsw-button nsw-button--dark-outline-solid js-date-picker__close\" value=\"cancel\">Cancel</button>\n        <button type=\"button\" class=\"nsw-button nsw-button--dark js-date-picker__accept\" value=\"ok\">OK</button>\n      </div>\n    </div>`;\n      this.element.insertAdjacentHTML('beforeend', calendar);\n      this.datePicker = this.element.querySelector('.js-date-picker');\n      this.body = this.datePicker.querySelector('.js-date-picker__dates');\n      this.navigation = this.datePicker.querySelector('.js-date-picker__title-nav');\n      this.heading = this.datePicker.querySelector('.js-date-picker__title-label');\n      this.close = this.datePicker.querySelector('.js-date-picker__close');\n      this.accept = this.datePicker.querySelector('.js-date-picker__accept');\n    }\n    initCalendarAria() {\n      this.resetLabelCalendarTrigger();\n      const srLiveReagion = document.createElement('div');\n      srLiveReagion.setAttribute('aria-live', 'polite');\n      srLiveReagion.classList.add('sr-only', 'js-date-input__sr-live');\n      this.element.appendChild(srLiveReagion);\n      this.srLiveReagion = this.element.querySelector('.js-date-input__sr-live');\n    }\n    initCalendarEvents() {\n      if (this.input) {\n        this.input.addEventListener('focus', () => {\n          this.toggleCalendar(true);\n        });\n      }\n      if (this.multipleInput) {\n        this.multiDateArray.forEach(element => {\n          element.addEventListener('focus', () => {\n            this.hideCalendar();\n          });\n        });\n      }\n      if (this.trigger) {\n        this.trigger.addEventListener('click', event => {\n          event.preventDefault();\n          this.pickerVisible = false;\n          this.toggleCalendar();\n          this.trigger.setAttribute('aria-expanded', 'true');\n        });\n      }\n      if (this.close) {\n        this.close.addEventListener('click', event => {\n          event.preventDefault();\n          this.hideCalendar();\n        });\n      }\n      if (this.accept) {\n        this.accept.addEventListener('click', event => {\n          event.preventDefault();\n          const day = this.body.querySelector('button[tabindex=\"0\"]');\n          if (day) {\n            this.dateSelected = true;\n            this.selectedDay = day.innerText;\n            this.selectedMonth = this.currentMonth;\n            this.selectedYear = this.currentYear;\n            this.setInputValue();\n            if (this.input) {\n              this.input.focus();\n            } else if (this.multipleInput) {\n              this.trigger.focus();\n              this.hideCalendar();\n            }\n            this.resetLabelCalendarTrigger();\n          }\n        });\n      }\n      this.body.addEventListener('click', event => {\n        event.preventDefault();\n        const day = event.target.closest('button');\n        if (day) {\n          this.dateSelected = true;\n          this.selectedDay = day.innerText;\n          this.selectedMonth = this.currentMonth;\n          this.selectedYear = this.currentYear;\n          this.setInputValue();\n          if (this.input) {\n            this.input.focus();\n          } else if (this.multipleInput) {\n            this.trigger.focus();\n            this.hideCalendar();\n          }\n          this.resetLabelCalendarTrigger();\n        }\n      });\n      this.navigation.addEventListener('click', event => {\n        event.preventDefault();\n        const monthBtn = event.target.closest('.js-date-picker__month-nav-btn');\n        const yearBtn = event.target.closest('.js-date-picker__year-nav-btn');\n        if (monthBtn && monthBtn.classList.contains('js-date-picker__month-nav-btn--prev')) {\n          this.showPrevMonth(true);\n        } else if (monthBtn && monthBtn.classList.contains('js-date-picker__month-nav-btn--next')) {\n          this.showNextMonth(true);\n        } else if (yearBtn && yearBtn.classList.contains('js-date-picker__year-nav-btn--prev')) {\n          this.showPrevYear(true);\n        } else if (yearBtn && yearBtn.classList.contains('js-date-picker__year-nav-btn--next')) {\n          this.showNextYear(true);\n        }\n      });\n      window.addEventListener('keydown', event => {\n        if (event.code && event.code === 27 || event.key && event.key.toLowerCase() === 'escape') {\n          if (document.activeElement.closest('.js-date-picker')) {\n            const activeInput = document.activeElement.closest('.js-date-input').querySelector('input');\n            activeInput.focus();\n          } else {\n            this.hideCalendar();\n          }\n        }\n      });\n      window.addEventListener('click', event => {\n        if (!event.target.closest('.js-date-picker') && !event.target.closest('.js-date-input') && this.pickerVisible) {\n          this.hideCalendar();\n        }\n      });\n      this.body.addEventListener('keydown', event => {\n        let day = this.currentDay;\n        if (event.code && event.code === 40 || event.key && event.key.toLowerCase() === 'arrowdown') {\n          day += 7;\n          this.resetDayValue(day);\n        } else if (event.code && event.code === 39 || event.key && event.key.toLowerCase() === 'arrowright') {\n          day += 1;\n          this.resetDayValue(day);\n        } else if (event.code && event.code === 37 || event.key && event.key.toLowerCase() === 'arrowleft') {\n          day -= 1;\n          this.resetDayValue(day);\n        } else if (event.code && event.code === 38 || event.key && event.key.toLowerCase() === 'arrowup') {\n          day -= 7;\n          this.resetDayValue(day);\n        } else if (event.code && event.code === 35 || event.key && event.key.toLowerCase() === 'end') {\n          event.preventDefault();\n          day = day + 6 - this.getDayOfWeek(this.currentYear, this.currentMonth, day);\n          this.resetDayValue(day);\n        } else if (event.code && event.code === 36 || event.key && event.key.toLowerCase() === 'home') {\n          event.preventDefault();\n          day -= this.getDayOfWeek(this.currentYear, this.currentMonth, day);\n          this.resetDayValue(day);\n        } else if (event.code && event.code === 34 || event.key && event.key.toLowerCase() === 'pagedown') {\n          event.preventDefault();\n          this.showNextMonth();\n        } else if (event.code && event.code === 33 || event.key && event.key.toLowerCase() === 'pageup') {\n          event.preventDefault();\n          this.showPrevMonth();\n        }\n      });\n      this.datePicker.addEventListener('keydown', event => {\n        if (event.code && event.code === 9 || event.key && event.key === 'Tab') {\n          this.trapFocus(event);\n        }\n      });\n      if (this.input) {\n        this.input.addEventListener('keydown', event => {\n          if (event.code && event.code === 13 || event.key && event.key.toLowerCase() === 'enter') {\n            this.resetCalendar();\n            this.resetLabelCalendarTrigger();\n            this.hideCalendar();\n          } else if (event.code && event.code === 40 || event.key && event.key.toLowerCase() === 'arrowdown' && this.pickerVisible) {\n            this.body.querySelector('button[tabindex=\"0\"]').focus();\n          }\n        });\n      }\n      if (this.multipleInput) {\n        this.multiDateArray.forEach(element => {\n          element.addEventListener('keydown', event => {\n            if (event.code && event.code === 13 || event.key && event.key.toLowerCase() === 'enter') {\n              this.resetCalendar();\n              this.resetLabelCalendarTrigger();\n              this.hideCalendar();\n            } else if (event.code && event.code === 40 || event.key && event.key.toLowerCase() === 'arrowdown' && this.pickerVisible) {\n              this.body.querySelector('button[tabindex=\"0\"]').focus();\n            }\n          });\n        });\n      }\n    }\n    getCurrentDay(date) {\n      return date ? this.getDayFromDate(date) : new Date().getDate();\n    }\n    getCurrentMonth(date) {\n      return date ? this.getMonthFromDate(date) : new Date().getMonth();\n    }\n    getCurrentYear(date) {\n      return date ? this.getYearFromDate(date) : new Date().getFullYear();\n    }\n    getDayFromDate(date) {\n      const day = parseInt(date.split('-')[2], 10);\n      return Number.isNaN(day) ? this.getCurrentDay(false) : day;\n    }\n    getMonthFromDate(date) {\n      const month = parseInt(date.split('-')[1], 10) - 1;\n      return Number.isNaN(month) ? this.getCurrentMonth(false) : month;\n    }\n    getYearFromDate(date) {\n      const year = parseInt(date.split('-')[0], 10);\n      return Number.isNaN(year) ? this.getCurrentYear(false) : year;\n    }\n    showNextMonth(bool) {\n      this.currentYear = this.currentMonth === 11 ? this.currentYear + 1 : this.currentYear;\n      this.currentMonth = (this.currentMonth + 1) % 12;\n      this.currentDay = this.checkDayInMonth();\n      this.showCalendar(bool);\n      this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n    }\n    showPrevMonth(bool) {\n      this.currentYear = this.currentMonth === 0 ? this.currentYear - 1 : this.currentYear;\n      this.currentMonth = this.currentMonth === 0 ? 11 : this.currentMonth - 1;\n      this.currentDay = this.checkDayInMonth();\n      this.showCalendar(bool);\n      this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n    }\n    showNextYear(bool) {\n      this.currentYear += 1;\n      this.currentMonth %= 12;\n      this.currentDay = this.checkDayInMonth();\n      this.showCalendar(bool);\n      this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n    }\n    showPrevYear(bool) {\n      this.currentYear -= 1;\n      this.currentMonth %= 12;\n      this.currentDay = this.checkDayInMonth();\n      this.showCalendar(bool);\n      this.srLiveReagion.textContent = `${this.months[this.currentMonth]} ${this.currentYear}`;\n    }\n    checkDayInMonth() {\n      return this.currentDay > this.constructor.daysInMonth(this.currentYear, this.currentMonth) ? 1 : this.currentDay;\n    }\n    static daysInMonth(year, month) {\n      return 32 - new Date(year, month, 32).getDate();\n    }\n    resetCalendar() {\n      let currentDate = false;\n      let selectedDate;\n      if (this.input) {\n        selectedDate = this.input.value;\n      } else if (this.multipleInput) {\n        if (this.dateInput.value !== '' && this.monthInput.value !== '' && this.yearInput.value !== '') {\n          selectedDate = `${this.dateInput.value}/${this.monthInput.value}/${this.yearInput.value}`;\n        } else {\n          selectedDate = '';\n        }\n      }\n      this.dateSelected = false;\n      if (selectedDate !== '') {\n        const date = this.getDateFromInput();\n        this.dateSelected = true;\n        currentDate = date;\n      }\n      this.currentDay = this.getCurrentDay(currentDate);\n      this.currentMonth = this.getCurrentMonth(currentDate);\n      this.currentYear = this.getCurrentYear(currentDate);\n      this.selectedDay = this.dateSelected ? this.currentDay : false;\n      this.selectedMonth = this.dateSelected ? this.currentMonth : false;\n      this.selectedYear = this.dateSelected ? this.currentYear : false;\n    }\n    disabledDates() {\n      this.disabledArray = [];\n      if (this.datesDisabled) {\n        const disabledDates = this.datesDisabled.split(' ');\n        disabledDates.forEach(element => {\n          this.disabledArray.push(element);\n        });\n      }\n    }\n    convertDateToParse(date) {\n      const dateArray = date.split(this.dateSeparator);\n      return `${dateArray[this.dateIndexes[2]]}, ${dateArray[this.dateIndexes[1]]}, ${dateArray[this.dateIndexes[0]]}`;\n    }\n    isDisabledDate(day, month, year) {\n      let disabled = false;\n      const dateParse = new Date(year, month, day);\n      const minDate = new Date(this.convertDateToParse(this.minDate));\n      const maxDate = new Date(this.convertDateToParse(this.maxDate));\n      if (this.minDate && minDate > dateParse) {\n        disabled = true;\n      }\n      if (this.maxDate && maxDate < dateParse) {\n        disabled = true;\n      }\n      if (this.disabledArray.length > 0) {\n        this.disabledArray.forEach(element => {\n          const disabledDate = new Date(this.convertDateToParse(element));\n          if (dateParse.getTime() === disabledDate.getTime()) {\n            disabled = true;\n          }\n        });\n      }\n      return disabled;\n    }\n    showCalendar(bool) {\n      const firstDay = this.constructor.getDayOfWeek(this.currentYear, this.currentMonth, '01');\n      this.body.innerHTML = '';\n      this.heading.innerHTML = `${this.months[this.currentMonth]} ${this.currentYear}`;\n      let date = 1;\n      let calendar = '';\n      for (let i = 0; i < 6; i += 1) {\n        for (let j = 0; j < 7; j += 1) {\n          if (i === 0 && j < firstDay) {\n            calendar += '<li></li>';\n          } else if (date > this.constructor.daysInMonth(this.currentYear, this.currentMonth)) {\n            break;\n          } else {\n            let classListDate = '';\n            let tabindexValue = '-1';\n            let disabled;\n            if (date === this.currentDay) {\n              tabindexValue = '0';\n            }\n            if (this.getCurrentMonth() === this.currentMonth && this.getCurrentYear() === this.currentYear && date === this.getCurrentDay()) {\n              classListDate += ` ${this.todayClass}`;\n            }\n            if (this.isDisabledDate(date, this.currentMonth, this.currentYear)) {\n              classListDate += ` ${this.dateClass}--disabled`;\n              disabled = 'aria-disabled=\"true\"';\n            }\n            if (this.dateSelected && date === this.selectedDay && this.currentYear === this.selectedYear && this.currentMonth === this.selectedMonth) {\n              classListDate += ` ${this.selectedClass}`;\n            }\n            calendar = `${calendar}<li><button class=\"${this.dateClass}${classListDate}\" tabindex=\"${tabindexValue}\" type=\"button\" ${disabled || ''}>${date}</button></li>`;\n            date += 1;\n          }\n        }\n      }\n      this.body.innerHTML = calendar;\n      if (!this.pickerVisible) this.datePicker.classList.add(this.visibleClass);\n      this.pickerVisible = true;\n      if (!bool) this.body.querySelector('button[tabindex=\"0\"]').focus();\n      this.getFocusableElements();\n      this.placeCalendar();\n    }\n    hideCalendar() {\n      this.datePicker.classList.remove(this.visibleClass);\n      this.pickerVisible = false;\n      this.firstFocusable = false;\n      this.lastFocusable = false;\n      if (this.trigger) this.trigger.setAttribute('aria-expanded', 'false');\n    }\n    toggleCalendar(bool) {\n      if (!this.pickerVisible) {\n        this.resetCalendar();\n        this.showCalendar(bool);\n      } else {\n        this.hideCalendar();\n      }\n    }\n    static getDayOfWeek(year, month, day) {\n      let weekDay = new Date(year, month, day).getDay() - 1;\n      if (weekDay < 0) weekDay = 6;\n      return weekDay;\n    }\n    getDateIndexes() {\n      const dateFormat = this.dateFormat.toLowerCase().replace(/-/g, '');\n      return [dateFormat.indexOf('d'), dateFormat.indexOf('m'), dateFormat.indexOf('y')];\n    }\n    setInputValue() {\n      if (this.input) {\n        this.input.value = this.getDateForInput(this.selectedDay, this.selectedMonth, this.selectedYear);\n      } else if (this.multipleInput) {\n        this.dateInput.value = this.constructor.getReadableDate(this.selectedDay);\n        this.monthInput.value = this.constructor.getReadableDate(this.selectedMonth + 1);\n        this.yearInput.value = this.selectedYear;\n      }\n    }\n    getDateForInput(day, month, year) {\n      const dateArray = [];\n      dateArray[this.dateIndexes[0]] = this.constructor.getReadableDate(day);\n      dateArray[this.dateIndexes[1]] = this.constructor.getReadableDate(month + 1);\n      dateArray[this.dateIndexes[2]] = year;\n      return dateArray[0] + this.dateSeparator + dateArray[1] + this.dateSeparator + dateArray[2];\n    }\n    getDateFromInput() {\n      let dateArray;\n      if (this.input) {\n        dateArray = this.input.value.split(this.dateSeparator);\n      } else if (this.multipleInput) {\n        dateArray = [this.dateInput.value, this.monthInput.value, this.yearInput.value];\n      }\n      return `${dateArray[this.dateIndexes[2]]}-${dateArray[this.dateIndexes[1]]}-${dateArray[this.dateIndexes[0]]}`;\n    }\n    static getReadableDate(date) {\n      return date < 10 ? `0${date}` : date;\n    }\n    resetDayValue(day) {\n      const totDays = this.constructor.daysInMonth(this.currentYear, this.currentMonth);\n      if (day > totDays) {\n        this.currentDay = day - totDays;\n        this.showNextMonth(false);\n      } else if (day < 1) {\n        const newMonth = this.currentMonth === 0 ? 11 : this.currentMonth - 1;\n        this.currentDay = this.constructor.daysInMonth(this.currentYear, newMonth) + day;\n        this.showPrevMonth(false);\n      } else {\n        this.currentDay = day;\n        const focusItem = this.body.querySelector('button[tabindex=\"0\"]');\n        focusItem.setAttribute('tabindex', '-1');\n        focusItem.classList.remove(this.keyboardFocusClass);\n        const buttons = this.body.getElementsByTagName('button');\n        for (let i = 0; i < buttons.length; i += 1) {\n          if (parseInt(buttons[i].textContent, 10) === this.currentDay) {\n            buttons[i].setAttribute('tabindex', '0');\n            buttons[i].classList.add(this.keyboardFocusClass);\n            buttons[i].focus();\n            break;\n          }\n        }\n        this.getFocusableElements();\n      }\n    }\n    resetLabelCalendarTrigger() {\n      if (!this.trigger) return;\n      if (this.selectedYear && this.selectedMonth !== false && this.selectedDay) {\n        this.trigger.setAttribute('aria-label', `Selected date is ${new Date(this.selectedYear, this.selectedMonth, this.selectedDay).toDateString()}`);\n      } else {\n        this.trigger.setAttribute('aria-label', this.triggerLabel);\n      }\n    }\n    getFocusableElements() {\n      const allFocusable = this.datePicker.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable], audio[controls], video[controls], summary');\n      this.getFirstFocusable(allFocusable);\n      this.getLastFocusable(allFocusable);\n    }\n    getFirstFocusable(elements) {\n      for (let i = 0; i < elements.length; i += 1) {\n        if ((elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length) && elements[i].getAttribute('tabindex') !== '-1') {\n          this.firstFocusable = elements[i];\n          return true;\n        }\n      }\n      return false;\n    }\n    getLastFocusable(elements) {\n      for (let i = elements.length - 1; i >= 0; i -= 1) {\n        if ((elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length) && elements[i].getAttribute('tabindex') !== '-1') {\n          this.lastFocusable = elements[i];\n          return true;\n        }\n      }\n      return false;\n    }\n    trapFocus(event) {\n      if (this.firstFocusable === document.activeElement && event.shiftKey) {\n        event.preventDefault();\n        this.lastFocusable.focus();\n      }\n      if (this.lastFocusable === document.activeElement && !event.shiftKey) {\n        event.preventDefault();\n        this.firstFocusable.focus();\n      }\n    }\n    placeCalendar() {\n      this.datePicker.style.left = '0px';\n      this.datePicker.style.right = 'auto';\n      const pickerBoundingRect = this.datePicker.getBoundingClientRect();\n      if (pickerBoundingRect.right > window.innerWidth) {\n        this.datePicker.style.left = 'auto';\n        this.datePicker.style.right = '0px';\n      }\n    }\n  }\n\n  function getSign(x) {\n    if (!Math.sign) {\n      return (x > 0) - (x < 0) || +x;\n    }\n    return Math.sign(x);\n  }\n  class SwipeContent {\n    constructor(element) {\n      this.element = element;\n      this.delta = [false, false];\n      this.dragging = false;\n      this.intervalId = false;\n      this.changedTouches = false;\n    }\n    init() {\n      this.element.addEventListener('mousedown', this.handleEvent.bind(this));\n      this.element.addEventListener('touchstart', this.handleEvent.bind(this), {\n        passive: true\n      });\n    }\n    initDragging() {\n      this.element.addEventListener('mousemove', this.handleEvent.bind(this));\n      this.element.addEventListener('touchmove', this.handleEvent.bind(this), {\n        passive: true\n      });\n      this.element.addEventListener('mouseup', this.handleEvent.bind(this));\n      this.element.addEventListener('mouseleave', this.handleEvent.bind(this));\n      this.element.addEventListener('touchend', this.handleEvent.bind(this));\n    }\n    cancelDragging() {\n      if (this.intervalId) {\n        if (!window.requestAnimationFrame) {\n          clearInterval(this.intervalId);\n        } else {\n          window.cancelAnimationFrame(this.intervalId);\n        }\n        this.intervalId = false;\n      }\n      this.element.removeEventListener('mousemove', this.handleEvent.bind(this));\n      this.element.removeEventListener('touchmove', this.handleEvent.bind(this));\n      this.element.removeEventListener('mouseup', this.handleEvent.bind(this));\n      this.element.removeEventListener('mouseleave', this.handleEvent.bind(this));\n      this.element.removeEventListener('touchend', this.handleEvent.bind(this));\n    }\n    handleEvent(event) {\n      switch (event.type) {\n        case 'mousedown':\n        case 'touchstart':\n          this.startDrag(event);\n          break;\n        case 'mousemove':\n        case 'touchmove':\n          this.drag(event);\n          break;\n        case 'mouseup':\n        case 'mouseleave':\n        case 'touchend':\n          this.endDrag(event);\n          break;\n        default:\n          console.log(`${event.type}.`);\n      }\n    }\n    startDrag(event) {\n      this.dragging = true;\n      this.initDragging();\n      this.delta = [parseInt(this.unify(event).clientX, 10), parseInt(this.unify(event).clientY, 10)];\n      this.emitSwipeEvents('dragStart', this.delta, event.target);\n    }\n    endDrag(event) {\n      this.cancelDragging();\n      const dx = parseInt(this.unify(event).clientX, 10);\n      const dy = parseInt(this.unify(event).clientY, 10);\n      if (this.delta && (this.delta[0] || this.delta[0] === 0)) {\n        const s = getSign(dx - this.delta[0]);\n        if (Math.abs(dx - this.delta[0]) > 30) {\n          if (s < 0) {\n            this.emitSwipeEvents('swipeLeft', [dx, dy]);\n          } else {\n            this.emitSwipeEvents('swipeRight', [dx, dy]);\n          }\n        }\n        this.delta[0] = false;\n      }\n      if (this.delta && (this.delta[1] || this.delta[1] === 0)) {\n        const y = getSign(dy - this.delta[1]);\n        if (Math.abs(dy - this.delta[1]) > 30) {\n          if (y < 0) {\n            this.emitSwipeEvents('swipeUp', [dx, dy]);\n          } else {\n            this.emitSwipeEvents('swipeDown', [dx, dy]);\n          }\n        }\n        this.delta[1] = false;\n      }\n      this.emitSwipeEvents('dragEnd', [dx, dy]);\n      this.dragging = false;\n    }\n    drag(event) {\n      if (!this.dragging) return;\n      if (!window.requestAnimationFrame) {\n        this.intervalId = setTimeout(() => {\n          this.emitDrag(event);\n        }, 250);\n      } else {\n        this.intervalId = window.requestAnimationFrame(() => {\n          this.emitDrag(event);\n        });\n      }\n    }\n    unify(event) {\n      this.changedTouches = event.changedTouches;\n      return this.changedTouches ? this.changedTouches[0] : event;\n    }\n    emitDrag(event) {\n      this.emitSwipeEvents('dragging', [parseInt(this.unify(event).clientX, 10), parseInt(this.unify(event).clientY, 10)]);\n    }\n    emitSwipeEvents(eventName, detail, el) {\n      let trigger = false;\n      if (el) trigger = el;\n      const event = new CustomEvent(eventName, {\n        detail: {\n          x: detail[0],\n          y: detail[1],\n          origin: trigger\n        }\n      });\n      this.element.dispatchEvent(event);\n    }\n  }\n\n  /* eslint-disable max-len */\n  class Carousel extends SwipeContent {\n    constructor(element) {\n      super(element);\n      this.element = element;\n      this.containerClass = 'nsw-carousel-container';\n      this.controlClass = 'js-carousel__control';\n      this.wrapperClass = 'js-carousel__wrapper';\n      this.counterClass = 'js-carousel__counter';\n      this.counterTorClass = 'js-carousel__counter-tot';\n      this.navClass = 'js-carousel__navigation';\n      this.navItemClass = 'js-carousel__nav-item';\n      this.navigationItemClass = this.element.getAttribute('data-navigation-item-class') ? this.element.getAttribute('data-navigation-item-class') : 'nsw-carousel__nav-item';\n      this.navigationClass = this.element.getAttribute('data-navigation-class') ? this.element.getAttribute('data-navigation-class') : 'nsw-carousel__navigation';\n      this.paginationClass = this.element.getAttribute('data-pagination-class') ? this.element.getAttribute('data-pagination-class') : 'nsw-carousel__navigation--pagination';\n      this.draggingClass = 'nsw-carousel--is-dragging';\n      this.loadedClass = 'nsw-carousel--loaded';\n      this.animateClass = 'nsw-carousel__list--animating';\n      this.cloneClass = 'js-clone';\n      this.srClass = 'sr-only';\n      this.srLiveAreaClass = 'js-carousel__aria-live';\n      this.hideControlsClass = 'nsw-carousel--hide-controls';\n      this.hideClass = 'nsw-display-none';\n      this.centerClass = 'nsw-justify-content-center';\n      this.listWrapper = this.element.querySelector(`.${this.wrapperClass}`);\n      this.list = this.listWrapper ? this.listWrapper.querySelector('ol') : false;\n      this.items = this.list ? this.list.getElementsByTagName('li') : false;\n      this.controls = this.element.querySelectorAll(`.${this.controlClass}`);\n      this.counter = this.element.querySelectorAll(`.${this.counterClass}`);\n      this.counterTor = this.element.querySelectorAll(`.${this.counterTorClass}`);\n      this.ariaLabel = this.element.getAttribute('data-description') ? this.element.getAttribute('data-description') : 'Card carousel';\n      this.dragEnabled = !!(this.element.getAttribute('data-drag') && this.element.getAttribute('data-drag') === 'on');\n      this.loop = !!(this.element.getAttribute('data-loop') && this.element.getAttribute('data-loop') === 'on');\n      this.nav = !(this.element.getAttribute('data-navigation') && this.element.getAttribute('data-navigation') === 'off');\n      this.navigationPagination = !!(this.element.getAttribute('data-navigation-pagination') && this.element.getAttribute('data-navigation-pagination') === 'on');\n      this.justifyContent = !!(this.element.getAttribute('data-justify-content') && this.element.getAttribute('data-justify-content') === 'on');\n      this.initItems = [];\n      this.itemsNb = this.items.length;\n      this.visibItemsNb = 1;\n      this.itemsWidth = 1;\n      this.itemOriginalWidth = false;\n      this.selectedItem = 0;\n      this.translateContainer = 0;\n      this.containerWidth = 0;\n      this.animating = false;\n      this.dragStart = false;\n      this.resizeId = false;\n      this.cloneList = [];\n      this.itemAutoSize = false;\n      this.totTranslate = 0;\n      if (this.nav) this.loop = false;\n      this.flexSupported = CSS.supports('align-items', 'stretch');\n      this.transitionSupported = CSS.supports('transition', 'transform');\n      this.cssPropertiesSupported = 'CSS' in window && CSS.supports('color', 'var(--color-var)');\n    }\n    init() {\n      if (!this.items) return;\n      this.initCarouselLayout();\n      this.setItemsWidth(true);\n      this.insertBefore(this.visibItemsNb);\n      this.updateCarouselClones();\n      this.resetItemsTabIndex();\n      this.initAriaLive();\n      this.initCarouselEvents();\n      this.initCarouselCounter();\n    }\n    initCarouselLayout() {\n      this.element.classList.add(this.loadedClass);\n      this.element.setAttribute('aria-roledescription', 'carousel');\n      this.element.setAttribute('aria-label', this.ariaLabel);\n      const itemsArray = Array.from(this.items);\n      itemsArray.forEach((element, index) => {\n        element.setAttribute('aria-roledescription', 'slide');\n        element.setAttribute('aria-label', `${index + 1} of ${itemsArray.length}`);\n        element.setAttribute('data-index', index);\n      });\n      this.carouselCreateContainer();\n      const itemStyle = this.items && window.getComputedStyle(this.items[0]);\n      const containerStyle = this.listWrapper && window.getComputedStyle(this.listWrapper);\n      let itemWidth = itemStyle ? parseFloat(itemStyle.getPropertyValue('width')) : 0;\n      const itemMargin = itemStyle ? parseFloat(itemStyle.getPropertyValue('margin-right')) : 0;\n      const containerPadding = containerStyle ? parseFloat(containerStyle.getPropertyValue('padding-left')) : 0;\n      let containerWidth = containerStyle ? parseFloat(containerStyle.getPropertyValue('width')) : 0;\n      if (!this.itemAutoSize) {\n        this.itemAutoSize = itemWidth;\n      }\n      containerWidth = this.getCarouselWidth(containerWidth);\n      if (!this.itemOriginalWidth) {\n        this.itemOriginalWidth = itemWidth;\n      } else {\n        itemWidth = this.itemOriginalWidth;\n      }\n      if (this.itemAutoSize) {\n        this.itemOriginalWidth = parseInt(this.itemAutoSize, 10);\n        itemWidth = this.itemOriginalWidth;\n      }\n      if (containerWidth < itemWidth) {\n        this.itemOriginalWidth = containerWidth;\n        itemWidth = this.itemOriginalWidth;\n      }\n      this.visibItemsNb = parseInt((containerWidth - 2 * containerPadding + itemMargin) / (itemWidth + itemMargin), 10);\n      this.itemsWidth = parseFloat(((containerWidth - 2 * containerPadding + itemMargin) / this.visibItemsNb - itemMargin).toFixed(1));\n      this.containerWidth = (this.itemsWidth + itemMargin) * this.items.length;\n      this.translateContainer = 0 - (this.itemsWidth + itemMargin) * this.visibItemsNb;\n      if (!this.flexSupported) this.list.style.width = `${(this.itemsWidth + itemMargin) * this.visibItemsNb * 3}px`;\n      this.totTranslate = 0 - this.selectedItem * (this.itemsWidth + itemMargin);\n      if (this.items.length <= this.visibItemsNb) this.totTranslate = 0;\n      this.centerItems();\n    }\n    carouselCreateContainer() {\n      if (!this.element.parentElement.classList.contains(this.containerClass)) {\n        const el = document.createElement('div');\n        el.classList.add(this.containerClass);\n        this.element.parentNode.insertBefore(el, this.element);\n        el.appendChild(this.element);\n      }\n    }\n    setItemsWidth(bool) {\n      for (let i = 0; i < this.items.length; i += 1) {\n        this.items[i].style.width = `${this.itemsWidth}px`;\n        if (bool) this.initItems.push(this.items[i]);\n      }\n    }\n    updateCarouselClones() {\n      if (!this.loop) return;\n      if (this.items.length < this.visibItemsNb * 3) {\n        this.insertAfter(this.visibItemsNb * 3 - this.items.length, this.items.length - this.visibItemsNb * 2);\n      } else if (this.items.length > this.visibItemsNb * 3) {\n        this.removeClones(this.visibItemsNb * 3, this.items.length - this.visibItemsNb * 3);\n      }\n      this.setTranslate(`translateX(${this.translateContainer}px)`);\n    }\n    initCarouselEvents() {\n      if (this.nav) {\n        this.carouselCreateNavigation();\n        this.carouselInitNavigationEvents();\n      }\n      if (this.controls.length > 0) {\n        this.controls[0].addEventListener('click', event => {\n          event.preventDefault();\n          this.showPrevItems();\n          this.updateAriaLive();\n        });\n        this.controls[1].addEventListener('click', event => {\n          event.preventDefault();\n          this.showNextItems();\n          this.updateAriaLive();\n        });\n        this.resetCarouselControls();\n        this.emitCarouselActiveItemsEvent();\n      }\n      if (this.dragEnabled && window.requestAnimationFrame) {\n        super.init();\n        this.element.addEventListener('dragStart', event => {\n          if (event.detail.origin && event.detail.origin.closest(`.${this.controlClass}`)) return;\n          if (event.detail.origin && event.detail.origin.closest(`.${this.navClass}`)) return;\n          if (event.detail.origin && !event.detail.origin.closest(`.${this.wrapperClass}`)) return;\n          this.element.classList.add(this.draggingClass);\n          this.dragStart = event.detail.x;\n          this.animateDragEnd();\n        });\n        this.element.addEventListener('dragging', event => {\n          if (!this.dragStart) return;\n          if (this.animating || Math.abs(event.detail.x - this.dragStart) < 10) return;\n          let translate = event.detail.x - this.dragStart + this.translateContainer;\n          if (!this.loop) {\n            translate = event.detail.x - this.dragStart + this.totTranslate;\n          }\n          this.setTranslate(`translateX(${translate}px)`);\n        });\n      }\n      window.addEventListener('resize', () => {\n        clearTimeout(this.resizeId);\n        this.resizeId = setTimeout(() => {\n          this.resetCarouselResize();\n          this.resetDotsNavigation();\n          this.resetCarouselControls();\n          this.setCounterItem();\n          this.centerItems();\n          this.emitCarouselActiveItemsEvent();\n        }, 250);\n      });\n      this.element.addEventListener('keydown', event => {\n        if (event.key && event.key.toLowerCase() === 'arrowright') {\n          this.showNextItems();\n        } else if (event.key && event.key.toLowerCase() === 'arrowleft') {\n          this.showPrevItems();\n        } else if (event.key && event.key.toLowerCase() === 'home') {\n          this.showPrevItems();\n        } else if (event.key && event.key.toLowerCase() === 'end') {\n          this.showNextItems();\n        } else if (event.key && event.key.toLowerCase() === 'enter') {\n          event.preventDefault();\n          event.target.click();\n        }\n      });\n      const itemLinks = this.element.querySelectorAll('.nsw-carousel__item a');\n      if (itemLinks.length > 0) {\n        itemLinks.forEach((link, index) => {\n          link.addEventListener('focus', () => {\n            const slider = link.closest('.js-carousel__wrapper');\n            const carousel = slider.querySelector('.nsw-carousel__list');\n            if (carousel) {\n              link.focus({\n                preventScroll: true\n              });\n            }\n          });\n          link.addEventListener('focusout', () => {\n            const item = link.closest('.nsw-carousel__item');\n            const dataIndex = Number(item.getAttribute('data-index')) + 1;\n            if (dataIndex % this.visibItemsNb === 0 && dataIndex !== this.items.length) {\n              itemLinks[index + 1].focus({\n                preventScroll: true\n              });\n              this.showNextItems();\n            }\n          });\n        });\n      }\n    }\n    showPrevItems() {\n      if (this.animating) return;\n      this.animating = true;\n      this.selectedItem = this.getIndex(this.selectedItem - this.visibItemsNb);\n      this.animateList('0', 'prev');\n    }\n    showNextItems() {\n      if (this.animating) return;\n      this.animating = true;\n      this.selectedItem = this.getIndex(this.selectedItem + this.visibItemsNb);\n      this.animateList(`${this.translateContainer * 2}px`, 'next');\n    }\n    animateDragEnd() {\n      const cb = event => {\n        this.element.removeEventListener('dragEnd', cb);\n        this.element.classList.remove(this.draggingClass);\n        if (event.detail.x - this.dragStart < -40) {\n          this.animating = false;\n          this.showNextItems();\n        } else if (event.detail.x - this.dragStart > 40) {\n          this.animating = false;\n          this.showPrevItems();\n        } else if (event.detail.x - this.dragStart === 0) {\n          return;\n        } else {\n          this.animating = true;\n          this.animateList(`${this.translateContainer}px`, false);\n        }\n        this.dragStart = false;\n      };\n      this.element.addEventListener('dragEnd', cb);\n    }\n    animateList(translate, direction) {\n      let trans = translate;\n      this.list.classList.add(this.animateClass);\n      const initTranslate = this.totTranslate;\n      if (!this.loop) {\n        trans = this.noLoopTranslateValue(direction);\n      }\n      setTimeout(() => {\n        this.setTranslate(`translateX(${trans})`);\n      });\n      if (this.transitionSupported) {\n        const cb = event => {\n          if (event.propertyName && event.propertyName !== 'transform') return;\n          if (this.list) {\n            this.list.classList.remove(this.animateClass);\n            this.list.removeEventListener('transitionend', cb);\n          }\n          this.animateListCb(direction);\n        };\n        this.list.addEventListener('transitionend', cb);\n      } else {\n        this.animateListCb(direction);\n      }\n      if (!this.loop && initTranslate === this.totTranslate) {\n        this.list.dispatchEvent(new CustomEvent('transitionend'));\n      }\n      this.resetCarouselControls();\n      this.setCounterItem();\n      this.emitCarouselActiveItemsEvent();\n    }\n    noLoopTranslateValue(direction) {\n      let translate = this.totTranslate;\n      if (direction === 'next') {\n        translate = this.totTranslate + this.translateContainer;\n      } else if (direction === 'prev') {\n        translate = this.totTranslate - this.translateContainer;\n      } else if (direction === 'click') {\n        translate = this.selectedDotIndex * this.translateContainer;\n      }\n      if (translate > 0) {\n        translate = 0;\n        this.selectedItem = 0;\n      }\n      if (translate < -this.translateContainer - this.containerWidth) {\n        translate = -this.translateContainer - this.containerWidth;\n        this.selectedItem = this.items.length - this.visibItemsNb;\n      }\n      if (this.visibItemsNb > this.items.length) translate = 0;\n      this.totTranslate = translate;\n      return `${translate}px`;\n    }\n    animateListCb(direction) {\n      if (direction) this.updateClones(direction);\n      this.animating = false;\n      this.resetItemsTabIndex();\n    }\n    updateClones(direction) {\n      if (!this.loop) return;\n      const index = direction === 'next' ? 0 : this.items.length - this.visibItemsNb;\n      this.removeClones(index, false);\n      if (direction === 'next') {\n        this.insertAfter(this.visibItemsNb, 0);\n      } else {\n        this.insertBefore(this.visibItemsNb);\n      }\n      this.setTranslate(`translateX(${this.translateContainer}px)`);\n    }\n    insertBefore(nb, delta) {\n      if (!this.loop) return;\n      const clones = document.createDocumentFragment();\n      let start = 0;\n      if (delta) start = delta;\n      for (let i = start; i < nb; i += 1) {\n        const index = this.getIndex(this.selectedItem - i - 1);\n        const clone = this.initItems[index].cloneNode(true);\n        clone.classList.add(this.cloneClass);\n        clones.insertBefore(clone, clones.firstChild);\n      }\n      this.list.insertBefore(clones, this.list.firstChild);\n      this.emitCarouselUpdateEvent();\n    }\n    insertAfter(nb, init) {\n      if (!this.loop) return;\n      const clones = document.createDocumentFragment();\n      for (let i = init; i < nb + init; i += 1) {\n        const index = this.getIndex(this.selectedItem + this.visibItemsNb + i);\n        const clone = this.initItems[index].cloneNode(true);\n        clone.classList.add(this.cloneClass);\n        clones.appendChild(clone);\n      }\n      this.list.appendChild(clones);\n      this.emitCarouselUpdateEvent();\n    }\n    removeClones(index, bool) {\n      let newBool = bool;\n      if (!this.loop) return;\n      if (!bool) {\n        newBool = this.visibItemsNb;\n      }\n      for (let i = 0; i < newBool; i += 1) {\n        if (this.items[index]) this.list.removeChild(this.items[index]);\n      }\n    }\n    resetCarouselResize() {\n      const visibleItems = this.visibItemsNb;\n      this.resetItemAutoSize();\n      this.initCarouselLayout();\n      this.setItemsWidth(false);\n      this.resetItemsWidth();\n      if (this.loop) {\n        if (visibleItems > this.visibItemsNb) {\n          this.removeClones(0, visibleItems - this.visibItemsNb);\n        } else if (visibleItems < this.visibItemsNb) {\n          this.insertBefore(this.visibItemsNb, visibleItems);\n        }\n        this.updateCarouselClones();\n      } else {\n        const translate = this.noLoopTranslateValue();\n        this.setTranslate(`translateX(${translate})`);\n      }\n      this.resetItemsTabIndex();\n    }\n    resetItemAutoSize() {\n      if (!this.cssPropertiesSupported) return;\n      this.items[0].removeAttribute('style');\n      this.itemAutoSize = getComputedStyle(this.items[0]).getPropertyValue('width');\n    }\n    resetItemsWidth() {\n      this.initItems.forEach(element => {\n        const el = element;\n        el.style.width = `${this.itemsWidth}px`;\n      });\n    }\n    resetItemsTabIndex() {\n      const carouselActive = this.items.length > this.visibItemsNb;\n      let j = this.items.length;\n      for (let i = 0; i < this.items.length; i += 1) {\n        if (this.loop) {\n          if (i < this.visibItemsNb || i >= 2 * this.visibItemsNb) {\n            this.items[i].setAttribute('tabindex', '-1');\n            this.items[i].setAttribute('aria-hidden', 'true');\n            this.items[i].removeAttribute('aria-current');\n          } else {\n            if (i < j) j = i;\n            this.items[i].removeAttribute('tabindex');\n            this.items[i].removeAttribute('aria-hidden');\n            this.items[i].setAttribute('aria-current', 'true');\n          }\n        } else if ((i < this.selectedItem || i >= this.selectedItem + this.visibItemsNb) && carouselActive) {\n          this.items[i].setAttribute('tabindex', '-1');\n          this.items[i].setAttribute('aria-hidden', 'true');\n          this.items[i].removeAttribute('aria-current');\n        } else {\n          if (i < j) j = i;\n          this.items[i].removeAttribute('tabindex');\n          this.items[i].removeAttribute('aria-hidden');\n          this.items[i].setAttribute('aria-current', 'true');\n        }\n      }\n      this.resetVisibilityOverflowItems(j);\n    }\n    initAriaLive() {\n      const srLiveArea = document.createElement('div');\n      srLiveArea.setAttribute('class', `${this.srClass} ${this.srLiveAreaClass}`);\n      srLiveArea.setAttribute('aria-live', 'polite');\n      srLiveArea.setAttribute('aria-atomic', 'true');\n      this.element.appendChild(srLiveArea);\n      this.ariaLive = srLiveArea;\n    }\n    updateAriaLive() {\n      this.ariaLive.innerHTML = `Item ${this.selectedItem + 1} selected. ${this.visibItemsNb} items of ${this.initItems.length} visible`;\n    }\n    getIndex(index) {\n      let i = index;\n      if (i < 0) i = this.getPositiveValue(i, this.itemsNb);\n      if (i >= this.itemsNb) i %= this.itemsNb;\n      return i;\n    }\n    getPositiveValue(value, add) {\n      let val = value;\n      val += add;\n      if (val > 0) return val;\n      return this.getPositiveValue(val, add);\n    }\n    setTranslate(translate) {\n      this.list.style.transform = translate;\n      this.list.style.msTransform = translate;\n    }\n    getCarouselWidth(computedWidth) {\n      let comWidth = computedWidth;\n      const closestHidden = this.listWrapper.closest(`.${this.srClass}`);\n      if (closestHidden) {\n        closestHidden.classList.remove(this.srClass);\n        comWidth = this.listWrapper.offsetWidth;\n        closestHidden.classList.add(this.srClass);\n      } else if (Number.isNaN(comWidth)) {\n        comWidth = this.getHiddenParentWidth(this.element);\n      }\n      return comWidth;\n    }\n    getHiddenParentWidth(element) {\n      const parent = element.parentElement;\n      if (parent.tagName.toLowerCase() === 'html') return 0;\n      const style = window.getComputedStyle(parent);\n      if (style.display === 'none' || style.visibility === 'hidden') {\n        parent.setAttribute('style', 'display: block!important; visibility: visible!important;');\n        const computedWidth = this.listWrapper.offsetWidth;\n        parent.style.display = '';\n        parent.style.visibility = '';\n        return computedWidth;\n      }\n      return this.getHiddenParentWidth(parent);\n    }\n    resetCarouselControls() {\n      if (this.loop) return;\n      if (this.controls.length > 0) {\n        if (this.totTranslate === 0) {\n          this.controls[0].setAttribute('disabled', true);\n        } else {\n          this.controls[0].removeAttribute('disabled');\n        }\n        if (this.totTranslate === -this.translateContainer - this.containerWidth || this.items.length <= this.visibItemsNb) {\n          this.controls[1].setAttribute('disabled', true);\n        } else {\n          this.controls[1].removeAttribute('disabled');\n        }\n      }\n      if (this.nav) {\n        const selectedDot = this.navigation.querySelectorAll(`.${this.navigationItemClass}--selected`);\n        if (selectedDot.length > 0) selectedDot[0].classList.remove(`${this.navigationItemClass}--selected`);\n        let newSelectedIndex = this.getSelectedDot();\n        if (this.totTranslate === -this.translateContainer - this.containerWidth) {\n          newSelectedIndex = this.navDots.length - 1;\n        }\n        this.navDots[newSelectedIndex].classList.add(`${this.navigationItemClass}--selected`);\n      }\n      if (this.totTranslate === 0 && (this.totTranslate === -this.translateContainer - this.containerWidth || this.items.length <= this.visibItemsNb)) {\n        this.element.classList.add(this.hideControlsClass);\n      } else {\n        this.element.classList.remove(this.hideControlsClass);\n      }\n    }\n    emitCarouselUpdateEvent() {\n      this.cloneList = [];\n      const clones = this.element.querySelectorAll(`.${this.cloneClass}`);\n      clones.forEach(element => {\n        element.classList.remove(this.cloneClass);\n        this.cloneList.push(element);\n      });\n      this.emitCarouselEvents('carousel-updated', this.cloneList);\n    }\n    carouselCreateNavigation() {\n      if (this.element.querySelectorAll(`.${this.navClass}`).length > 0) return;\n      const navigation = document.createElement('ol');\n      let navChildren = '';\n      let navClasses = '';\n      if (this.navigationPagination) {\n        navClasses = `${this.navigationClass} ${this.paginationClass} ${this.navClass}`;\n      } else {\n        navClasses = `${this.navigationClass} ${this.navClass}`;\n      }\n      if (this.items.length <= this.visibItemsNb) {\n        navClasses += ` ${this.hideClass}`;\n      }\n      navigation.setAttribute('class', navClasses);\n      const dotsNr = Math.ceil(this.items.length / this.visibItemsNb);\n      const selectedDot = this.getSelectedDot();\n      const indexClass = this.navigationPagination ? '' : this.srClass;\n      for (let i = 0; i < dotsNr; i += 1) {\n        const className = i === selectedDot ? `class=\"${this.navigationItemClass} ${this.navigationItemClass}--selected ${this.navItemClass}\"` : `class=\"${this.navigationItemClass} ${this.navItemClass}\"`;\n        navChildren = `${navChildren}<li ${className}><button><span class=\"${indexClass}\">${i + 1}</span></button></li>`;\n      }\n      navigation.innerHTML = navChildren;\n      this.element.appendChild(navigation);\n    }\n    carouselInitNavigationEvents() {\n      this.navigation = this.element.querySelector(`.${this.navClass}`);\n      this.navDots = this.element.querySelectorAll(`.${this.navItemClass}`);\n      this.navIdEvent = this.carouselNavigationClick.bind(this);\n      this.navigation.addEventListener('click', this.navIdEvent);\n    }\n    carouselRemoveNavigation() {\n      if (this.navigation) this.element.removeChild(this.navigation);\n      if (this.navIdEvent) this.navigation.removeEventListener('click', this.navIdEvent);\n    }\n    resetDotsNavigation() {\n      if (!this.nav) return;\n      this.carouselRemoveNavigation();\n      this.carouselCreateNavigation();\n      this.carouselInitNavigationEvents();\n    }\n    carouselNavigationClick(event) {\n      const dot = event.target.closest(`.${this.navItemClass}`);\n      if (!dot) return;\n      if (this.animating) return;\n      this.animating = true;\n      const index = Array.from(this.navDots).indexOf(dot);\n      this.selectedDotIndex = index;\n      this.selectedItem = index * this.visibItemsNb;\n      this.animateList(false, 'click');\n    }\n    getSelectedDot() {\n      return Math.ceil(this.selectedItem / this.visibItemsNb);\n    }\n    initCarouselCounter() {\n      if (this.counterTor.length > 0) this.counterTor[0].textContent = this.itemsNb;\n      this.setCounterItem();\n    }\n    setCounterItem() {\n      if (this.counter.length === 0) return;\n      let totalItems = this.selectedItem + this.visibItemsNb;\n      if (totalItems > this.items.length) totalItems = this.items.length;\n      this.counter[0].textContent = totalItems;\n    }\n    centerItems() {\n      if (!this.justifyContent) return;\n      this.list.classList.toggle(this.centerClass, this.items.length < this.visibItemsNb);\n    }\n    emitCarouselActiveItemsEvent() {\n      this.emitCarouselEvents('carousel-active-items', {\n        firstSelectedItem: this.selectedItem,\n        visibleItemsNb: this.visibItemsNb\n      });\n    }\n    emitCarouselEvents(eventName, eventDetail) {\n      const event = new CustomEvent(eventName, {\n        detail: eventDetail\n      });\n      this.element.dispatchEvent(event);\n    }\n    resetVisibilityOverflowItems(j) {\n      const itemWidth = this.containerWidth / this.items.length;\n      const delta = (window.innerWidth - itemWidth * this.visibItemsNb) / 2;\n      const overflowItems = Math.ceil(delta / itemWidth);\n      for (let i = 0; i < overflowItems; i += 1) {\n        const indexPrev = j - 1 - i;\n        if (indexPrev >= 0) this.items[indexPrev].removeAttribute('tabindex');\n        const indexNext = j + this.visibItemsNb + i;\n        if (indexNext < this.items.length) this.items[indexNext].removeAttribute('tabindex');\n      }\n    }\n  }\n\n  /* eslint-disable max-len */\n  class Dialog {\n    constructor(element) {\n      this.element = element;\n      this.elementWrapper = this.element.querySelector('.nsw-dialog__wrapper');\n      this.openBtn = document.querySelectorAll(`.js-open-dialog-${this.element.getAttribute('id')}`);\n      this.closeBtn = this.element.querySelectorAll('.js-close-dialog');\n      this.focusableEls = this.element.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])');\n      this.body = document.body;\n      this.openEvent = this.openDialog.bind(this);\n      this.closeEvent = this.closeDialog.bind(this);\n      this.clickEvent = this.clickDialog.bind(this);\n      this.trapEvent = this.trapFocus.bind(this);\n    }\n    init() {\n      this.controls();\n    }\n    controls() {\n      if (!this.elementWrapper) return;\n      this.openBtn.forEach(btn => {\n        btn.addEventListener('click', this.openEvent, false);\n      });\n      this.closeBtn.forEach(btn => {\n        btn.addEventListener('click', this.closeEvent, false);\n      });\n      if (this.element.classList.contains('js-dialog-dismiss')) {\n        this.element.addEventListener('click', this.clickEvent, false);\n      }\n      if (this.focusableEls.length > 0) {\n        this.focusableEls[this.focusableEls.length - 1].addEventListener('blur', this.trapEvent, false);\n      }\n    }\n    openDialog() {\n      this.element.setAttribute('aria-expanded', 'true');\n      this.element.classList.add('active');\n      this.body.classList.add('dialog-active');\n      if (this.focusableEls.length > 0) {\n        this.focusableEls[0].focus();\n      }\n    }\n    closeDialog() {\n      this.element.setAttribute('aria-expanded', 'false');\n      this.element.classList.remove('active');\n      this.body.classList.remove('dialog-active');\n    }\n    clickDialog(event) {\n      if (!this.elementWrapper.contains(event.target)) {\n        this.closeDialog();\n      }\n    }\n    trapFocus(event) {\n      event.preventDefault();\n      if (this.focusableEls.length > 0) {\n        this.focusableEls[0].focus();\n      }\n    }\n  }\n\n  class ExternalLink {\n    constructor(element) {\n      this.element = element;\n      this.uID = uniqueId('external');\n      this.linkIcon = this.element.querySelector('.nsw-material-icons');\n      this.linkIconTitle = this.linkIcon ? this.linkIcon.getAttribute('title') : false;\n      this.linkElement = false;\n    }\n    init() {\n      if (this.element.tagName !== 'A') return;\n      this.element.classList.add('nsw-link', 'nsw-link--icon');\n      this.constructor.setAttributes(this.element, {\n        target: '_blank',\n        rel: 'noopener'\n      });\n      if (this.linkIcon) {\n        this.constructor.setAttributes(this.linkIcon, {\n          focusable: 'false',\n          'aria-hidden': 'true'\n        });\n      }\n      if (this.linkIconTitle) this.createElement(this.linkIconTitle);\n    }\n    createElement(title) {\n      if (title) {\n        this.linkElement = document.createElement('span');\n        this.linkElement.id = this.uID;\n        this.linkElement.classList.add('sr-only');\n        this.linkElement.innerText = title;\n        this.element.insertAdjacentElement('afterend', this.linkElement);\n        this.constructor.setAttributes(this.element, {\n          'aria-describedby': this.uID\n        });\n      }\n    }\n    static setAttributes(el, attrs) {\n      Object.keys(attrs).forEach(key => el.setAttribute(key, attrs[key]));\n    }\n  }\n\n  /* eslint-disable max-len */\n  class FileUpload {\n    constructor(element) {\n      this.element = element;\n      this.input = this.element.querySelector('input.nsw-file-upload__input');\n      this.label = this.element.querySelector('label.nsw-file-upload__label');\n      this.multipleUpload = this.input && this.input.hasAttribute('multiple');\n      this.replaceFiles = this.element.hasAttribute('data-replace-files');\n      this.filesList = null;\n    }\n    init() {\n      if (!this.input) return;\n      if (!this.label) {\n        const label = document.createElement('label');\n        label.htmlFor = this.input.id;\n        label.classList.add('nsw-file-upload__label', 'nsw-button', 'nsw-button--dark-outline-solid');\n        label.textContent = 'Select file';\n        this.element.insertAdjacentElement('beforeend', label);\n        this.label = this.element.querySelector('label.nsw-file-upload__label');\n      }\n      this.input.addEventListener('change', this.handleInputChange.bind(this));\n      this.element.addEventListener('click', this.handleFileRemove.bind(this));\n    }\n    handleInputChange() {\n      this.updateFileList();\n    }\n    createFileList() {\n      const ul = document.createElement('ul');\n      ul.classList.add('nsw-file-upload__list');\n      this.label.insertAdjacentElement('afterend', ul);\n      this.filesList = this.element.querySelector('.nsw-file-upload__list');\n    }\n    createFileItem(file) {\n      const li = document.createElement('li');\n      li.classList.add('nsw-file-upload__item');\n      const html = `\n      <span class=\"nsw-file-upload__item-filename\"></span>\n      <button type=\"button\" class=\"nsw-icon-button\">\n        <span class=\"sr-only\">Remove file</span>\n        <span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">cancel</span>\n      </button>`;\n      li.insertAdjacentHTML('afterbegin', html);\n      li.querySelector('.nsw-file-upload__item-filename').textContent = this.constructor.truncateString(file.name, 50);\n      li.querySelector('.nsw-file-upload__item-filename').dataset.filename = file.name;\n      return li.outerHTML;\n    }\n    updateFileList() {\n      if (this.input.files.length === 0) {\n        // If there are previously stored files, re-sync the input and exit.\n        if (this.currentFiles && this.currentFiles.files && this.currentFiles.files.length > 0) {\n          this.input.files = this.currentFiles.files;\n          return;\n        }\n        // Clear list if otherwise\n        if (this.filesList) {\n          this.filesList.innerHTML = '';\n          this.filesList.classList.remove('active');\n        }\n        return;\n      }\n      if (!this.filesList) {\n        this.createFileList();\n      }\n      this.filesList.classList.add('active');\n      const dataTransfer = new DataTransfer();\n      const existingFiles = new Set();\n      if (this.replaceFiles) {\n        this.filesList.innerHTML = '';\n        this.currentFiles = new DataTransfer();\n      }\n\n      // Collect existing files to maintain them in the list (if multiple is allowed)\n      if (this.multipleUpload && this.currentFiles && this.currentFiles.files) {\n        for (let i = 0; i < this.currentFiles.files.length; i += 1) {\n          const file = this.currentFiles.files[i];\n          dataTransfer.items.add(file);\n          existingFiles.add(file.name);\n        }\n      }\n      let fileListHTML = '';\n\n      // Add only new files\n      for (let i = 0; i < this.input.files.length; i += 1) {\n        const file = this.input.files[i];\n        if (!existingFiles.has(file.name)) {\n          dataTransfer.items.add(file);\n          fileListHTML += this.createFileItem(file);\n        }\n      }\n      this.currentFiles = dataTransfer;\n      if (fileListHTML) {\n        this.filesList.insertAdjacentHTML('beforeend', fileListHTML);\n      }\n      this.input.files = this.currentFiles.files;\n    }\n    handleFileRemove(event) {\n      if (!event.target.closest('.nsw-icon-button')) return;\n      event.preventDefault();\n      const item = event.target.closest('.nsw-file-upload__item');\n      const {\n        filename\n      } = item.querySelector('.nsw-file-upload__item-filename').dataset;\n      const dataTransfer = new DataTransfer();\n      for (let i = 0; i < this.currentFiles.files.length; i += 1) {\n        const file = this.currentFiles.files[i];\n        if (file.name !== filename) {\n          dataTransfer.items.add(file);\n        }\n      }\n      this.currentFiles = dataTransfer;\n      this.input.files = this.currentFiles.files;\n      item.remove();\n      if (this.filesList.children.length === 0) {\n        this.filesList.classList.remove('active');\n      }\n    }\n    static truncateString(str, num) {\n      return str.length <= num ? str : `${str.slice(0, num)}...`;\n    }\n  }\n\n  /* eslint-disable max-len */\n  class Filters {\n    constructor(element) {\n      this.element = element;\n      // Classes\n      this.hideClass = 'nsw-display-none';\n      this.showClass = 'active';\n      this.openClass = 'filters-open';\n      this.prefix = 'nsw-';\n      this.class = 'filters';\n      this.controlsClass = `${this.class}__controls`;\n      this.wrapperClass = `${this.class}__wrapper`;\n      this.listClass = `${this.class}__list`;\n      this.itemClass = `${this.class}__item`;\n      this.resetClass = `${this.class}__cancel`;\n      this.submitClass = `${this.class}__accept`;\n      this.closeClass = `${this.class}__back`;\n      this.countClass = `${this.class}__count`;\n      this.allClass = `${this.class}__all`;\n      this.moreClass = `${this.class}__more`;\n      // Elements\n      this.count = this.element.querySelector(`.js-${this.countClass}`);\n      this.controls = this.element.querySelector(`.${this.prefix}${this.controlsClass}`);\n      this.controlsButton = this.controls && this.controls.querySelector('button');\n      this.controlsButtonIcons = this.controlsButton && this.controlsButton.querySelectorAll('span');\n      this.controlsButtonText = this.controlsButton && this.controlsButton.querySelector('span:not(.nsw-material-icons)');\n      this.controlsButtonTextContent = this.controlsButton && this.controlsButtonText.innerText;\n      this.wrapper = this.element.querySelector(`.${this.prefix}${this.wrapperClass}`);\n      this.closeButton = this.wrapper && this.wrapper.querySelector(`.${this.prefix}${this.closeClass} button`);\n      this.submitButton = this.wrapper && this.wrapper.querySelector(`.${this.prefix}${this.submitClass} button`);\n      this.resetButton = this.wrapper && this.wrapper.querySelector(`.${this.prefix}${this.resetClass} button`);\n      this.items = this.wrapper && this.wrapper.querySelectorAll(`.${this.prefix}${this.itemClass}`);\n      this.accordionButtons = this.wrapper && this.wrapper.querySelectorAll(`.${this.prefix}${this.itemClass}-button`);\n      this.showMoreContent = this.element.querySelectorAll(`.${this.prefix}${this.allClass}`);\n      this.showMoreButtons = this.element.querySelectorAll(`.${this.prefix}${this.moreClass}`);\n      this.focusableElements = 'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])';\n      // Get default selected option\n      this.selectedOption = this.element.querySelector('option[selected]');\n      // Accordion arrays\n      this.buttons = [];\n      this.content = [];\n      this.options = [];\n      this.selected = [];\n    }\n    init() {\n      this.element.classList.add('ready');\n      if (this.accordionButtons) {\n        this.accordionButtons.forEach(button => {\n          const buttonElem = button;\n          const uID = uniqueId('collapsed');\n          buttonElem.setAttribute('type', 'button');\n          buttonElem.setAttribute('aria-expanded', 'false');\n          buttonElem.setAttribute('aria-controls', uID);\n          const label = buttonElem.querySelector(`.${this.prefix}${this.itemClass}-name`);\n          buttonElem.setAttribute('data-label', label.innerText);\n          const contentElem = buttonElem.nextElementSibling;\n          contentElem.id = buttonElem.getAttribute('aria-controls');\n          contentElem.hidden = true;\n          this.content.push(contentElem);\n          this.buttons.push(buttonElem);\n        });\n      }\n      this.updateDom();\n      this.initEvents();\n    }\n    initEvents() {\n      document.addEventListener('DOMContentLoaded', () => {\n        this.updateDom();\n      });\n      if (this.options) {\n        this.options.forEach(element => {\n          element.addEventListener('change', () => {\n            this.updateDom();\n          });\n        });\n      }\n      if (this.controlsButton) {\n        this.controlsButton.addEventListener('click', event => {\n          this.showFilters(event);\n        });\n      }\n      if (this.submitButton) {\n        this.submitButton.disabled = true;\n      }\n      if (this.closeButton) {\n        this.closeButton.addEventListener('click', event => {\n          this.closeFilters(event);\n        });\n      }\n      if (this.buttons) {\n        this.buttons.forEach(element => {\n          element.addEventListener('click', event => {\n            this.toggleAccordion(event);\n          });\n        });\n      }\n      if (this.resetButton) {\n        this.resetButton.addEventListener('click', event => {\n          this.clearAll(event);\n        });\n        this.resetButton.addEventListener('change', event => {\n          this.clearAll(event);\n        });\n      }\n      if (this.showMoreButtons) {\n        this.showMoreButtons.forEach((element, index) => {\n          element.addEventListener('click', event => {\n            this.showMore(event, index);\n          });\n        });\n      }\n    }\n    setAccordionState(element, state) {\n      const targetContent = this.getTargetContent(element);\n      const firstfocusable = targetContent.querySelector(this.focusableElements);\n      if (state === 'open') {\n        element.classList.add(this.showClass);\n        element.setAttribute('aria-expanded', 'true');\n        targetContent.hidden = false;\n        this.constructor.moveFocusFn(firstfocusable);\n      } else if (state === 'close') {\n        element.classList.remove(this.showClass);\n        element.setAttribute('aria-expanded', 'false');\n        targetContent.hidden = true;\n      }\n    }\n    toggleAccordion(event) {\n      const {\n        currentTarget\n      } = event;\n      const targetContent = this.getTargetContent(currentTarget);\n      if (targetContent.hidden) {\n        this.setAccordionState(currentTarget, 'open');\n      } else {\n        this.setAccordionState(currentTarget, 'close');\n      }\n    }\n    getTargetContent(element) {\n      const currentIndex = this.buttons.indexOf(element);\n      return this.content[currentIndex];\n    }\n    toggleSubmit(array) {\n      if (this.submitButton) {\n        if (array.length > 0) {\n          this.submitButton.disabled = false;\n        } else {\n          this.submitButton.disabled = true;\n        }\n      }\n    }\n    showMore(event, index) {\n      event.preventDefault();\n      const firstfocusable = this.showMoreContent[index].querySelector(this.focusableElements);\n      this.showMoreContent[index].classList.remove(this.hideClass);\n      event.target.classList.add(this.hideClass);\n      this.constructor.moveFocusFn(firstfocusable);\n    }\n    closeFilters(event) {\n      event.preventDefault();\n      this.element.classList.remove(this.showClass);\n      document.body.classList.remove(this.openClass);\n    }\n    showFilters(event) {\n      event.preventDefault();\n      if (this.element.classList.contains('nsw-filters--down')) {\n        this.element.classList.toggle(this.showClass);\n      } else {\n        this.trapFocus(this.wrapper);\n        this.element.classList.add(this.showClass);\n        document.body.classList.add(this.openClass);\n      }\n    }\n    clearAll(event) {\n      event.preventDefault();\n      const simulateEvent = new MouseEvent('change', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      });\n      const multiSelect = this.element.querySelector('.js-multi-select');\n      const multiSelectAll = multiSelect && multiSelect.querySelector('.js-multi-select__all');\n      const multiSelectOptions = multiSelect && multiSelect.querySelectorAll('.js-multi-select__option');\n      if (this.options.length > 0) {\n        this.options.forEach(input => {\n          const option = input;\n          if (option.type === 'text') {\n            option.value = '';\n          } else if (option.type === 'select-one') {\n            if (this.selectedOption) {\n              console.log(Array.from(option.options).indexOf(this.selectedOption));\n              option.selectedIndex = Array.from(option.options).indexOf(this.selectedOption);\n            } else {\n              option.selectedIndex = 0;\n            }\n          } else if (option.type === 'checkbox') {\n            if (option.defaultChecked) {\n              option.checked = true;\n            } else {\n              option.checked = false;\n            }\n          } else if (!option.parentElement.classList.contains('js-multi-select__option')) {\n            option.value = false;\n          }\n        });\n      }\n      if (multiSelect) {\n        multiSelectAll.classList.remove(this.showClass);\n        multiSelectOptions.forEach(element => {\n          element.setAttribute('aria-selected', 'true');\n          element.dispatchEvent(new Event(simulateEvent));\n          element.click();\n        });\n      }\n      this.updateDom();\n    }\n    getOptions() {\n      this.options = [];\n      if (this.items) {\n        this.items.forEach(element => {\n          const content = element.querySelector(`.${this.prefix}${this.itemClass}-content`);\n          const textInputs = content.querySelectorAll('input[type=\"text\"]');\n          const singleSelects = content.querySelectorAll('select:not([multiple]):not(.nsw-display-none)');\n          const multiSelects = content.querySelectorAll('select[multiple]:not(.nsw-display-none)');\n          const checkboxes = content.querySelectorAll('input[type=\"checkbox\"]');\n          this.options.push(...textInputs, ...singleSelects, ...checkboxes, ...multiSelects);\n        });\n      }\n    }\n    getSelected() {\n      this.selected = [];\n      if (this.options.length > 0) {\n        const select = this.options.filter(option => option.type === 'select-one' && option.value !== '');\n        const checkboxes = this.options.filter(option => option.checked);\n        const text = this.options.filter(option => option.type === 'text' && option.value !== '');\n        const multiple = this.options.filter(option => option.type === 'select-multiple' && option.value !== '');\n        const selectMultiple = this.constructor.getMultiSelectValues(multiple);\n        this.selected = [...select, ...checkboxes, ...text, ...selectMultiple];\n      }\n    }\n    selectedCount(array) {\n      if (!this.count) return;\n      const dateInputs = array.filter(option => option.closest('.nsw-form__date'));\n      const removedDateInputs = array.filter(option => !option.closest('.nsw-form__date'));\n      let buttonText = `${this.controlsButtonTextContent}`;\n      let countText = '';\n      if (dateInputs.length > 0) {\n        countText = ` (${removedDateInputs.length + 1})`;\n      } else {\n        countText = ` (${array.length})`;\n      }\n      if (dateInputs.length === 0 && array.length === 0) {\n        this.controlsButtonText.innerText = buttonText;\n      } else {\n        buttonText += countText;\n        this.controlsButtonText.innerText = buttonText;\n      }\n    }\n    setSelectedState() {\n      const formElements = 'textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled]):not(.nsw-display-none)';\n      const checkIcon = '<span class=\"material-icons nsw-material-icons nsw-material-icons--valid\" focusable=\"false\" aria-hidden=\"true\">check_circle</span>';\n      this.buttons.forEach(element => {\n        const buttonName = element.querySelector(`.${this.prefix}${this.itemClass}-name`);\n        const label = element.getAttribute('data-label');\n        const content = element.nextElementSibling;\n        const values = content.querySelectorAll(formElements);\n        const selected = Array.from(values).filter(field => {\n          if (field.type === 'checkbox' || field.type === 'radio') {\n            return field.checked;\n          }\n          return field.value !== '';\n        });\n        if (selected.length > 0) {\n          buttonName.innerText = label;\n          buttonName.innerHTML = `${label} ${checkIcon}`;\n        } else if (selected.length === 0) {\n          buttonName.innerText = label;\n        }\n      });\n    }\n    updateDom() {\n      this.getOptions();\n      this.getSelected();\n      this.toggleSubmit(this.selected);\n      this.selectedCount(this.selected);\n      this.setSelectedState();\n    }\n    trapFocus(element) {\n      const focusableContent = element.querySelectorAll(this.focusableElements);\n      const firstFocusableElement = focusableContent[0];\n      const lastFocusableElement = focusableContent[focusableContent.length - 1];\n      document.addEventListener('keydown', event => {\n        const tab = event.code && event.code === 9 || event.key && event.key === 'Tab';\n        if (!tab) return;\n        if (document.activeElement === firstFocusableElement && event.shiftKey) {\n          event.preventDefault();\n          lastFocusableElement.focus();\n        }\n        if (document.activeElement === lastFocusableElement && !event.shiftKey) {\n          event.preventDefault();\n          firstFocusableElement.focus();\n        }\n      });\n      firstFocusableElement.focus();\n    }\n    static getMultiSelectValues(array) {\n      let selectedOptions = [];\n      if (array.length > 0) {\n        array.forEach(element => {\n          selectedOptions = Array.from(element.options).filter(option => option.selected);\n        });\n      }\n      return selectedOptions;\n    }\n    static moveFocusFn(element) {\n      element.focus();\n      if (document.activeElement !== element) {\n        element.setAttribute('tabindex', '-1');\n        element.focus();\n      }\n    }\n  }\n\n  class GlobalAlert {\n    constructor(element) {\n      this.element = element;\n      this.closeButton = this.element.querySelector('button.js-close-alert');\n      this.cookieName = this.element.getAttribute('data-cookie-name') || false;\n    }\n    init() {\n      if (this.cookieName && this.constructor.getCookie(this.cookieName)) {\n        this.element.hidden = true;\n        return;\n      }\n      if (this.closeButton) {\n        this.controls();\n      }\n    }\n    controls() {\n      this.closeButton.addEventListener('click', () => {\n        this.closeMessage();\n      });\n    }\n    closeMessage() {\n      this.element.hidden = true;\n      if (this.cookieName) {\n        this.constructor.setCookie(this.cookieName, 'dismissed', 7);\n      }\n    }\n    static setCookie(name, value, days) {\n      const date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      const expires = `expires=${date.toUTCString()}`;\n      document.cookie = `${name}=${value};${expires};path=/`;\n    }\n    static getCookie(name) {\n      const nameEQ = `${name}=`;\n      const ca = document.cookie.split(';');\n      for (let i = 0; i < ca.length; i += 1) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n      }\n      return null;\n    }\n  }\n\n  class Navigation {\n    constructor(element) {\n      this.nav = element;\n      this.navID = this.nav.id;\n      this.openNavButton = document.querySelector('.js-open-nav');\n      this.closeNavButtons = this.nav.querySelectorAll('.js-close-nav');\n      this.closeSubNavButtons = this.nav.querySelectorAll('.js-close-sub-nav');\n      this.isMegaMenuElement = this.nav.classList.contains('js-mega-menu');\n      this.mainNavIsOpen = false;\n      this.transitionEvent = whichTransitionEvent();\n      this.mobileShowMainTransitionEndEvent = e => this.mobileShowMainNav(e);\n      this.mobileHideMainTransitionEndEvent = e => this.mobileHideMainNav(e);\n      this.showSubNavTransitionEndEvent = e => this.showSubNav(e);\n      this.mobileTrapTabKeyEvent = e => this.mobileMainNavTrapTabs(e);\n      this.mobileSubNavTrapTabKeyEvent = e => this.trapkeyEventStuff(e);\n      this.desktopButtonClickEvent = e => this.buttonClickDesktop(e);\n      this.desktopButtonKeydownEvent = e => this.buttonKeydownDesktop(e);\n      this.checkFocusEvent = e => this.checkIfContainsFocus(e);\n      this.openSubNavElements = [];\n      this.breakpoint = window.matchMedia('(min-width: 62em)');\n    }\n    init() {\n      this.initEvents();\n      this.responsiveCheck(this.breakpoint);\n      if (this.nav) {\n        this.breakpoint.addEventListener('change', event => this.responsiveCheck(event));\n      }\n    }\n    initEvents() {\n      if (this.isMegaMenuElement) {\n        document.addEventListener('click', this.handleOutsideClick.bind(this), false);\n        document.addEventListener('keydown', this.escapeClose.bind(this), false);\n      }\n      if (this.openNavButton) {\n        this.openNavButton.addEventListener('click', this.mobileToggleMainNav.bind(this), false);\n      }\n      this.closeNavButtons.forEach(element => {\n        element.addEventListener('click', this.mobileToggleMainNav.bind(this), false);\n      });\n      this.closeSubNavButtons.forEach(element => {\n        element.addEventListener('click', this.closeSubNav.bind(this), false);\n      });\n    }\n    responsiveCheck(event) {\n      let megaMenuListItems = [];\n      if (event.matches) {\n        megaMenuListItems = [].slice.call(this.nav.querySelectorAll('ul > li'));\n        document.body.classList.remove('main-nav-active');\n      } else {\n        megaMenuListItems = [].slice.call(this.nav.querySelectorAll('li'));\n      }\n      this.tearDownNavControls();\n      this.setUpNavControls(megaMenuListItems);\n    }\n    handleOutsideClick(event) {\n      // removes handleOutsideClick functionality from docs site\n      if (this.nav.closest('.nsw-docs')) return;\n      if (!this.mainNavIsOpen) return;\n      const isOutsideNav = !this.nav.contains(event.target);\n      if (isOutsideNav) {\n        this.toggleSubNavDesktop(true);\n      }\n    }\n    tearDownNavControls() {\n      if (this.isMegaMenuElement) {\n        const listItems = [].slice.call(this.nav.querySelectorAll('li'));\n        listItems.forEach(item => {\n          const submenu = item.querySelector('[id^=sub-nav-]');\n          const link = item.querySelector('a');\n          if (submenu) {\n            link.removeAttribute('role');\n            link.removeAttribute('aria-expanded');\n            link.removeAttribute('aria-controls');\n            link.removeEventListener('click', this.desktopButtonClickEvent, false);\n            link.removeEventListener('keydown', this.desktopButtonKeydownEvent, false);\n          }\n        });\n      }\n    }\n    setUpNavControls(listItems) {\n      if (this.isMegaMenuElement) {\n        listItems.forEach(item => {\n          const submenu = item.querySelector('[id^=sub-nav-]');\n          const link = item.querySelector('a');\n          if (submenu) {\n            link.setAttribute('role', 'button');\n            link.setAttribute('aria-expanded', 'false');\n            link.setAttribute('aria-controls', submenu.id);\n            link.addEventListener('click', this.desktopButtonClickEvent, false);\n            link.addEventListener('keydown', this.desktopButtonKeydownEvent, false);\n          }\n        });\n      }\n    }\n    mobileMainNavTrapTabs(e) {\n      const elemObj = getFocusableElementBySelector(this.navID, ['> div button', '> ul > li > a']);\n      trapTabKey(e, elemObj);\n    }\n    mobileShowMainNav(_ref) {\n      let {\n        propertyName\n      } = _ref;\n      if (propertyName !== 'transform') return;\n      getFocusableElementBySelector(this.navID, ['> div button', '> ul > li > a']).all[1].focus();\n      this.nav.classList.add('active');\n      this.nav.classList.remove('activating');\n      this.nav.removeEventListener(this.transitionEvent, this.mobileShowMainTransitionEndEvent, false);\n      this.nav.addEventListener('keydown', this.mobileTrapTabKeyEvent, false);\n    }\n    mobileHideMainNav(_ref2) {\n      let {\n        propertyName\n      } = _ref2;\n      if (propertyName !== 'transform') return;\n      this.nav.classList.remove('active');\n      this.nav.classList.remove('closing');\n      while (this.openSubNavElements.length > 0) {\n        const {\n          submenu\n        } = this.whichSubNavLatest();\n        submenu.removeEventListener('keydown', this.mobileSubNavTrapTabKeyEvent, false);\n        submenu.classList.remove('active');\n        submenu.classList.remove('closing');\n        this.openSubNavElements.pop();\n      }\n      this.nav.removeEventListener(this.transitionEvent, this.mobileHideMainTransitionEndEvent, false);\n      this.nav.removeEventListener('keydown', this.mobileTrapTabKeyEvent, false);\n    }\n    mobileToggleMainNav(e) {\n      const {\n        currentTarget\n      } = e;\n      const isExpanded = currentTarget.getAttribute('aria-expanded') === 'true';\n      if (isExpanded) {\n        document.body.classList.remove('main-nav-active');\n        this.openNavButton.focus();\n        this.nav.classList.add('closing');\n        this.nav.addEventListener(this.transitionEvent, this.mobileHideMainTransitionEndEvent, false);\n      } else {\n        document.body.classList.add('main-nav-active');\n        this.nav.classList.add('activating');\n        this.nav.addEventListener(this.transitionEvent, this.mobileShowMainTransitionEndEvent, false);\n      }\n    }\n    buttonClickDesktop(event) {\n      const isDesktop = this.breakpoint.matches;\n      if (!isDesktop || !event.target.closest('.nsw-main-nav__sub-nav')) {\n        this.saveElements(event);\n        this.toggleSubNavDesktop();\n        event.preventDefault();\n      }\n    }\n    buttonKeydownDesktop(event) {\n      if (event.key === ' ' || event.key === 'Enter' || event.key === 'Spacebar') {\n        this.saveElements(event);\n        this.toggleSubNavDesktop();\n        event.preventDefault();\n      }\n    }\n    escapeClose(e) {\n      if (e.key === 'Escape') {\n        // removes handleOutsideClick functionality from docs site\n        if (this.nav.closest('.nsw-docs')) return;\n        const {\n          link\n        } = this.whichSubNavLatest();\n        const isExpanded = link.getAttribute('aria-expanded') === 'true';\n        if (isExpanded) {\n          this.toggleSubNavDesktop(true);\n          e.preventDefault();\n          link.focus();\n        }\n      }\n    }\n    saveElements(e) {\n      const {\n        currentTarget\n      } = e;\n      const temp = {\n        submenu: document.getElementById(currentTarget.getAttribute('aria-controls')),\n        link: currentTarget,\n        linkParent: currentTarget.parentNode\n      };\n      this.openSubNavElements.push(temp);\n    }\n    showSubNav(_ref3) {\n      let {\n        propertyName\n      } = _ref3;\n      const {\n        submenu\n      } = this.whichSubNavLatest();\n      if (propertyName !== 'transform') return;\n      getFocusableElementBySelector(submenu.id, ['> div button', '> .nsw-main-nav__title a', '> ul > li > a']).all[2].focus();\n      submenu.removeEventListener(this.transitionEvent, this.showSubNavTransitionEndEvent, false);\n    }\n    closeSubNav() {\n      const {\n        submenu,\n        link\n      } = this.whichSubNavLatest();\n      if (this.breakpoint.matches) {\n        link.setAttribute('aria-expanded', false);\n        link.classList.remove('active');\n        this.nav.removeEventListener('focus', this.checkFocusEvent, true);\n        // fix: workaround for safari because it doesn't support focus event\n        this.nav.removeEventListener('click', this.checkFocusEvent, true);\n      } else {\n        link.focus();\n        submenu.removeEventListener('keydown', this.mobileSubNavTrapTabKeyEvent, false);\n      }\n      submenu.classList.remove('active');\n      submenu.closest('ul').parentElement.classList.remove('no-scroll');\n      this.openSubNavElements.pop();\n    }\n    openSubNav() {\n      const {\n        submenu,\n        link\n      } = this.whichSubNavLatest();\n      if (this.breakpoint.matches) {\n        link.setAttribute('aria-expanded', true);\n        link.classList.add('active');\n        this.nav.addEventListener('focus', this.checkFocusEvent, true);\n        // fix: workaround for safari because it doesn't support focus event\n        this.nav.addEventListener('click', this.checkFocusEvent, true);\n      } else {\n        submenu.addEventListener('keydown', this.mobileSubNavTrapTabKeyEvent, false);\n        submenu.addEventListener(this.transitionEvent, this.showSubNavTransitionEndEvent, false);\n      }\n      submenu.closest('ul').parentElement.scrollTop = 0;\n      submenu.closest('ul').parentElement.classList.add('no-scroll');\n      submenu.classList.add('active');\n    }\n    toggleSubNavDesktop() {\n      const {\n        link\n      } = this.whichSubNavLatest();\n      const isExpanded = link.getAttribute('aria-expanded') === 'true';\n      if (isExpanded) {\n        this.mainNavIsOpen = false;\n        this.closeSubNav();\n      } else {\n        this.mainNavIsOpen = true;\n        this.openSubNav();\n      }\n    }\n    checkIfContainsFocus(e) {\n      const {\n        linkParent\n      } = this.whichSubNavLatest();\n      const focusWithin = linkParent.contains(e.target);\n      const isButton = e.target.closest('a').getAttribute('role') === 'button';\n      if (!focusWithin && isButton) {\n        this.toggleSubNavDesktop();\n      }\n    }\n    whichSubNavLatest() {\n      const lastSubNav = this.openSubNavElements.length - 1;\n      return this.openSubNavElements[lastSubNav];\n    }\n    trapkeyEventStuff(e) {\n      const {\n        submenu\n      } = this.whichSubNavLatest();\n      const elemObj = getFocusableElementBySelector(submenu.id, ['> div button', '> ul > li > a']);\n      trapTabKey(e, elemObj);\n    }\n  }\n\n  /**\n   * Custom positioning reference element.\n   * @see https://floating-ui.com/docs/virtual-elements\n   */\n\n  const min = Math.min;\n  const max = Math.max;\n  const round = Math.round;\n  const createCoords = v => ({\n    x: v,\n    y: v\n  });\n  const oppositeSideMap = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  const oppositeAlignmentMap = {\n    start: 'end',\n    end: 'start'\n  };\n  function clamp(start, value, end) {\n    return max(start, min(value, end));\n  }\n  function evaluate(value, param) {\n    return typeof value === 'function' ? value(param) : value;\n  }\n  function getSide(placement) {\n    return placement.split('-')[0];\n  }\n  function getAlignment(placement) {\n    return placement.split('-')[1];\n  }\n  function getOppositeAxis(axis) {\n    return axis === 'x' ? 'y' : 'x';\n  }\n  function getAxisLength(axis) {\n    return axis === 'y' ? 'height' : 'width';\n  }\n  function getSideAxis(placement) {\n    return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n  }\n  function getAlignmentAxis(placement) {\n    return getOppositeAxis(getSideAxis(placement));\n  }\n  function getAlignmentSides(placement, rects, rtl) {\n    if (rtl === void 0) {\n      rtl = false;\n    }\n    const alignment = getAlignment(placement);\n    const alignmentAxis = getAlignmentAxis(placement);\n    const length = getAxisLength(alignmentAxis);\n    let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n    if (rects.reference[length] > rects.floating[length]) {\n      mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n    }\n    return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n  }\n  function getExpandedPlacements(placement) {\n    const oppositePlacement = getOppositePlacement(placement);\n    return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n  }\n  function getOppositeAlignmentPlacement(placement) {\n    return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n  }\n  function getSideList(side, isStart, rtl) {\n    const lr = ['left', 'right'];\n    const rl = ['right', 'left'];\n    const tb = ['top', 'bottom'];\n    const bt = ['bottom', 'top'];\n    switch (side) {\n      case 'top':\n      case 'bottom':\n        if (rtl) return isStart ? rl : lr;\n        return isStart ? lr : rl;\n      case 'left':\n      case 'right':\n        return isStart ? tb : bt;\n      default:\n        return [];\n    }\n  }\n  function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n    const alignment = getAlignment(placement);\n    let list = getSideList(getSide(placement), direction === 'start', rtl);\n    if (alignment) {\n      list = list.map(side => side + \"-\" + alignment);\n      if (flipAlignment) {\n        list = list.concat(list.map(getOppositeAlignmentPlacement));\n      }\n    }\n    return list;\n  }\n  function getOppositePlacement(placement) {\n    return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n  }\n  function expandPaddingObject(padding) {\n    return {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...padding\n    };\n  }\n  function getPaddingObject(padding) {\n    return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    };\n  }\n  function rectToClientRect(rect) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = rect;\n    return {\n      width,\n      height,\n      top: y,\n      left: x,\n      right: x + width,\n      bottom: y + height,\n      x,\n      y\n    };\n  }\n\n  function computeCoordsFromPlacement(_ref, placement, rtl) {\n    let {\n      reference,\n      floating\n    } = _ref;\n    const sideAxis = getSideAxis(placement);\n    const alignmentAxis = getAlignmentAxis(placement);\n    const alignLength = getAxisLength(alignmentAxis);\n    const side = getSide(placement);\n    const isVertical = sideAxis === 'y';\n    const commonX = reference.x + reference.width / 2 - floating.width / 2;\n    const commonY = reference.y + reference.height / 2 - floating.height / 2;\n    const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n    let coords;\n    switch (side) {\n      case 'top':\n        coords = {\n          x: commonX,\n          y: reference.y - floating.height\n        };\n        break;\n      case 'bottom':\n        coords = {\n          x: commonX,\n          y: reference.y + reference.height\n        };\n        break;\n      case 'right':\n        coords = {\n          x: reference.x + reference.width,\n          y: commonY\n        };\n        break;\n      case 'left':\n        coords = {\n          x: reference.x - floating.width,\n          y: commonY\n        };\n        break;\n      default:\n        coords = {\n          x: reference.x,\n          y: reference.y\n        };\n    }\n    switch (getAlignment(placement)) {\n      case 'start':\n        coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n        break;\n      case 'end':\n        coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n        break;\n    }\n    return coords;\n  }\n\n  /**\n   * Computes the `x` and `y` coordinates that will place the floating element\n   * next to a given reference element.\n   *\n   * This export does not have any `platform` interface logic. You will need to\n   * write one for the platform you are using Floating UI with.\n   */\n  const computePosition$1 = async (reference, floating, config) => {\n    const {\n      placement = 'bottom',\n      strategy = 'absolute',\n      middleware = [],\n      platform\n    } = config;\n    const validMiddleware = middleware.filter(Boolean);\n    const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n    let rects = await platform.getElementRects({\n      reference,\n      floating,\n      strategy\n    });\n    let {\n      x,\n      y\n    } = computeCoordsFromPlacement(rects, placement, rtl);\n    let statefulPlacement = placement;\n    let middlewareData = {};\n    let resetCount = 0;\n    for (let i = 0; i < validMiddleware.length; i++) {\n      const {\n        name,\n        fn\n      } = validMiddleware[i];\n      const {\n        x: nextX,\n        y: nextY,\n        data,\n        reset\n      } = await fn({\n        x,\n        y,\n        initialPlacement: placement,\n        placement: statefulPlacement,\n        strategy,\n        middlewareData,\n        rects,\n        platform,\n        elements: {\n          reference,\n          floating\n        }\n      });\n      x = nextX != null ? nextX : x;\n      y = nextY != null ? nextY : y;\n      middlewareData = {\n        ...middlewareData,\n        [name]: {\n          ...middlewareData[name],\n          ...data\n        }\n      };\n      if (reset && resetCount <= 50) {\n        resetCount++;\n        if (typeof reset === 'object') {\n          if (reset.placement) {\n            statefulPlacement = reset.placement;\n          }\n          if (reset.rects) {\n            rects = reset.rects === true ? await platform.getElementRects({\n              reference,\n              floating,\n              strategy\n            }) : reset.rects;\n          }\n          ({\n            x,\n            y\n          } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n        }\n        i = -1;\n      }\n    }\n    return {\n      x,\n      y,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData\n    };\n  };\n\n  /**\n   * Resolves with an object of overflow side offsets that determine how much the\n   * element is overflowing a given clipping boundary on each side.\n   * - positive = overflowing the boundary by that number of pixels\n   * - negative = how many pixels left before it will overflow\n   * - 0 = lies flush with the boundary\n   * @see https://floating-ui.com/docs/detectOverflow\n   */\n  async function detectOverflow(state, options) {\n    var _await$platform$isEle;\n    if (options === void 0) {\n      options = {};\n    }\n    const {\n      x,\n      y,\n      platform,\n      rects,\n      elements,\n      strategy\n    } = state;\n    const {\n      boundary = 'clippingAncestors',\n      rootBoundary = 'viewport',\n      elementContext = 'floating',\n      altBoundary = false,\n      padding = 0\n    } = evaluate(options, state);\n    const paddingObject = getPaddingObject(padding);\n    const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n    const element = elements[altBoundary ? altContext : elementContext];\n    const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n      element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n      boundary,\n      rootBoundary,\n      strategy\n    }));\n    const rect = elementContext === 'floating' ? {\n      x,\n      y,\n      width: rects.floating.width,\n      height: rects.floating.height\n    } : rects.reference;\n    const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n    const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n      x: 1,\n      y: 1\n    } : {\n      x: 1,\n      y: 1\n    };\n    const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n      elements,\n      rect,\n      offsetParent,\n      strategy\n    }) : rect);\n    return {\n      top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n      bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n      left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n      right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n    };\n  }\n\n  /**\n   * Provides data to position an inner element of the floating element so that it\n   * appears centered to the reference element.\n   * @see https://floating-ui.com/docs/arrow\n   */\n  const arrow$1 = options => ({\n    name: 'arrow',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        platform,\n        elements,\n        middlewareData\n      } = state;\n      // Since `element` is required, we don't Partial<> the type.\n      const {\n        element,\n        padding = 0\n      } = evaluate(options, state) || {};\n      if (element == null) {\n        return {};\n      }\n      const paddingObject = getPaddingObject(padding);\n      const coords = {\n        x,\n        y\n      };\n      const axis = getAlignmentAxis(placement);\n      const length = getAxisLength(axis);\n      const arrowDimensions = await platform.getDimensions(element);\n      const isYAxis = axis === 'y';\n      const minProp = isYAxis ? 'top' : 'left';\n      const maxProp = isYAxis ? 'bottom' : 'right';\n      const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n      const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n      const startDiff = coords[axis] - rects.reference[axis];\n      const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n      let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n      // DOM platform can return `window` as the `offsetParent`.\n      if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n        clientSize = elements.floating[clientProp] || rects.floating[length];\n      }\n      const centerToReference = endDiff / 2 - startDiff / 2;\n\n      // If the padding is large enough that it causes the arrow to no longer be\n      // centered, modify the padding so that it is centered.\n      const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n      const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n      const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n      // Make sure the arrow doesn't overflow the floating element if the center\n      // point is outside the floating element's bounds.\n      const min$1 = minPadding;\n      const max = clientSize - arrowDimensions[length] - maxPadding;\n      const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n      const offset = clamp(min$1, center, max);\n\n      // If the reference is small enough that the arrow's padding causes it to\n      // to point to nothing for an aligned placement, adjust the offset of the\n      // floating element itself. To ensure `shift()` continues to take action,\n      // a single reset is performed when this is true.\n      const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n      const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n      return {\n        [axis]: coords[axis] + alignmentOffset,\n        data: {\n          [axis]: offset,\n          centerOffset: center - offset - alignmentOffset,\n          ...(shouldAddOffset && {\n            alignmentOffset\n          })\n        },\n        reset: shouldAddOffset\n      };\n    }\n  });\n\n  /**\n   * Optimizes the visibility of the floating element by flipping the `placement`\n   * in order to keep it in view when the preferred placement(s) will overflow the\n   * clipping boundary. Alternative to `autoPlacement`.\n   * @see https://floating-ui.com/docs/flip\n   */\n  const flip$1 = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return {\n      name: 'flip',\n      options,\n      async fn(state) {\n        var _middlewareData$arrow, _middlewareData$flip;\n        const {\n          placement,\n          middlewareData,\n          rects,\n          initialPlacement,\n          platform,\n          elements\n        } = state;\n        const {\n          mainAxis: checkMainAxis = true,\n          crossAxis: checkCrossAxis = true,\n          fallbackPlacements: specifiedFallbackPlacements,\n          fallbackStrategy = 'bestFit',\n          fallbackAxisSideDirection = 'none',\n          flipAlignment = true,\n          ...detectOverflowOptions\n        } = evaluate(options, state);\n\n        // If a reset by the arrow was caused due to an alignment offset being\n        // added, we should skip any logic now since `flip()` has already done its\n        // work.\n        // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n        if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n          return {};\n        }\n        const side = getSide(placement);\n        const initialSideAxis = getSideAxis(initialPlacement);\n        const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n        const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n        const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n        const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n        if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n          fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n        }\n        const placements = [initialPlacement, ...fallbackPlacements];\n        const overflow = await detectOverflow(state, detectOverflowOptions);\n        const overflows = [];\n        let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n        if (checkMainAxis) {\n          overflows.push(overflow[side]);\n        }\n        if (checkCrossAxis) {\n          const sides = getAlignmentSides(placement, rects, rtl);\n          overflows.push(overflow[sides[0]], overflow[sides[1]]);\n        }\n        overflowsData = [...overflowsData, {\n          placement,\n          overflows\n        }];\n\n        // One or more sides is overflowing.\n        if (!overflows.every(side => side <= 0)) {\n          var _middlewareData$flip2, _overflowsData$filter;\n          const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n          const nextPlacement = placements[nextIndex];\n          if (nextPlacement) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n\n          // First, find the candidates that fit on the mainAxis side of overflow,\n          // then find the placement that fits the best on the main crossAxis side.\n          let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n          // Otherwise fallback.\n          if (!resetPlacement) {\n            switch (fallbackStrategy) {\n              case 'bestFit':\n                {\n                  var _overflowsData$filter2;\n                  const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                    if (hasFallbackAxisSideDirection) {\n                      const currentSideAxis = getSideAxis(d.placement);\n                      return currentSideAxis === initialSideAxis ||\n                      // Create a bias to the `y` side axis due to horizontal\n                      // reading directions favoring greater width.\n                      currentSideAxis === 'y';\n                    }\n                    return true;\n                  }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                  if (placement) {\n                    resetPlacement = placement;\n                  }\n                  break;\n                }\n              case 'initialPlacement':\n                resetPlacement = initialPlacement;\n                break;\n            }\n          }\n          if (placement !== resetPlacement) {\n            return {\n              reset: {\n                placement: resetPlacement\n              }\n            };\n          }\n        }\n        return {};\n      }\n    };\n  };\n\n  // For type backwards-compatibility, the `OffsetOptions` type was also\n  // Derivable.\n\n  async function convertValueToCoords(state, options) {\n    const {\n      placement,\n      platform,\n      elements\n    } = state;\n    const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n    const side = getSide(placement);\n    const alignment = getAlignment(placement);\n    const isVertical = getSideAxis(placement) === 'y';\n    const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n    const crossAxisMulti = rtl && isVertical ? -1 : 1;\n    const rawValue = evaluate(options, state);\n\n    // eslint-disable-next-line prefer-const\n    let {\n      mainAxis,\n      crossAxis,\n      alignmentAxis\n    } = typeof rawValue === 'number' ? {\n      mainAxis: rawValue,\n      crossAxis: 0,\n      alignmentAxis: null\n    } : {\n      mainAxis: 0,\n      crossAxis: 0,\n      alignmentAxis: null,\n      ...rawValue\n    };\n    if (alignment && typeof alignmentAxis === 'number') {\n      crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n    }\n    return isVertical ? {\n      x: crossAxis * crossAxisMulti,\n      y: mainAxis * mainAxisMulti\n    } : {\n      x: mainAxis * mainAxisMulti,\n      y: crossAxis * crossAxisMulti\n    };\n  }\n\n  /**\n   * Modifies the placement by translating the floating element along the\n   * specified axes.\n   * A number (shorthand for `mainAxis` or distance), or an axes configuration\n   * object may be passed.\n   * @see https://floating-ui.com/docs/offset\n   */\n  const offset$1 = function (options) {\n    if (options === void 0) {\n      options = 0;\n    }\n    return {\n      name: 'offset',\n      options,\n      async fn(state) {\n        var _middlewareData$offse, _middlewareData$arrow;\n        const {\n          x,\n          y,\n          placement,\n          middlewareData\n        } = state;\n        const diffCoords = await convertValueToCoords(state, options);\n\n        // If the placement is the same and the arrow caused an alignment offset\n        // then we don't need to change the positioning coordinates.\n        if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n          return {};\n        }\n        return {\n          x: x + diffCoords.x,\n          y: y + diffCoords.y,\n          data: {\n            ...diffCoords,\n            placement\n          }\n        };\n      }\n    };\n  };\n\n  /**\n   * Optimizes the visibility of the floating element by shifting it in order to\n   * keep it in view when it will overflow the clipping boundary.\n   * @see https://floating-ui.com/docs/shift\n   */\n  const shift$1 = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return {\n      name: 'shift',\n      options,\n      async fn(state) {\n        const {\n          x,\n          y,\n          placement\n        } = state;\n        const {\n          mainAxis: checkMainAxis = true,\n          crossAxis: checkCrossAxis = false,\n          limiter = {\n            fn: _ref => {\n              let {\n                x,\n                y\n              } = _ref;\n              return {\n                x,\n                y\n              };\n            }\n          },\n          ...detectOverflowOptions\n        } = evaluate(options, state);\n        const coords = {\n          x,\n          y\n        };\n        const overflow = await detectOverflow(state, detectOverflowOptions);\n        const crossAxis = getSideAxis(getSide(placement));\n        const mainAxis = getOppositeAxis(crossAxis);\n        let mainAxisCoord = coords[mainAxis];\n        let crossAxisCoord = coords[crossAxis];\n        if (checkMainAxis) {\n          const minSide = mainAxis === 'y' ? 'top' : 'left';\n          const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n          const min = mainAxisCoord + overflow[minSide];\n          const max = mainAxisCoord - overflow[maxSide];\n          mainAxisCoord = clamp(min, mainAxisCoord, max);\n        }\n        if (checkCrossAxis) {\n          const minSide = crossAxis === 'y' ? 'top' : 'left';\n          const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n          const min = crossAxisCoord + overflow[minSide];\n          const max = crossAxisCoord - overflow[maxSide];\n          crossAxisCoord = clamp(min, crossAxisCoord, max);\n        }\n        const limitedCoords = limiter.fn({\n          ...state,\n          [mainAxis]: mainAxisCoord,\n          [crossAxis]: crossAxisCoord\n        });\n        return {\n          ...limitedCoords,\n          data: {\n            x: limitedCoords.x - x,\n            y: limitedCoords.y - y\n          }\n        };\n      }\n    };\n  };\n  /**\n   * Built-in `limiter` that will stop `shift()` at a certain point.\n   */\n  const limitShift$1 = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return {\n      options,\n      fn(state) {\n        const {\n          x,\n          y,\n          placement,\n          rects,\n          middlewareData\n        } = state;\n        const {\n          offset = 0,\n          mainAxis: checkMainAxis = true,\n          crossAxis: checkCrossAxis = true\n        } = evaluate(options, state);\n        const coords = {\n          x,\n          y\n        };\n        const crossAxis = getSideAxis(placement);\n        const mainAxis = getOppositeAxis(crossAxis);\n        let mainAxisCoord = coords[mainAxis];\n        let crossAxisCoord = coords[crossAxis];\n        const rawOffset = evaluate(offset, state);\n        const computedOffset = typeof rawOffset === 'number' ? {\n          mainAxis: rawOffset,\n          crossAxis: 0\n        } : {\n          mainAxis: 0,\n          crossAxis: 0,\n          ...rawOffset\n        };\n        if (checkMainAxis) {\n          const len = mainAxis === 'y' ? 'height' : 'width';\n          const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n          const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n          if (mainAxisCoord < limitMin) {\n            mainAxisCoord = limitMin;\n          } else if (mainAxisCoord > limitMax) {\n            mainAxisCoord = limitMax;\n          }\n        }\n        if (checkCrossAxis) {\n          var _middlewareData$offse, _middlewareData$offse2;\n          const len = mainAxis === 'y' ? 'width' : 'height';\n          const isOriginSide = ['top', 'left'].includes(getSide(placement));\n          const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n          const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n          if (crossAxisCoord < limitMin) {\n            crossAxisCoord = limitMin;\n          } else if (crossAxisCoord > limitMax) {\n            crossAxisCoord = limitMax;\n          }\n        }\n        return {\n          [mainAxis]: mainAxisCoord,\n          [crossAxis]: crossAxisCoord\n        };\n      }\n    };\n  };\n\n  function hasWindow() {\n    return typeof window !== 'undefined';\n  }\n  function getNodeName(node) {\n    if (isNode(node)) {\n      return (node.nodeName || '').toLowerCase();\n    }\n    // Mocked nodes in testing environments may not be instances of Node. By\n    // returning `#document` an infinite loop won't occur.\n    // https://github.com/floating-ui/floating-ui/issues/2317\n    return '#document';\n  }\n  function getWindow(node) {\n    var _node$ownerDocument;\n    return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n  }\n  function getDocumentElement(node) {\n    var _ref;\n    return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n  }\n  function isNode(value) {\n    if (!hasWindow()) {\n      return false;\n    }\n    return value instanceof Node || value instanceof getWindow(value).Node;\n  }\n  function isElement(value) {\n    if (!hasWindow()) {\n      return false;\n    }\n    return value instanceof Element || value instanceof getWindow(value).Element;\n  }\n  function isHTMLElement(value) {\n    if (!hasWindow()) {\n      return false;\n    }\n    return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n  }\n  function isShadowRoot(value) {\n    if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n      return false;\n    }\n    return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n  }\n  function isOverflowElement(element) {\n    const {\n      overflow,\n      overflowX,\n      overflowY,\n      display\n    } = getComputedStyle$1(element);\n    return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n  }\n  function isTableElement(element) {\n    return ['table', 'td', 'th'].includes(getNodeName(element));\n  }\n  function isTopLayer(element) {\n    return [':popover-open', ':modal'].some(selector => {\n      try {\n        return element.matches(selector);\n      } catch (e) {\n        return false;\n      }\n    });\n  }\n  function isContainingBlock(elementOrCss) {\n    const webkit = isWebKit();\n    const css = isElement(elementOrCss) ? getComputedStyle$1(elementOrCss) : elementOrCss;\n\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n    // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n    return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n  }\n  function getContainingBlock(element) {\n    let currentNode = getParentNode(element);\n    while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n      if (isContainingBlock(currentNode)) {\n        return currentNode;\n      } else if (isTopLayer(currentNode)) {\n        return null;\n      }\n      currentNode = getParentNode(currentNode);\n    }\n    return null;\n  }\n  function isWebKit() {\n    if (typeof CSS === 'undefined' || !CSS.supports) return false;\n    return CSS.supports('-webkit-backdrop-filter', 'none');\n  }\n  function isLastTraversableNode(node) {\n    return ['html', 'body', '#document'].includes(getNodeName(node));\n  }\n  function getComputedStyle$1(element) {\n    return getWindow(element).getComputedStyle(element);\n  }\n  function getNodeScroll(element) {\n    if (isElement(element)) {\n      return {\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n      };\n    }\n    return {\n      scrollLeft: element.scrollX,\n      scrollTop: element.scrollY\n    };\n  }\n  function getParentNode(node) {\n    if (getNodeName(node) === 'html') {\n      return node;\n    }\n    const result =\n    // Step into the shadow DOM of the parent of a slotted node.\n    node.assignedSlot ||\n    // DOM Element detected.\n    node.parentNode ||\n    // ShadowRoot detected.\n    isShadowRoot(node) && node.host ||\n    // Fallback.\n    getDocumentElement(node);\n    return isShadowRoot(result) ? result.host : result;\n  }\n  function getNearestOverflowAncestor(node) {\n    const parentNode = getParentNode(node);\n    if (isLastTraversableNode(parentNode)) {\n      return node.ownerDocument ? node.ownerDocument.body : node.body;\n    }\n    if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n      return parentNode;\n    }\n    return getNearestOverflowAncestor(parentNode);\n  }\n  function getOverflowAncestors(node, list, traverseIframes) {\n    var _node$ownerDocument2;\n    if (list === void 0) {\n      list = [];\n    }\n    if (traverseIframes === void 0) {\n      traverseIframes = true;\n    }\n    const scrollableAncestor = getNearestOverflowAncestor(node);\n    const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n    const win = getWindow(scrollableAncestor);\n    if (isBody) {\n      const frameElement = getFrameElement(win);\n      return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n    }\n    return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n  }\n  function getFrameElement(win) {\n    return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n  }\n\n  function getCssDimensions(element) {\n    const css = getComputedStyle$1(element);\n    // In testing environments, the `width` and `height` properties are empty\n    // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n    let width = parseFloat(css.width) || 0;\n    let height = parseFloat(css.height) || 0;\n    const hasOffset = isHTMLElement(element);\n    const offsetWidth = hasOffset ? element.offsetWidth : width;\n    const offsetHeight = hasOffset ? element.offsetHeight : height;\n    const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n    if (shouldFallback) {\n      width = offsetWidth;\n      height = offsetHeight;\n    }\n    return {\n      width,\n      height,\n      $: shouldFallback\n    };\n  }\n  function unwrapElement(element) {\n    return !isElement(element) ? element.contextElement : element;\n  }\n  function getScale(element) {\n    const domElement = unwrapElement(element);\n    if (!isHTMLElement(domElement)) {\n      return createCoords(1);\n    }\n    const rect = domElement.getBoundingClientRect();\n    const {\n      width,\n      height,\n      $\n    } = getCssDimensions(domElement);\n    let x = ($ ? round(rect.width) : rect.width) / width;\n    let y = ($ ? round(rect.height) : rect.height) / height;\n\n    // 0, NaN, or Infinity should always fallback to 1.\n\n    if (!x || !Number.isFinite(x)) {\n      x = 1;\n    }\n    if (!y || !Number.isFinite(y)) {\n      y = 1;\n    }\n    return {\n      x,\n      y\n    };\n  }\n  const noOffsets = /*#__PURE__*/createCoords(0);\n  function getVisualOffsets(element) {\n    const win = getWindow(element);\n    if (!isWebKit() || !win.visualViewport) {\n      return noOffsets;\n    }\n    return {\n      x: win.visualViewport.offsetLeft,\n      y: win.visualViewport.offsetTop\n    };\n  }\n  function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n    if (isFixed === void 0) {\n      isFixed = false;\n    }\n    if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n      return false;\n    }\n    return isFixed;\n  }\n  function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n    if (includeScale === void 0) {\n      includeScale = false;\n    }\n    if (isFixedStrategy === void 0) {\n      isFixedStrategy = false;\n    }\n    const clientRect = element.getBoundingClientRect();\n    const domElement = unwrapElement(element);\n    let scale = createCoords(1);\n    if (includeScale) {\n      if (offsetParent) {\n        if (isElement(offsetParent)) {\n          scale = getScale(offsetParent);\n        }\n      } else {\n        scale = getScale(element);\n      }\n    }\n    const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n    let x = (clientRect.left + visualOffsets.x) / scale.x;\n    let y = (clientRect.top + visualOffsets.y) / scale.y;\n    let width = clientRect.width / scale.x;\n    let height = clientRect.height / scale.y;\n    if (domElement) {\n      const win = getWindow(domElement);\n      const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n      let currentWin = win;\n      let currentIFrame = getFrameElement(currentWin);\n      while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n        const iframeScale = getScale(currentIFrame);\n        const iframeRect = currentIFrame.getBoundingClientRect();\n        const css = getComputedStyle$1(currentIFrame);\n        const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n        const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n        x *= iframeScale.x;\n        y *= iframeScale.y;\n        width *= iframeScale.x;\n        height *= iframeScale.y;\n        x += left;\n        y += top;\n        currentWin = getWindow(currentIFrame);\n        currentIFrame = getFrameElement(currentWin);\n      }\n    }\n    return rectToClientRect({\n      width,\n      height,\n      x,\n      y\n    });\n  }\n\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  function getWindowScrollBarX(element, rect) {\n    const leftScroll = getNodeScroll(element).scrollLeft;\n    if (!rect) {\n      return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n    }\n    return rect.left + leftScroll;\n  }\n  function getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n    if (ignoreScrollbarX === void 0) {\n      ignoreScrollbarX = false;\n    }\n    const htmlRect = documentElement.getBoundingClientRect();\n    const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n    // RTL <body> scrollbar.\n    getWindowScrollBarX(documentElement, htmlRect));\n    const y = htmlRect.top + scroll.scrollTop;\n    return {\n      x,\n      y\n    };\n  }\n  function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n    let {\n      elements,\n      rect,\n      offsetParent,\n      strategy\n    } = _ref;\n    const isFixed = strategy === 'fixed';\n    const documentElement = getDocumentElement(offsetParent);\n    const topLayer = elements ? isTopLayer(elements.floating) : false;\n    if (offsetParent === documentElement || topLayer && isFixed) {\n      return rect;\n    }\n    let scroll = {\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    let scale = createCoords(1);\n    const offsets = createCoords(0);\n    const isOffsetParentAnElement = isHTMLElement(offsetParent);\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n      if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n        scroll = getNodeScroll(offsetParent);\n      }\n      if (isHTMLElement(offsetParent)) {\n        const offsetRect = getBoundingClientRect(offsetParent);\n        scale = getScale(offsetParent);\n        offsets.x = offsetRect.x + offsetParent.clientLeft;\n        offsets.y = offsetRect.y + offsetParent.clientTop;\n      }\n    }\n    const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n    return {\n      width: rect.width * scale.x,\n      height: rect.height * scale.y,\n      x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n      y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n    };\n  }\n  function getClientRects(element) {\n    return Array.from(element.getClientRects());\n  }\n\n  // Gets the entire size of the scrollable document area, even extending outside\n  // of the `<html>` and `<body>` rect bounds if horizontally scrollable.\n  function getDocumentRect(element) {\n    const html = getDocumentElement(element);\n    const scroll = getNodeScroll(element);\n    const body = element.ownerDocument.body;\n    const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n    const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n    let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n    const y = -scroll.scrollTop;\n    if (getComputedStyle$1(body).direction === 'rtl') {\n      x += max(html.clientWidth, body.clientWidth) - width;\n    }\n    return {\n      width,\n      height,\n      x,\n      y\n    };\n  }\n  function getViewportRect(element, strategy) {\n    const win = getWindow(element);\n    const html = getDocumentElement(element);\n    const visualViewport = win.visualViewport;\n    let width = html.clientWidth;\n    let height = html.clientHeight;\n    let x = 0;\n    let y = 0;\n    if (visualViewport) {\n      width = visualViewport.width;\n      height = visualViewport.height;\n      const visualViewportBased = isWebKit();\n      if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n        x = visualViewport.offsetLeft;\n        y = visualViewport.offsetTop;\n      }\n    }\n    return {\n      width,\n      height,\n      x,\n      y\n    };\n  }\n\n  // Returns the inner client rect, subtracting scrollbars if present.\n  function getInnerBoundingClientRect(element, strategy) {\n    const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n    const top = clientRect.top + element.clientTop;\n    const left = clientRect.left + element.clientLeft;\n    const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n    const width = element.clientWidth * scale.x;\n    const height = element.clientHeight * scale.y;\n    const x = left * scale.x;\n    const y = top * scale.y;\n    return {\n      width,\n      height,\n      x,\n      y\n    };\n  }\n  function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n    let rect;\n    if (clippingAncestor === 'viewport') {\n      rect = getViewportRect(element, strategy);\n    } else if (clippingAncestor === 'document') {\n      rect = getDocumentRect(getDocumentElement(element));\n    } else if (isElement(clippingAncestor)) {\n      rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n    } else {\n      const visualOffsets = getVisualOffsets(element);\n      rect = {\n        x: clippingAncestor.x - visualOffsets.x,\n        y: clippingAncestor.y - visualOffsets.y,\n        width: clippingAncestor.width,\n        height: clippingAncestor.height\n      };\n    }\n    return rectToClientRect(rect);\n  }\n  function hasFixedPositionAncestor(element, stopNode) {\n    const parentNode = getParentNode(element);\n    if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n      return false;\n    }\n    return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n  }\n\n  // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n  // clipping (or hiding) child elements. This returns all clipping ancestors\n  // of the given element up the tree.\n  function getClippingElementAncestors(element, cache) {\n    const cachedResult = cache.get(element);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n    let currentContainingBlockComputedStyle = null;\n    const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n    let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n    while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n      const computedStyle = getComputedStyle$1(currentNode);\n      const currentNodeIsContaining = isContainingBlock(currentNode);\n      if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n        currentContainingBlockComputedStyle = null;\n      }\n      const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n      if (shouldDropCurrentNode) {\n        // Drop non-containing blocks.\n        result = result.filter(ancestor => ancestor !== currentNode);\n      } else {\n        // Record last containing block for next iteration.\n        currentContainingBlockComputedStyle = computedStyle;\n      }\n      currentNode = getParentNode(currentNode);\n    }\n    cache.set(element, result);\n    return result;\n  }\n\n  // Gets the maximum area that the element is visible in due to any number of\n  // clipping ancestors.\n  function getClippingRect(_ref) {\n    let {\n      element,\n      boundary,\n      rootBoundary,\n      strategy\n    } = _ref;\n    const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n    const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n    const firstClippingAncestor = clippingAncestors[0];\n    const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n      const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n      accRect.top = max(rect.top, accRect.top);\n      accRect.right = min(rect.right, accRect.right);\n      accRect.bottom = min(rect.bottom, accRect.bottom);\n      accRect.left = max(rect.left, accRect.left);\n      return accRect;\n    }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n    return {\n      width: clippingRect.right - clippingRect.left,\n      height: clippingRect.bottom - clippingRect.top,\n      x: clippingRect.left,\n      y: clippingRect.top\n    };\n  }\n  function getDimensions(element) {\n    const {\n      width,\n      height\n    } = getCssDimensions(element);\n    return {\n      width,\n      height\n    };\n  }\n  function getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n    const isOffsetParentAnElement = isHTMLElement(offsetParent);\n    const documentElement = getDocumentElement(offsetParent);\n    const isFixed = strategy === 'fixed';\n    const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n    let scroll = {\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    const offsets = createCoords(0);\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n      if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n        scroll = getNodeScroll(offsetParent);\n      }\n      if (isOffsetParentAnElement) {\n        const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n        offsets.x = offsetRect.x + offsetParent.clientLeft;\n        offsets.y = offsetRect.y + offsetParent.clientTop;\n      } else if (documentElement) {\n        // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n        // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n        offsets.x = getWindowScrollBarX(documentElement);\n      }\n    }\n    const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n    const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n    const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n    return {\n      x,\n      y,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n  function isStaticPositioned(element) {\n    return getComputedStyle$1(element).position === 'static';\n  }\n  function getTrueOffsetParent(element, polyfill) {\n    if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n      return null;\n    }\n    if (polyfill) {\n      return polyfill(element);\n    }\n    let rawOffsetParent = element.offsetParent;\n\n    // Firefox returns the <html> element as the offsetParent if it's non-static,\n    // while Chrome and Safari return the <body> element. The <body> element must\n    // be used to perform the correct calculations even if the <html> element is\n    // non-static.\n    if (getDocumentElement(element) === rawOffsetParent) {\n      rawOffsetParent = rawOffsetParent.ownerDocument.body;\n    }\n    return rawOffsetParent;\n  }\n\n  // Gets the closest ancestor positioned element. Handles some edge cases,\n  // such as table ancestors and cross browser bugs.\n  function getOffsetParent(element, polyfill) {\n    const win = getWindow(element);\n    if (isTopLayer(element)) {\n      return win;\n    }\n    if (!isHTMLElement(element)) {\n      let svgOffsetParent = getParentNode(element);\n      while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n        if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n          return svgOffsetParent;\n        }\n        svgOffsetParent = getParentNode(svgOffsetParent);\n      }\n      return win;\n    }\n    let offsetParent = getTrueOffsetParent(element, polyfill);\n    while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n      offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n    }\n    if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n      return win;\n    }\n    return offsetParent || getContainingBlock(element) || win;\n  }\n  const getElementRects = async function (data) {\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    const floatingDimensions = await getDimensionsFn(data.floating);\n    return {\n      reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        width: floatingDimensions.width,\n        height: floatingDimensions.height\n      }\n    };\n  };\n  function isRTL(element) {\n    return getComputedStyle$1(element).direction === 'rtl';\n  }\n  const platform = {\n    convertOffsetParentRelativeRectToViewportRelativeRect,\n    getDocumentElement,\n    getClippingRect,\n    getOffsetParent,\n    getElementRects,\n    getClientRects,\n    getDimensions,\n    getScale,\n    isElement,\n    isRTL\n  };\n\n  /**\n   * Modifies the placement by translating the floating element along the\n   * specified axes.\n   * A number (shorthand for `mainAxis` or distance), or an axes configuration\n   * object may be passed.\n   * @see https://floating-ui.com/docs/offset\n   */\n  const offset = offset$1;\n\n  /**\n   * Optimizes the visibility of the floating element by shifting it in order to\n   * keep it in view when it will overflow the clipping boundary.\n   * @see https://floating-ui.com/docs/shift\n   */\n  const shift = shift$1;\n\n  /**\n   * Optimizes the visibility of the floating element by flipping the `placement`\n   * in order to keep it in view when the preferred placement(s) will overflow the\n   * clipping boundary. Alternative to `autoPlacement`.\n   * @see https://floating-ui.com/docs/flip\n   */\n  const flip = flip$1;\n\n  /**\n   * Provides data to position an inner element of the floating element so that it\n   * appears centered to the reference element.\n   * @see https://floating-ui.com/docs/arrow\n   */\n  const arrow = arrow$1;\n\n  /**\n   * Built-in `limiter` that will stop `shift()` at a certain point.\n   */\n  const limitShift = limitShift$1;\n\n  /**\n   * Computes the `x` and `y` coordinates that will place the floating element\n   * next to a given reference element.\n   */\n  const computePosition = (reference, floating, options) => {\n    // This caches the expensive `getClippingElementAncestors` function so that\n    // multiple lifecycle resets re-use the same result. It only lives for a\n    // single call. If other functions become expensive, we can add them as well.\n    const cache = new Map();\n    const mergedOptions = {\n      platform,\n      ...options\n    };\n    const platformWithCache = {\n      ...mergedOptions.platform,\n      _c: cache\n    };\n    return computePosition$1(reference, floating, {\n      ...mergedOptions,\n      platform: platformWithCache\n    });\n  };\n\n  /* eslint-disable max-len */\n  class Popover {\n    constructor(element) {\n      this.element = element;\n      this.popoverId = this.element.getAttribute('aria-controls');\n      this.popoverPosition = this.element.dataset.popoverPosition || 'bottom';\n      this.popoverGap = this.element.dataset.popoverGap || 5;\n      this.popoverAnchor = this.element.querySelector('[data-anchor]') || this.element;\n      this.popoverElement = this.popoverId && document.querySelector(`#${this.popoverId}`);\n      this.popoverVisibleClass = 'active';\n      this.popoverContent = false;\n      this.popoverIsOpen = false;\n      this.firstFocusable = null;\n      this.lastFocusable = null;\n    }\n    init() {\n      if (!this.popoverElement) return;\n      this.constructor.setAttributes(this.element, {\n        tabindex: '0',\n        'aria-haspopup': 'dialog'\n      });\n      this.initEvents();\n    }\n    initEvents() {\n      this.element.addEventListener('click', this.togglePopover.bind(this));\n      this.element.addEventListener('keyup', event => {\n        if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') {\n          this.togglePopover();\n        }\n      });\n      window.addEventListener('DOMContentLoaded', () => {\n        this.popoverContent = this.popoverElement.innerHTML;\n      });\n      this.popoverElement.addEventListener('keydown', this.trapFocus.bind(this));\n      window.addEventListener('click', event => {\n        this.checkPopoverClick(event.target);\n      });\n      window.addEventListener('keyup', event => {\n        if (event.code && event.code.toLowerCase() === 'escape' || event.key && event.key.toLowerCase() === 'escape') {\n          this.checkPopoverFocus();\n        }\n      });\n      this.debouncedTogglePopover = this.constructor.debounce(() => {\n        if (this.popoverIsOpen) this.togglePopover();\n      }, 300);\n      window.addEventListener('resize', this.debouncedTogglePopover);\n      window.addEventListener('scroll', this.debouncedTogglePopover);\n    }\n    static debounce(func, wait) {\n      let timeout;\n      return function executedFunction() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const later = () => {\n          clearTimeout(timeout);\n          func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n      };\n    }\n    togglePopover() {\n      if (this.popoverElement.classList.contains('active')) {\n        this.hidePopover();\n      } else {\n        this.popoverElement.focus();\n        this.showPopover();\n      }\n    }\n    showPopover() {\n      this.constructor.setAttributes(this.popoverElement, {\n        tabindex: '0',\n        role: 'dialog'\n      });\n      this.popoverElement.setAttribute('aria-expanded', 'true');\n      this.popoverElement.classList.add('active');\n      this.popoverIsOpen = true;\n      this.getFocusableElements();\n      this.popoverElement.focus({\n        preventScroll: true\n      });\n      this.element.addEventListener('transitionend', () => {\n        this.focusPopover();\n      }, {\n        once: true\n      });\n      this.updatePopover(this.popoverElement, this.popoverPosition);\n    }\n    hidePopover() {\n      this.popoverElement.setAttribute('aria-expanded', 'false');\n      this.popoverElement.classList.remove('active');\n      this.popoverIsOpen = false;\n    }\n    async updatePopover(popover, placement) {\n      let anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.popoverAnchor;\n      try {\n        const {\n          x,\n          y\n        } = await computePosition(anchor, popover, {\n          placement,\n          middleware: [offset(parseInt(this.popoverGap, 10)), flip({\n            fallbackAxisSideDirection: 'start',\n            crossAxis: false\n          }), shift({\n            limiter: limitShift()\n          })]\n        });\n        Object.assign(popover.style, {\n          left: `${x}px`,\n          top: `${y}px`\n        });\n      } catch (error) {\n        console.error('Error updating popover position:', error);\n      }\n    }\n    checkPopoverClick(target) {\n      if (!this.popoverIsOpen) return;\n      if (!this.popoverElement.contains(target) && !target.closest(`[aria-controls=\"${this.popoverId}\"]`)) this.togglePopover();\n    }\n    checkPopoverFocus() {\n      if (!this.popoverIsOpen) return;\n      this.constructor.moveFocus(this.element);\n      this.togglePopover();\n    }\n    focusPopover() {\n      if (this.firstFocusable) {\n        this.firstFocusable.focus({\n          preventScroll: true\n        });\n      } else {\n        this.constructor.moveFocus(this.popoverElement);\n      }\n    }\n    getFocusableElements() {\n      const focusableElString = '[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable], audio[controls], video[controls], summary';\n      const allFocusable = this.popoverElement.querySelectorAll(focusableElString);\n      this.getFirstVisible(allFocusable);\n      this.getLastVisible(allFocusable);\n    }\n    getFirstVisible(elements) {\n      for (let i = 0; i < elements.length; i += 1) {\n        if (this.constructor.isVisible(elements[i])) {\n          this.firstFocusable = elements[i];\n          break;\n        }\n      }\n    }\n    getLastVisible(elements) {\n      for (let i = elements.length - 1; i >= 0; i -= 1) {\n        if (this.constructor.isVisible(elements[i])) {\n          this.lastFocusable = elements[i];\n          break;\n        }\n      }\n    }\n    trapFocus(event) {\n      if (this.firstFocusable === document.activeElement && event.shiftKey) {\n        event.preventDefault();\n        this.lastFocusable.focus();\n      }\n      if (this.lastFocusable === document.activeElement && !event.shiftKey) {\n        event.preventDefault();\n        this.firstFocusable.focus();\n      }\n    }\n    static isVisible(element) {\n      return element.offsetWidth || element.offsetHeight || element.getClientRects().length;\n    }\n    static moveFocus(element) {\n      element.focus({\n        preventScroll: true\n      });\n      if (document.activeElement !== element) {\n        element.setAttribute('tabindex', '-1');\n        element.focus();\n      }\n    }\n    static setAttributes(el, attrs) {\n      Object.keys(attrs).forEach(key => el.setAttribute(key, attrs[key]));\n    }\n  }\n\n  /* eslint-disable max-len */\n  class Select {\n    constructor(element) {\n      this.element = element;\n      this.select = this.element.querySelector('select');\n      this.optGroups = this.select && this.select.getElementsByTagName('optgroup');\n      this.options = this.select && this.select.getElementsByTagName('option');\n      this.selectId = this.select && this.select.getAttribute('id');\n      this.trigger = false;\n      this.dropdown = false;\n      this.customOptions = false;\n      this.list = false;\n      this.allButton = false;\n      this.arrowIcon = this.element.getElementsByTagName('svg');\n      this.label = document.querySelector(`[for=\"${this.selectId}\"]`);\n      this.selectedOptCounter = 0;\n      this.optionIndex = 0;\n      this.noSelectText = this.element.getAttribute('data-select-text') || 'Select';\n      this.multiSelectText = this.element.getAttribute('data-multi-select-text') || '{n} items selected';\n      this.nMultiSelect = this.element.getAttribute('data-n-multi-select') || 1;\n      this.noUpdateLabel = this.element.getAttribute('data-update-text') && this.element.getAttribute('data-update-text') === 'off';\n      this.insetLabel = this.element.getAttribute('data-inset-label') && this.element.getAttribute('data-inset-label') === 'on';\n      this.hideClass = 'nsw-display-none';\n      this.showClass = 'active';\n      this.errorClass = 'has-error';\n      this.srClass = 'sr-only';\n      this.prefix = 'nsw-';\n      this.class = 'multi-select';\n      this.buttonClass = `${this.class}__button`;\n      this.allButtonClass = `${this.class}__all`;\n      this.listClass = `${this.class}__list`;\n      this.optionClass = `${this.class}__option`;\n      this.dropdownClass = `${this.class}__dropdown`;\n      this.checkboxClass = `${this.class}__checkbox`;\n      this.itemClass = `${this.class}__item`;\n      this.labelClass = `${this.class}__label`;\n      this.termClass = `${this.class}__term`;\n      this.detailsClass = `${this.class}__details`;\n      this.selectClass = 'form__select';\n      this.checkboxLabelClass = 'form__checkbox-label';\n      this.checkboxInputClass = 'form__checkbox-input';\n    }\n    init() {\n      if (!this.select) return;\n      this.element.insertAdjacentHTML('beforeend', this.initButtonSelect() + this.initListSelect());\n      this.dropdown = this.element.querySelector(`.js-${this.dropdownClass}`);\n      this.trigger = this.element.querySelector(`.js-${this.buttonClass}`);\n      this.customOptions = this.dropdown.querySelectorAll(`.js-${this.optionClass}`);\n      this.list = this.dropdown.querySelector(`.js-${this.listClass}`);\n      this.list.insertAdjacentHTML('afterbegin', this.initAllButton());\n      this.allButton = this.list.querySelector(`.js-${this.allButtonClass}`);\n      this.select.classList.add(this.hideClass);\n      if (this.arrowIcon.length > 0) this.arrowIcon[0].style.display = 'none';\n      this.initCustomSelectEvents();\n      this.updateAllButton();\n    }\n    initCustomSelectEvents() {\n      this.initSelection();\n      this.trigger.addEventListener('click', event => {\n        event.preventDefault();\n        this.toggleCustomSelect(false);\n      });\n      if (this.label) {\n        this.label.addEventListener('click', () => {\n          this.constructor.moveFocusFn(this.trigger);\n        });\n      }\n      this.dropdown.addEventListener('keydown', event => {\n        if (event.key && event.key.toLowerCase() === 'arrowup') {\n          this.keyboardCustomSelect('prev', event);\n        } else if (event.key && event.key.toLowerCase() === 'arrowdown') {\n          this.keyboardCustomSelect('next', event);\n        }\n      });\n      window.addEventListener('keyup', event => {\n        if (event.key && event.key.toLowerCase() === 'escape') {\n          this.moveFocusToSelectTrigger();\n          this.toggleCustomSelect('false');\n        }\n      });\n      window.addEventListener('click', event => {\n        this.checkCustomSelectClick(event.target);\n      });\n    }\n    toggleCustomSelect(bool) {\n      let ariaExpanded;\n      if (bool) {\n        ariaExpanded = bool;\n      } else {\n        ariaExpanded = this.trigger.getAttribute('aria-expanded') === 'true' ? 'false' : 'true';\n      }\n      this.trigger.setAttribute('aria-expanded', ariaExpanded);\n      const options = this.dropdown.querySelectorAll(`.js-${this.optionClass}`);\n      options.forEach(option => {\n        const isVisible = ariaExpanded === 'true';\n        option.setAttribute('aria-hidden', !isVisible);\n      });\n      if (ariaExpanded === 'true') {\n        const selectedOption = this.getSelectedOption() || this.allButton;\n        this.constructor.moveFocusFn(selectedOption);\n        const cb = () => {\n          this.constructor.moveFocusFn(selectedOption);\n          this.dropdown.removeEventListener('transitionend', cb);\n        };\n        this.dropdown.addEventListener('transitionend', cb);\n        this.constructor.trapFocus(this.dropdown);\n        this.placeDropdown();\n      }\n    }\n    placeDropdown() {\n      const {\n        top,\n        bottom,\n        left\n      } = this.trigger.getBoundingClientRect();\n      this.dropdown.classList.toggle(`${this.prefix}${this.dropdownClass}--right`, window.innerWidth < left + this.dropdown.offsetWidth);\n      const moveUp = window.innerHeight - bottom < top;\n      this.dropdown.classList.toggle(`${this.prefix}${this.dropdownClass}--up`, moveUp);\n      const maxHeight = moveUp ? top - 20 : window.innerHeight - bottom - 20;\n      const vhCalc = Math.ceil(100 * maxHeight / window.innerHeight);\n      this.dropdown.setAttribute('style', `max-height: ${vhCalc}vh;`);\n    }\n    keyboardCustomSelect(direction, event) {\n      event.preventDefault();\n      const allOptions = [...this.customOptions, this.allButton];\n      let index = allOptions.findIndex(option => option === document.activeElement.closest(`.js-${this.optionClass}`));\n      index = direction === 'next' ? index + 1 : index - 1;\n      if (index < 0) index = allOptions.length - 1;\n      if (index >= allOptions.length) index = 0;\n      const targetOption = allOptions[index].querySelector(`.js-${this.checkboxClass}`) || this.allButton;\n      this.constructor.moveFocusFn(targetOption);\n    }\n    toggleAllButton() {\n      const status = !this.allButton.classList.contains(this.showClass);\n      this.allButton.classList.toggle(this.showClass, status);\n      const [optionsArray, totalOptions, selectedOptions] = this.getOptions();\n      optionsArray.forEach(option => {\n        option.setAttribute('aria-selected', 'false');\n        this.selectOption(option);\n      });\n      if (selectedOptions === totalOptions) {\n        optionsArray.forEach(option => this.selectOption(option));\n      }\n    }\n    initSelection() {\n      this.allButton.addEventListener('click', event => {\n        event.preventDefault();\n        this.toggleAllButton();\n      });\n      this.dropdown.addEventListener('change', event => {\n        const option = event.target.closest(`.js-${this.optionClass}`);\n        if (!option) return;\n        this.selectOption(option);\n      });\n      this.dropdown.addEventListener('click', event => {\n        const option = event.target.closest(`.js-${this.optionClass}`);\n        if (!option || !event.target.classList.contains(`js-${this.optionClass}`)) return;\n        this.selectOption(option);\n      });\n    }\n    selectOption(option) {\n      const input = option.querySelector(`.js-${this.checkboxClass}`);\n      if (option.hasAttribute('aria-selected') && option.getAttribute('aria-selected') === 'true') {\n        input.checked = false;\n        input.removeAttribute('checked');\n        option.setAttribute('aria-selected', 'false');\n        this.updateNativeSelect(option.getAttribute('data-index'), false);\n      } else {\n        input.checked = true;\n        input.value = true;\n        input.setAttribute('checked', '');\n        option.setAttribute('aria-selected', 'true');\n        this.updateNativeSelect(option.getAttribute('data-index'), true);\n      }\n      const triggerLabel = this.getSelectedOptionText();\n      const [selectedLabel] = triggerLabel;\n      this.trigger.querySelector(`.js-${this.labelClass}`).innerHTML = selectedLabel;\n      this.trigger.classList.toggle(`${this.prefix}${this.buttonClass}--active`, this.selectedOptCounter > 0);\n      this.updateTriggerAria(triggerLabel[1]);\n      this.updateAllButton();\n    }\n    updateAllButton() {\n      const [, totalOptions, selectedOptions] = this.getOptions();\n      if (selectedOptions === totalOptions) {\n        this.allButton.classList.add(this.showClass);\n      } else {\n        this.allButton.classList.remove(this.showClass);\n      }\n    }\n    updateNativeSelect(index, bool) {\n      this.options[index].selected = bool;\n      this.select.dispatchEvent(new CustomEvent('change', {\n        bubbles: true\n      }));\n    }\n    updateTriggerAria(ariaLabel) {\n      this.trigger.setAttribute('aria-label', ariaLabel);\n    }\n    getSelectedOptionText() {\n      const noSelectionText = `<span class=\"${this.prefix}${this.termClass}\">${this.noSelectText}</span>`;\n      if (this.noUpdateLabel) return [noSelectionText, this.noSelectText];\n      let label = '';\n      let ariaLabel = '';\n      this.selectedOptCounter = 0;\n      for (let i = 0; i < this.options.length; i += 1) {\n        if (this.options[i].selected) {\n          if (this.selectedOptCounter !== 0) label += ', ';\n          label = `${label}${this.options[i].text}`;\n          this.selectedOptCounter += 1;\n        }\n      }\n      if (this.selectedOptCounter > this.nMultiSelect) {\n        label = `<span class=\"${this.prefix}${this.detailsClass}\">${this.multiSelectText.replace('{n}', this.selectedOptCounter)}</span>`;\n        ariaLabel = `${this.multiSelectText.replace('{n}', this.selectedOptCounter)}, ${this.noSelectText}`;\n      } else if (this.selectedOptCounter > 0) {\n        ariaLabel = `${label}, ${this.noSelectText}`;\n        label = `<span class=\"${this.prefix}${this.detailsClass}\">${label}</span>`;\n      } else {\n        label = noSelectionText;\n        ariaLabel = this.noSelectText;\n      }\n      if (this.insetLabel && this.selectedOptCounter > 0) label = noSelectionText + label;\n      return [label, ariaLabel];\n    }\n    initButtonSelect() {\n      const customClasses = this.element.getAttribute('data-trigger-class') ? ` ${this.element.getAttribute('data-trigger-class')}` : '';\n      const error = this.select.getAttribute('aria-invalid');\n      const triggerLabel = this.getSelectedOptionText();\n      const activeSelectionClass = this.selectedOptCounter > 0 ? ` ${this.buttonClass}--active` : '';\n      let button = `<button class=\"js-${this.buttonClass} ${error === 'true' ? this.errorClass : ''} ${this.prefix}${this.selectClass} ${this.prefix}${this.buttonClass}${customClasses}${activeSelectionClass}\" aria-label=\"${triggerLabel[1]}\" aria-expanded=\"false\" aria-controls=\"${this.selectId}-dropdown\"><span aria-hidden=\"true\" class=\"js-${this.labelClass} ${this.prefix}${this.labelClass}\">${triggerLabel[0]}</span><span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">keyboard_arrow_down</span>`;\n      if (this.arrowIcon.length > 0 && this.arrowIcon[0].outerHTML) {\n        button += this.arrowIcon[0].outerHTML;\n      }\n      return `${button}</button>`;\n    }\n    initListSelect() {\n      let list = `<div class=\"js-${this.dropdownClass} ${this.prefix}${this.dropdownClass}\" aria-describedby=\"${this.selectId}-description\" id=\"${this.selectId}-dropdown\">`;\n      list += this.getSelectLabelSR();\n      if (this.optGroups.length > 0) {\n        for (let i = 0; i < this.optGroups.length; i += 1) {\n          const optGroupList = this.optGroups[i].getElementsByTagName('option');\n          const optGroupLabel = `<li><span class=\"${this.prefix}${this.itemClass} ${this.prefix}${this.itemClass}--optgroup\">${this.optGroups[i].getAttribute('label')}</span></li>`;\n          list = `${list}<ul class=\"${this.prefix}${this.listClass}\" role=\"listbox\" aria-multiselectable=\"true\">${optGroupLabel}${this.getOptionsList(optGroupList)}</ul>`;\n        }\n      } else {\n        list = `${list}<ul class=\"${this.prefix}${this.listClass} js-${this.listClass}\" role=\"listbox\" aria-multiselectable=\"true\">${this.getOptionsList(this.options)}</ul>`;\n      }\n      return list;\n    }\n    initAllButton() {\n      return `<button class=\"${this.prefix}${this.allButtonClass} js-${this.allButtonClass}\"><span>All</span></button>`;\n    }\n    getSelectLabelSR() {\n      if (this.label) {\n        return `<p class=\"${this.srClass}\" id=\"${this.selectId}-description\">${this.label.textContent}</p>`;\n      }\n      return '';\n    }\n    getOptionsList(options) {\n      let list = '';\n      for (let i = 0; i < options.length; i += 1) {\n        const selected = options[i].hasAttribute('selected') ? ' aria-selected=\"true\"' : ' aria-selected=\"false\"';\n        const disabled = options[i].hasAttribute('disabled') ? 'disabled' : '';\n        const checked = options[i].hasAttribute('selected') ? 'checked' : '';\n        const uniqueName = this.constructor.createSafeCss(`${this.selectId}-${options[i].value}-${this.optionIndex.toString()}`);\n        const ariaHidden = options[i].hasAttribute('hidden') ? 'aria-hidden=\"true\"' : '';\n        list = `${list}<li class=\"js-${this.optionClass}\" role=\"option\" data-value=\"${options[i].value}\" ${selected} ${ariaHidden} data-label=\"${options[i].text}\" data-index=\"${this.optionIndex}\"><input class=\"${this.prefix}${this.checkboxInputClass} js-${this.checkboxClass}\" type=\"checkbox\" id=\"${uniqueName}\" ${checked} ${disabled}><label class=\"${this.prefix}${this.checkboxLabelClass} ${this.prefix}${this.itemClass} ${this.prefix}${this.itemClass}--option\" for=\"${uniqueName}\"><span>${options[i].text}</span></label></li>`;\n        this.optionIndex += 1;\n      }\n      return list;\n    }\n    getSelectedOption() {\n      const option = this.dropdown.querySelector('[aria-selected=\"true\"]');\n      if (option) return option.querySelector(`.js-${this.checkboxClass}`);\n      return this.allButton;\n    }\n    getOptions() {\n      const options = Array.from(this.dropdown.querySelectorAll(`.js-${this.optionClass}`));\n      const total = options.length;\n      const selected = options.filter(option => option.getAttribute('aria-selected') === 'true').length;\n      return [options, total, selected];\n    }\n    moveFocusToSelectTrigger() {\n      if (!document.activeElement.closest(`.js-${this.class}`)) return;\n      this.trigger.focus();\n    }\n    static trapFocus(element) {\n      const focusableElements = 'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])';\n      const firstFocusableElement = element.querySelectorAll(focusableElements)[0];\n      const focusableContent = element.querySelectorAll(focusableElements);\n      const lastFocusableElement = focusableContent[focusableContent.length - 1];\n      document.addEventListener('keydown', event => {\n        const isTabPressed = event.key === 'Tab' || event.code === 9;\n        if (!isTabPressed) {\n          return;\n        }\n        if (event.shiftKey) {\n          if (document.activeElement === firstFocusableElement) {\n            lastFocusableElement.focus();\n            event.preventDefault();\n          }\n        } else if (document.activeElement === lastFocusableElement) {\n          firstFocusableElement.focus();\n          event.preventDefault();\n        }\n      });\n      firstFocusableElement.focus();\n    }\n    checkCustomSelectClick(target) {\n      if (!this.element.contains(target)) this.toggleCustomSelect('false');\n    }\n    static createSafeCss(str) {\n      const invalidBeginningOfClassname = /^([0-9]|--|-[0-9])/;\n      if (typeof str !== 'string') {\n        return '';\n      }\n      const strippedClassname = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g).map(x => x.toLowerCase()).join('-');\n      return invalidBeginningOfClassname.test(strippedClassname) ? `_${strippedClassname}` : strippedClassname;\n    }\n    static moveFocusFn(element) {\n      element.focus();\n      if (document.activeElement !== element) {\n        element.setAttribute('tabindex', '-1');\n        element.focus();\n      }\n    }\n  }\n\n  class SiteSearch {\n    constructor(element) {\n      this.element = element;\n      this.originalButton = document.querySelector('.js-open-search');\n      this.targetElement = document.getElementById(this.element.getAttribute('aria-controls'));\n      this.searchInput = this.targetElement.querySelector('input.js-search-input');\n      this.pressed = this.element.getAttribute('aria-expanded') === 'true';\n    }\n    init() {\n      if (!this.originalButton) return;\n      this.controls();\n    }\n    controls() {\n      this.element.addEventListener('click', this.showHide.bind(this), false);\n    }\n    showHide() {\n      if (this.pressed) {\n        this.targetElement.hidden = true;\n        this.originalButton.hidden = false;\n        this.originalButton.focus();\n      } else {\n        this.targetElement.hidden = false;\n        this.originalButton.hidden = true;\n        this.searchInput.focus();\n      }\n    }\n  }\n\n  class Tabs {\n    constructor(element, showTab) {\n      this.element = element;\n      this.tablistClass = '.nsw-tabs__list';\n      this.tablistItemClass = 'li';\n      this.tablistLinkClass = 'a';\n      this.showTab = showTab;\n      this.tabList = this.element.querySelector(this.tablistClass);\n      this.tabItems = this.tabList && this.tabList.querySelectorAll(this.tablistItemClass);\n      this.allowedKeys = [35, 36, 37, 39, 40];\n      this.tabLinks = [];\n      this.tabPanel = [];\n      this.selectedTab = null;\n      this.clickTabEvent = event => this.clickTab(event);\n      this.arrowKeysEvent = event => this.arrowKeys(event);\n      this.owns = [];\n    }\n    init() {\n      if (!this.tabList) return;\n      this.setUpDom();\n      this.controls();\n      this.setInitalTab();\n    }\n    setUpDom() {\n      const tabListWrapper = document.createElement('div');\n      tabListWrapper.classList.add('nsw-tabs__list-wrapper');\n      this.element.prepend(tabListWrapper);\n      tabListWrapper.prepend(this.tabList);\n      this.tabList.setAttribute('role', 'tablist');\n      this.tabItems.forEach(item => {\n        const itemElem = item;\n        const itemLink = item.querySelector(this.tablistLinkClass);\n        const panel = this.element.querySelector(itemLink.hash);\n        const uID = uniqueId('tab');\n        this.owns.push(uID);\n        itemElem.setAttribute('role', 'presentation');\n        this.enhanceTabLink(itemLink, uID);\n        this.enhanceTabPanel(panel, uID);\n      });\n      this.tabList.setAttribute('aria-owns', this.owns.join(' '));\n    }\n    enhanceTabLink(link, id) {\n      link.setAttribute('role', 'tab');\n      link.setAttribute('id', id);\n      link.setAttribute('aria-selected', false);\n      link.setAttribute('tabindex', '-1');\n      this.tabLinks.push(link);\n    }\n    enhanceTabPanel(panel, id) {\n      const panelElem = panel;\n      panelElem.setAttribute('role', 'tabpanel');\n      panelElem.setAttribute('role', 'tabpanel');\n      panelElem.setAttribute('aria-labelledBy', id);\n      panelElem.setAttribute('tabindex', '0');\n      panelElem.hidden = true;\n      this.tabPanel.push(panelElem);\n    }\n    setInitalTab() {\n      const {\n        tabLinks,\n        tabPanel,\n        showTab\n      } = this;\n      const index = showTab === undefined ? 0 : showTab;\n      const selectedLink = tabLinks[index];\n      selectedLink.classList.add('active');\n      selectedLink.removeAttribute('tabindex');\n      selectedLink.setAttribute('aria-selected', true);\n      tabPanel[index].hidden = false;\n      this.selectedTab = selectedLink;\n    }\n    clickTab(e) {\n      e.preventDefault();\n      this.switchTabs(e.currentTarget);\n    }\n    switchTabs(elem) {\n      const clickedTab = elem;\n      if (clickedTab !== this.selectedTab) {\n        clickedTab.focus();\n        clickedTab.removeAttribute('tabindex');\n        clickedTab.setAttribute('aria-selected', true);\n        clickedTab.classList.add('active');\n        this.selectedTab.setAttribute('aria-selected', false);\n        this.selectedTab.setAttribute('tabindex', '-1');\n        this.selectedTab.classList.remove('active');\n        const clickedTabIndex = this.tabLinks.indexOf(clickedTab);\n        const selectedTabIndex = this.tabLinks.indexOf(this.selectedTab);\n        this.tabPanel[clickedTabIndex].hidden = false;\n        this.tabPanel[selectedTabIndex].hidden = true;\n        this.selectedTab = clickedTab;\n        if (!clickedTab.classList.contains('js-tabs-fixed')) {\n          clickedTab.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'nearest'\n          });\n        }\n      }\n    }\n    arrowKeys(_ref) {\n      let {\n        which\n      } = _ref;\n      const linkLength = this.tabLinks.length - 1;\n      let index = this.tabLinks.indexOf(this.selectedTab);\n      let down = false;\n      if (this.allowedKeys.includes(which)) {\n        switch (which) {\n          case 35:\n            index = linkLength;\n            break;\n          case 36:\n            index = 0;\n            break;\n          case 37:\n            index = index === 0 ? -1 : index -= 1;\n            break;\n          case 39:\n            index = index === linkLength ? -1 : index += 1;\n            break;\n          case 40:\n            down = true;\n            break;\n        }\n        if (index > -1) {\n          if (down) {\n            this.tabPanel[index].focus();\n          } else {\n            this.switchTabs(this.tabLinks[index]);\n          }\n        }\n      }\n    }\n    controls() {\n      this.tabLinks.forEach(link => {\n        link.addEventListener('click', this.clickTabEvent, false);\n        link.addEventListener('keydown', this.arrowKeysEvent, false);\n      });\n    }\n  }\n\n  /* eslint-disable */\n  function cleanHTML(str, nodes) {\n    function stringToHTML() {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(str, 'text/html');\n      return doc.body || document.createElement('body');\n    }\n    function removeScripts(html) {\n      const scripts = html.querySelectorAll('script');\n      for (const script of scripts) {\n        script.remove();\n      }\n    }\n    function isPossiblyDangerous(name, value) {\n      const val = value.replace(/\\s+/g, '').toLowerCase();\n      if (['src', 'href', 'xlink:href'].includes(name)) {\n        if (val.includes('javascript:') || val.includes('data:text/html')) return true;\n      }\n      if (name.startsWith('on')) return true;\n      return false;\n    }\n    function removeAttributes(elem) {\n      const atts = elem.attributes;\n      for (const {\n        name,\n        value\n      } of atts) {\n        if (!isPossiblyDangerous(name, value)) continue;\n        elem.removeAttribute(name);\n      }\n    }\n    function clean(html) {\n      const htmlNodes = html.children;\n      for (const node of htmlNodes) {\n        removeAttributes(node);\n        clean(node);\n      }\n    }\n    const html = stringToHTML();\n    removeScripts(html);\n    clean(html);\n    return nodes ? html.childNodes : html.innerHTML;\n  }\n\n  /* eslint-disable max-len, import/no-extraneous-dependencies */\n  class Toggletip {\n    constructor(element) {\n      this.toggletip = element;\n      this.toggletipId = this.toggletip.getAttribute('aria-controls');\n      this.toggletipElement = this.toggletipId && document.querySelector(`#${this.toggletipId}`);\n      this.toggletipContent = false;\n      this.toggletipAnchor = this.toggletip.querySelector('[data-anchor]') || this.toggletip;\n      this.toggletipText = this.toggletip.innerText;\n      this.toggletipHeading = this.toggletip.getAttribute('data-title') || this.toggletipText;\n      this.arrowElement = false;\n      this.closeButton = false;\n      this.toggletipIsOpen = false;\n      this.toggletipVisibleClass = 'active';\n      this.firstFocusable = false;\n      this.lastFocusable = false;\n    }\n    init() {\n      if (!this.toggletipElement) return;\n      this.constructor.setAttributes(this.toggletip, {\n        tabindex: '0',\n        'aria-haspopup': 'dialog'\n      });\n      this.initEvents();\n    }\n    initEvents() {\n      this.toggletip.addEventListener('click', this.toggleToggletip.bind(this));\n      this.toggletip.addEventListener('keyup', event => {\n        if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') {\n          this.toggleToggletip();\n        }\n      });\n      window.addEventListener('DOMContentLoaded', () => {\n        this.toggletipContent = this.toggletipElement.innerHTML;\n      });\n      this.toggletipElement.addEventListener('keydown', this.trapFocus.bind(this));\n      window.addEventListener('click', event => {\n        this.checkToggletipClick(event.target);\n      });\n      window.addEventListener('keyup', event => {\n        if (event.code && event.code.toLowerCase() === 'escape' || event.key && event.key.toLowerCase() === 'escape') {\n          this.checkToggletipFocus();\n        }\n      });\n      window.addEventListener('resize', () => {\n        if (this.toggletipIsOpen) this.toggleToggletip();\n      });\n      window.addEventListener('scroll', () => {\n        if (this.toggletipIsOpen) this.toggleToggletip();\n      });\n    }\n    toggleToggletip() {\n      if (this.toggletipElement.classList.contains('active')) {\n        this.hideToggletip();\n      } else {\n        this.toggletipElement.focus();\n        this.showToggletip();\n      }\n    }\n    createToggletipElement() {\n      if (this.toggletipElement) {\n        this.toggletipElement.innerHTML = '';\n        const createToggletip = `\n      <div class=\"nsw-toggletip__header\">\n        <div id=\"nsw-toggletip__header\" class=\"sr-only\">${cleanHTML(this.toggletipHeading)}</div>\n        <button type=\"button\" class=\"nsw-icon-button\">\n          <span class=\"sr-only\">Remove file</span>\n          <span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">close</span>\n        </button>\n      </div>\n      <div id=\"nsw-toggletip__content\" class=\"nsw-toggletip__content\">\n        ${cleanHTML(this.toggletipContent)}\n      </div>\n      <div class=\"nsw-toggletip__arrow\"></div>`;\n        this.toggletipElement.insertAdjacentHTML('afterbegin', createToggletip);\n      }\n      this.constructor.setAttributes(this.toggletipElement, {\n        'aria-labelledby': 'nsw-toggletip__header',\n        'aria-describedby': 'nsw-toggletip__content',\n        'aria-expanded': 'false',\n        tabindex: '0',\n        role: 'dialog'\n      });\n    }\n    showToggletip() {\n      this.createToggletipElement();\n      this.arrowElement = this.toggletipElement.querySelector('.nsw-toggletip__arrow');\n      this.closeButton = this.toggletipElement.querySelector('.nsw-icon-button');\n      this.toggletipElement.setAttribute('aria-expanded', 'true');\n      this.toggletipElement.classList.add('active');\n      this.toggletipIsOpen = true;\n      this.getFocusableElements();\n      this.toggletipElement.focus({\n        preventScroll: true\n      });\n      this.toggletip.addEventListener('transitionend', () => {\n        this.focusToggletip();\n      }, {\n        once: true\n      });\n      this.updateToggletip(this.toggletipElement, this.arrowElement);\n      this.closeButton.addEventListener('click', this.toggleToggletip.bind(this));\n    }\n    hideToggletip() {\n      this.toggletipElement.setAttribute('aria-expanded', 'false');\n      this.toggletipElement.classList.remove('active');\n      this.toggletipIsOpen = false;\n    }\n    updateToggletip(toggletip, arrowElement) {\n      let anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.toggletipAnchor;\n      computePosition(anchor, toggletip, {\n        placement: 'top',\n        middleware: [offset(8), flip(), shift({\n          padding: 5\n        }), arrow({\n          element: arrowElement\n        })]\n      }).then(_ref => {\n        let {\n          x,\n          y,\n          placement,\n          middlewareData\n        } = _ref;\n        Object.assign(toggletip.style, {\n          left: `${x}px`,\n          top: `${y}px`\n        });\n        const {\n          x: arrowX,\n          y: arrowY\n        } = middlewareData.arrow;\n        const staticSide = {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right'\n        }[placement.split('-')[0]];\n        Object.assign(arrowElement.style, {\n          left: arrowX != null ? `${arrowX}px` : '',\n          top: arrowY != null ? `${arrowY}px` : '',\n          right: '',\n          bottom: '',\n          [staticSide]: '-6px'\n        });\n      });\n    }\n    checkToggletipClick(target) {\n      if (!this.toggletipIsOpen) return;\n      if (!this.toggletipElement.contains(target) && !target.closest(`[aria-controls=\"${this.toggletipId}\"]`)) this.toggleToggletip();\n    }\n    checkToggletipFocus() {\n      if (!this.toggletipIsOpen) return;\n      this.constructor.moveFocus(this.toggletip);\n      this.toggleToggletip();\n    }\n    focusToggletip() {\n      if (this.firstFocusable) {\n        this.firstFocusable.focus({\n          preventScroll: true\n        });\n      } else {\n        this.constructor.moveFocus(this.toggletipElement);\n      }\n    }\n    getFocusableElements() {\n      const focusableElString = '[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable], audio[controls], video[controls], summary';\n      const allFocusable = this.toggletipElement.querySelectorAll(focusableElString);\n      this.getFirstVisible(allFocusable);\n      this.getLastVisible(allFocusable);\n    }\n    getFirstVisible(elements) {\n      for (let i = 0; i < elements.length; i += 1) {\n        if (this.constructor.isVisible(elements[i])) {\n          this.firstFocusable = elements[i];\n          break;\n        }\n      }\n    }\n    getLastVisible(elements) {\n      for (let i = elements.length - 1; i >= 0; i -= 1) {\n        if (this.constructor.isVisible(elements[i])) {\n          this.lastFocusable = elements[i];\n          break;\n        }\n      }\n    }\n    trapFocus(event) {\n      if (this.firstFocusable === document.activeElement && event.shiftKey) {\n        event.preventDefault();\n        this.lastFocusable.focus();\n      }\n      if (this.lastFocusable === document.activeElement && !event.shiftKey) {\n        event.preventDefault();\n        this.firstFocusable.focus();\n      }\n    }\n    static isVisible(element) {\n      return element.offsetWidth || element.offsetHeight || element.getClientRects().length;\n    }\n    static moveFocus(element) {\n      element.focus({\n        preventScroll: true\n      });\n      if (document.activeElement !== element) {\n        element.setAttribute('tabindex', '-1');\n        element.focus();\n      }\n    }\n    static setAttributes(el, attrs) {\n      Object.keys(attrs).forEach(key => el.setAttribute(key, attrs[key]));\n    }\n  }\n\n  /* eslint-disable max-len */\n  class Tooltip {\n    constructor(element) {\n      this.tooltip = element;\n      this.uID = uniqueId('tooltip');\n      this.tooltipElement = false;\n      this.arrowElement = false;\n      this.tooltipContent = false;\n      this.tooltipDelay = 400;\n      this.screenSize = false;\n      this.tooltipTheme = this.tooltip.getAttribute('data-theme') || 'dark';\n    }\n    init() {\n      this.tooltipContent = this.tooltip.getAttribute('title');\n      if (!this.tooltipContent) return;\n      this.constructor.setAttributes(this.tooltip, {\n        'data-tooltip-content': this.tooltipContent,\n        'aria-describedby': this.uID,\n        tabindex: '0'\n      });\n      this.tooltip.removeAttribute('title');\n      const eventArray = ['mouseenter', 'mouseleave', 'focus', 'blur'];\n      eventArray.forEach((event, _ref) => {\n        let {\n          listener = this.handleEvent.bind(this)\n        } = _ref;\n        this.tooltip.addEventListener(event, listener);\n      });\n    }\n    handleEvent(event) {\n      switch (event.type) {\n        case 'mouseenter':\n        case 'focus':\n          this.showTooltip(this, event);\n          break;\n        case 'mouseleave':\n        case 'blur':\n          this.hideTooltip(this, event);\n          break;\n        default:\n          console.log(`Unexpected event type: ${event.type}`);\n          break;\n      }\n    }\n    createTooltipElement() {\n      if (!this.tooltipElement) {\n        this.tooltipElement = document.createElement('div');\n        document.body.appendChild(this.tooltipElement);\n      }\n      this.constructor.setAttributes(this.tooltipElement, {\n        id: this.uID,\n        class: `nsw-tooltip__element nsw-tooltip__element--${this.tooltipTheme}`,\n        role: 'tooltip'\n      });\n      if (this.tooltip) {\n        this.arrowElement = document.createElement('div');\n        this.arrowElement.className = 'nsw-tooltip__arrow';\n      }\n      this.tooltipContent = this.tooltip.getAttribute('data-tooltip-content');\n      this.tooltipElement.innerHTML = this.tooltipContent;\n      this.tooltipElement.insertAdjacentElement('beforeend', this.arrowElement);\n    }\n    showTooltip() {\n      setTimeout(() => {\n        this.createTooltipElement();\n        this.tooltipElement.classList.add('active');\n        const range = document.createRange();\n        const text = this.tooltipElement.childNodes[0];\n        range.setStartBefore(text);\n        range.setEndAfter(text);\n        const clientRect = range.getBoundingClientRect();\n        this.matchMedia();\n        this.tooltipElement.style.width = `${clientRect.width + this.screenSize}px`;\n        this.updateTooltip(this.tooltipElement, this.arrowElement);\n      }, this.tooltipDelay);\n    }\n    hideTooltip() {\n      setTimeout(() => {\n        this.tooltipElement.classList.remove('active');\n        this.tooltipElement.style.width = '';\n      }, this.tooltipDelay);\n    }\n    matchMedia() {\n      if (window.matchMedia('(min-width: 576px)').matches) {\n        this.screenSize = 32;\n      } else {\n        this.screenSize = 16;\n      }\n    }\n    updateTooltip(tooltip, arrowElement) {\n      let anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.tooltip;\n      computePosition(anchor, tooltip, {\n        placement: 'top',\n        middleware: [offset(8), flip(), shift({\n          padding: 5\n        }), arrow({\n          element: arrowElement\n        })]\n      }).then(_ref2 => {\n        let {\n          x,\n          y,\n          placement,\n          middlewareData\n        } = _ref2;\n        Object.assign(tooltip.style, {\n          left: `${x}px`,\n          top: `${y}px`\n        });\n\n        // Accessing the data\n        const {\n          x: arrowX,\n          y: arrowY\n        } = middlewareData.arrow;\n        const staticSide = {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right'\n        }[placement.split('-')[0]];\n        Object.assign(arrowElement.style, {\n          left: arrowX != null ? `${arrowX}px` : '',\n          top: arrowY != null ? `${arrowY}px` : '',\n          right: '',\n          bottom: '',\n          [staticSide]: '-6px'\n        });\n      });\n    }\n    static setAttributes(el, attrs) {\n      Object.keys(attrs).forEach(key => el.setAttribute(key, attrs[key]));\n    }\n  }\n\n  class UtilityList extends Toggletip {\n    constructor(element) {\n      let toggletip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : element.querySelector('.js-share');\n      super(toggletip === null ? element : toggletip);\n      this.element = element;\n      this.share = toggletip;\n      this.print = this.element.querySelectorAll('.js-print-page');\n      this.download = this.element.querySelectorAll('.js-download-page');\n      this.copy = this.element.querySelectorAll('.js-copy-clipboard');\n      this.shareItems = this.share && this.share.querySelectorAll('a');\n      this.urlLocation = window.location.href;\n      this.copyElement = false;\n    }\n    init() {\n      if (this.share) {\n        super.init();\n        this.shareItems.forEach(share => {\n          const shareLocation = share.getAttribute('data-url');\n          if (!shareLocation) {\n            share.setAttribute('data-url', window.location.href);\n          }\n        });\n        this.share.addEventListener('click', event => {\n          const button = event.target.closest('a');\n          if (!button) return;\n          event.preventDefault();\n          const social = button.getAttribute('data-social');\n          const url = this.getSocialUrl(button, social);\n          if (social === 'mail') {\n            window.location.href = url;\n          } else {\n            window.open(url, `${social}-share-dialog`, 'width=626,height=436');\n          }\n        });\n      }\n      if (this.print) {\n        this.print.forEach(element => {\n          element.setAttribute('tabindex', '0');\n          element.addEventListener('click', () => {\n            window.print();\n          });\n          element.addEventListener('keyup', event => {\n            if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') {\n              window.print();\n            }\n          });\n        });\n      }\n      if (this.download) {\n        this.download.forEach(element => {\n          element.setAttribute('tabindex', '0');\n        });\n      }\n      if (this.copy) {\n        this.copy.forEach(element => {\n          element.setAttribute('tabindex', '0');\n          element.addEventListener('click', () => {\n            this.copyToClipboard(element);\n          });\n          element.addEventListener('keyup', event => {\n            if (event.code && event.code.toLowerCase() === 'enter' || event.key && event.key.toLowerCase() === 'enter') {\n              this.copyToClipboard(element);\n            }\n          });\n        });\n      }\n    }\n    getSocialUrl(button, social) {\n      const params = this.getSocialParams(social);\n      let newUrl = '';\n      if (social === 'twitter') {\n        this.getTwitterText(button);\n      }\n      params.forEach(param => {\n        let paramValue = button.getAttribute(`data-${param}`);\n        if (param === 'hashtags') paramValue = encodeURI(paramValue.replace(/#| /g, ''));\n        if (paramValue) {\n          if (social === 'facebook') {\n            newUrl = `${newUrl}u=${encodeURIComponent(paramValue)}&`;\n          } else {\n            newUrl = `${newUrl + param}=${encodeURIComponent(paramValue)}&`;\n          }\n        }\n      });\n      if (social === 'linkedin') newUrl = `mini=true&${newUrl}`;\n      return `${button.getAttribute('href')}?${newUrl}`;\n    }\n    getSocialParams(social) {\n      switch (social) {\n        case 'twitter':\n          this.socialParams = ['text', 'hashtags'];\n          break;\n        case 'facebook':\n        case 'linkedin':\n          this.socialParams = ['url'];\n          break;\n        case 'mail':\n          this.socialParams = ['subject', 'body'];\n          break;\n        default:\n          console.log('No social links found');\n          break;\n      }\n      return this.socialParams;\n    }\n    getTwitterText(button) {\n      let twitText = button.getAttribute('data-text');\n      const twitUrl = button.getAttribute('data-url') || this.urlLocation;\n      const twitUsername = button.getAttribute('data-username');\n      if (twitUsername) {\n        twitText = `${twitText} ${twitUrl} via ${twitUsername}`;\n      } else {\n        twitText = `${twitText} ${twitUrl}`;\n      }\n      button.setAttribute('data-text', twitText);\n      button.removeAttribute('data-url');\n      button.removeAttribute('data-username');\n    }\n    copyToClipboard(element) {\n      if (!navigator.clipboard) {\n        const input = document.createElement('input');\n        input.setAttribute('value', this.urlLocation);\n        document.body.appendChild(input);\n        input.select();\n        document.execCommand('copy');\n        document.body.removeChild(input);\n        this.copiedMessage(element);\n      } else {\n        navigator.clipboard.writeText(this.urlLocation).then(() => {\n          this.copiedMessage(element);\n        });\n      }\n    }\n    copiedMessage(element) {\n      this.copyElement = element;\n      const icon = '<span class=\"material-icons nsw-material-icons\" focusable=\"false\" aria-hidden=\"true\">link</span>';\n      const originalText = this.copyElement.innerHTML;\n      this.copyElement.classList.add('copied');\n      this.copyElement.innerHTML = `${icon} Copied`;\n      setTimeout(() => {\n        this.copyElement.classList.remove('copied');\n        this.copyElement.innerHTML = originalText;\n      }, 3000);\n    }\n  }\n\n  /* eslint-disable max-len */\n  if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n  if (!Element.prototype.closest) {\n    if (!Element.prototype.matches) {\n      Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    }\n    Element.prototype.closest = function closest(s) {\n      const el = this;\n      let ancestor = this;\n      if (!document.documentElement.contains(el)) return null;\n      do {\n        if (ancestor.matches(s)) return ancestor;\n        ancestor = ancestor.parentElement;\n      } while (ancestor !== null);\n      return null;\n    };\n  }\n  function initSite() {\n    const accordions = document.querySelectorAll('.js-accordion');\n    const backTop = document.querySelectorAll('button.js-back-to-top');\n    const breadcrumbs = document.querySelectorAll('.js-breadcrumbs');\n    const carousel = document.querySelectorAll('.js-carousel');\n    const closeSearchButton = document.querySelectorAll('button.js-close-search');\n    const datePicker = document.querySelectorAll('.js-date-input');\n    const dialogs = document.querySelectorAll('.js-dialog');\n    const fileUpload = document.querySelectorAll('.js-file-upload');\n    const filters = document.querySelectorAll('.js-filters');\n    const globalAlert = document.querySelectorAll('.js-global-alert');\n    const link = document.querySelectorAll('a.js-link');\n    const multiSelect = document.querySelectorAll('.js-multi-select');\n    const navigation = document.getElementById('main-nav');\n    const openSearchButton = document.querySelectorAll('button.js-open-search');\n    const popover = document.querySelectorAll('.js-popover');\n    const tabs = document.querySelectorAll('.js-tabs');\n    const toggletip = document.querySelectorAll('.js-toggletip');\n    const tooltip = document.querySelectorAll('.js-tooltip');\n    const utilityList = document.querySelectorAll('.js-utility-list');\n    if (accordions) {\n      accordions.forEach(element => {\n        new Accordion(element).init();\n      });\n    }\n    if (backTop) {\n      backTop.forEach(element => {\n        new BackTop(element).init();\n      });\n    }\n    if (breadcrumbs) {\n      breadcrumbs.forEach(element => {\n        new Breadcrumbs(element).init();\n      });\n    }\n    if (carousel) {\n      carousel.forEach(element => {\n        new Carousel(element).init();\n      });\n    }\n    if (closeSearchButton) {\n      closeSearchButton.forEach(element => {\n        new SiteSearch(element).init();\n      });\n    }\n    if (datePicker) {\n      datePicker.forEach(element => {\n        new DatePicker(element).init();\n      });\n    }\n    if (dialogs) {\n      dialogs.forEach(element => {\n        new Dialog(element).init();\n      });\n    }\n    if (fileUpload) {\n      fileUpload.forEach(element => {\n        new FileUpload(element).init();\n      });\n    }\n    if (filters) {\n      filters.forEach(element => {\n        new Filters(element).init();\n      });\n    }\n    if (globalAlert) {\n      globalAlert.forEach(element => {\n        new GlobalAlert(element).init();\n      });\n    }\n    if (link) {\n      link.forEach(element => {\n        new ExternalLink(element).init();\n      });\n    }\n    if (multiSelect) {\n      multiSelect.forEach(element => {\n        new Select(element).init();\n      });\n    }\n    if (navigation) {\n      new Navigation(navigation).init();\n    }\n    if (openSearchButton) {\n      openSearchButton.forEach(element => {\n        new SiteSearch(element).init();\n      });\n    }\n    if (popover) {\n      popover.forEach(element => {\n        new Popover(element).init();\n      });\n    }\n    if (tabs) {\n      tabs.forEach(element => {\n        new Tabs(element).init();\n      });\n    }\n    if (toggletip) {\n      toggletip.forEach(element => {\n        new Toggletip(element).init();\n      });\n    }\n    if (tooltip) {\n      tooltip.forEach(element => {\n        new Tooltip(element).init();\n      });\n    }\n    if (utilityList) {\n      utilityList.forEach(element => {\n        new UtilityList(element).init();\n      });\n    }\n  }\n\n  exports.Accordion = Accordion;\n  exports.BackTop = BackTop;\n  exports.Carousel = Carousel;\n  exports.DatePicker = DatePicker;\n  exports.Dialog = Dialog;\n  exports.ExternalLink = ExternalLink;\n  exports.FileUpload = FileUpload;\n  exports.Filters = Filters;\n  exports.GlobalAlert = GlobalAlert;\n  exports.Navigation = Navigation;\n  exports.Popover = Popover;\n  exports.Select = Select;\n  exports.SiteSearch = SiteSearch;\n  exports.Tabs = Tabs;\n  exports.Toggletip = Toggletip;\n  exports.Tooltip = Tooltip;\n  exports.UtilityList = UtilityList;\n  exports.initSite = initSite;\n\n}));\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","NSW","exports1","getRandomValues","rnds8","Uint8Array","byteToHex","i","push","toString","slice","native","randomUUID","crypto","bind","uniqueId","prefix","uuid","v4","options","buf","offset","rnds","random","rng","Error","unsafeStringify","arr","toLowerCase","undefined","focusObjectGenerator","all","first","last","length","getFocusableElementBySelector","id","selectorArr","elements","call","document","querySelectorAll","concat","trapTabKey","event","focusObject","activeElement","keyCode","focusableElement","preventDefault","shiftKey","focus","whichTransitionEvent","el","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","found","Object","keys","filter","key","style","Accordion","constructor","element","expandAll","collapseAll","Array","from","accordionHeadingClass","headings","expandAllBtn","collapseAllBtn","isExpandedOnLoad","buttons","content","toggleEvent","toggle","expandAllEvent","collapseAllEvent","init","setUpDom","controls","classList","add","disabled","forEach","heading","contentElem","nextElementSibling","buttonFrag","createButtons","_ref","textContent","fragment","createDocumentFragment","button","uID","setAttribute","insertAdjacentHTML","appendChild","headingElem","buttonElem","getElementsByTagName","getAttribute","hidden","openButton","querySelector","setAccordionState","addEventListener","getTargetContent","currentIndex","indexOf","state","targetContent","remove","currentTarget","isHidden","every","item","BackTop","dataElement","scrollOffset","text","icon","scrollElement","window","scrollPosition","width","Math","max","documentElement","clientWidth","innerWidth","height","clientHeight","innerHeight","condition","createButton","requestAnimationFrame","scrollTo","top","behavior","checkBackToTop","debounceEvent","debounce","debounceResize","resizeHandler","textSpan","iconSpan","title","focusable","append","createButtonContent","innerText","windowTop","scrollTop","scrollY","scroll","oldWidth","oldHeight","fn","timeout","_this","wait","arguments","_len","args","_key","cancelAnimationFrame","apply","clearTimeout","setTimeout","tag","classes","attributes","entries","value","Breadcrumbs","allBreadcrumbs","secondBreadcrumb","children","createToggle","innerHTML","insertBefore","DatePicker","class","dateClass","todayClass","selectedClass","keyboardFocusClass","visibleClass","months","dateFormat","dateSeparator","datesDisabled","minDate","maxDate","input","trigger","triggerLabel","datePicker","body","navigation","close","accept","multipleInput","dateInput","monthInput","yearInput","multiDateArray","dateIndexes","getDateIndexes","pickerVisible","dateSelected","selectedDay","selectedMonth","selectedYear","firstFocusable","lastFocusable","disabledArray","initCreateCalendar","disabledDates","resetCalendar","initCalendarAria","initCalendarEvents","placeCalendar","calendar","resetLabelCalendarTrigger","srLiveReagion","toggleCalendar","hideCalendar","day","currentMonth","currentYear","setInputValue","target","closest","monthBtn","yearBtn","contains","showPrevMonth","showNextMonth","showPrevYear","showNextYear","code","activeInput","currentDay","resetDayValue","getDayOfWeek","trapFocus","getCurrentDay","date","getDayFromDate","Date","getDate","getCurrentMonth","getMonthFromDate","getMonth","getCurrentYear","getYearFromDate","getFullYear","parseInt","split","Number","isNaN","month","year","bool","checkDayInMonth","showCalendar","daysInMonth","selectedDate","currentDate","getDateFromInput","convertDateToParse","dateArray","isDisabledDate","dateParse","disabledDate","getTime","firstDay","j","classListDate","tabindexValue","getFocusableElements","weekDay","getDay","replace","getDateForInput","getReadableDate","totDays","newMonth","focusItem","toDateString","allFocusable","getFirstFocusable","getLastFocusable","offsetWidth","offsetHeight","getClientRects","left","right","pickerBoundingRect","getBoundingClientRect","getSign","x","sign","SwipeContent","delta","dragging","intervalId","changedTouches","handleEvent","passive","initDragging","cancelDragging","clearInterval","removeEventListener","type","startDrag","drag","endDrag","console","log","unify","clientX","clientY","emitSwipeEvents","dx","dy","s","abs","y","emitDrag","eventName","detail","CustomEvent","origin","dispatchEvent","Carousel","containerClass","controlClass","wrapperClass","counterClass","counterTorClass","navClass","navItemClass","navigationItemClass","navigationClass","paginationClass","draggingClass","loadedClass","animateClass","cloneClass","srClass","srLiveAreaClass","hideControlsClass","hideClass","centerClass","listWrapper","list","items","counter","counterTor","ariaLabel","dragEnabled","loop","nav","navigationPagination","justifyContent","initItems","itemsNb","visibItemsNb","itemsWidth","itemOriginalWidth","selectedItem","translateContainer","containerWidth","animating","dragStart","resizeId","cloneList","itemAutoSize","totTranslate","flexSupported","CSS","supports","transitionSupported","cssPropertiesSupported","initCarouselLayout","setItemsWidth","updateCarouselClones","resetItemsTabIndex","initAriaLive","initCarouselEvents","initCarouselCounter","itemsArray","index","carouselCreateContainer","itemStyle","getComputedStyle","containerStyle","itemWidth","parseFloat","getPropertyValue","itemMargin","containerPadding","getCarouselWidth","toFixed","centerItems","parentElement","parentNode","insertAfter","removeClones","setTranslate","carouselCreateNavigation","carouselInitNavigationEvents","showPrevItems","updateAriaLive","showNextItems","resetCarouselControls","emitCarouselActiveItemsEvent","animateDragEnd","translate","resetCarouselResize","resetDotsNavigation","setCounterItem","click","itemLinks","link","slider","preventScroll","dataIndex","getIndex","animateList","cb","direction","trans","initTranslate","noLoopTranslateValue","propertyName","animateListCb","selectedDotIndex","updateClones","nb","clones","start","clone","cloneNode","firstChild","emitCarouselUpdateEvent","newBool","removeChild","visibleItems","resetItemAutoSize","resetItemsWidth","removeAttribute","carouselActive","resetVisibilityOverflowItems","srLiveArea","ariaLive","getPositiveValue","val","transform","msTransform","computedWidth","comWidth","closestHidden","getHiddenParentWidth","parent","tagName","display","visibility","selectedDot","newSelectedIndex","getSelectedDot","navDots","emitCarouselEvents","navChildren","navClasses","dotsNr","ceil","indexClass","className","navIdEvent","carouselNavigationClick","carouselRemoveNavigation","dot","totalItems","firstSelectedItem","visibleItemsNb","eventDetail","overflowItems","indexPrev","indexNext","Dialog","elementWrapper","openBtn","closeBtn","focusableEls","openEvent","openDialog","closeEvent","closeDialog","clickEvent","clickDialog","trapEvent","btn","ExternalLink","linkIcon","linkIconTitle","linkElement","setAttributes","rel","insertAdjacentElement","attrs","FileUpload","label","multipleUpload","hasAttribute","replaceFiles","filesList","htmlFor","handleInputChange","handleFileRemove","updateFileList","createFileList","ul","createFileItem","file","li","html","truncateString","name","dataset","filename","outerHTML","files","currentFiles","dataTransfer","DataTransfer","existingFiles","Set","fileListHTML","has","str","num","Filters","showClass","openClass","controlsClass","listClass","itemClass","resetClass","submitClass","closeClass","countClass","allClass","moreClass","count","controlsButton","controlsButtonIcons","controlsButtonText","controlsButtonTextContent","wrapper","closeButton","submitButton","resetButton","accordionButtons","showMoreContent","showMoreButtons","focusableElements","selectedOption","selected","updateDom","initEvents","showFilters","closeFilters","toggleAccordion","clearAll","showMore","firstfocusable","moveFocusFn","toggleSubmit","array","simulateEvent","MouseEvent","view","bubbles","cancelable","multiSelect","multiSelectAll","multiSelectOptions","option","selectedIndex","defaultChecked","checked","Event","getOptions","textInputs","singleSelects","multiSelects","checkboxes","getSelected","select","multiple","selectMultiple","getMultiSelectValues","selectedCount","dateInputs","removedDateInputs","buttonText","countText","setSelectedState","buttonName","field","focusableContent","firstFocusableElement","lastFocusableElement","selectedOptions","GlobalAlert","cookieName","getCookie","closeMessage","setCookie","days","setTime","expires","toUTCString","cookie","nameEQ","ca","c","charAt","substring","Navigation","navID","openNavButton","closeNavButtons","closeSubNavButtons","isMegaMenuElement","mainNavIsOpen","transitionEvent","mobileShowMainTransitionEndEvent","e","mobileShowMainNav","mobileHideMainTransitionEndEvent","mobileHideMainNav","showSubNavTransitionEndEvent","showSubNav","mobileTrapTabKeyEvent","mobileMainNavTrapTabs","mobileSubNavTrapTabKeyEvent","trapkeyEventStuff","desktopButtonClickEvent","buttonClickDesktop","desktopButtonKeydownEvent","buttonKeydownDesktop","checkFocusEvent","checkIfContainsFocus","openSubNavElements","breakpoint","matchMedia","responsiveCheck","handleOutsideClick","escapeClose","mobileToggleMainNav","closeSubNav","megaMenuListItems","matches","tearDownNavControls","setUpNavControls","toggleSubNavDesktop","listItems","submenu","_ref2","whichSubNavLatest","pop","saveElements","temp","getElementById","linkParent","_ref3","openSubNav","focusWithin","isButton","lastSubNav","min","round","createCoords","v","oppositeSideMap","bottom","oppositeAlignmentMap","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getOppositeAlignmentPlacement","alignment","getOppositePlacement","side","getPaddingObject","padding","rectToClientRect","rect","computeCoordsFromPlacement","rtl","coords","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","computePosition$1","config","strategy","middleware","platform","validMiddleware","Boolean","isRTL","rects","getElementRects","statefulPlacement","middlewareData","resetCount","nextX","nextY","data","reset","initialPlacement","detectOverflow","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","hasWindow","getNodeName","node","isNode","nodeName","getWindow","_node$ownerDocument","ownerDocument","defaultView","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","getComputedStyle$1","test","isTopLayer","some","selector","isContainingBlock","elementOrCss","webkit","isWebKit","css","containerType","backdropFilter","willChange","contain","isLastTraversableNode","getNodeScroll","scrollLeft","scrollX","getParentNode","result","assignedSlot","host","getFrameElement","win","getPrototypeOf","frameElement","getCssDimensions","hasOffset","shouldFallback","$","unwrapElement","domElement","isFinite","noOffsets","getVisualOffsets","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","isFixed","clientRect","scale","visualOffsets","shouldAddVisualOffsets","floatingOffsetParent","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getHTMLOffset","ignoreScrollbarX","htmlRect","getClientRectFromClippingAncestor","clippingAncestor","getViewportRect","visualViewportBased","getDocumentRect","scrollWidth","scrollHeight","getInnerBoundingClientRect","isStaticPositioned","position","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","getContainingBlock","currentNode","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","htmlOffset","topLayer","clippingAncestors","getClippingElementAncestors","cache","cachedResult","get","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","getNearestOverflowAncestor","isBody","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","hasFixedPositionAncestor","stopNode","ancestor","set","_c","firstClippingAncestor","clippingRect","reduce","accRect","_middlewareData$offse","_middlewareData$arrow","diffCoords","arrow","alignmentOffset","shift","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","flip","_middlewareData$flip","_middlewareData$flip2","_overflowsData$filter","_overflowsData$filter2","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","getExpandedPlacements","oppositePlacement","hasFallbackAxisSideDirection","getOppositeAxisPlacements","getSideList","isStart","lr","rl","map","placements","overflows","overflowsData","sides","getAlignmentSides","mainAlignmentSide","nextIndex","nextPlacement","resetPlacement","d","sort","a","b","currentSideAxis","acc","arrowDimensions","isYAxis","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","largestPossiblePadding","minPadding","maxPadding","center","shouldAddOffset","centerOffset","computePosition","Map","mergedOptions","platformWithCache","Popover","popoverId","popoverPosition","popoverGap","popoverAnchor","popoverElement","popoverVisibleClass","popoverContent","popoverIsOpen","tabindex","togglePopover","checkPopoverClick","checkPopoverFocus","debouncedTogglePopover","func","hidePopover","showPopover","role","focusPopover","once","updatePopover","popover","anchor","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","assign","error","moveFocus","getFirstVisible","getLastVisible","isVisible","Select","optGroups","selectId","dropdown","customOptions","allButton","arrowIcon","selectedOptCounter","optionIndex","noSelectText","multiSelectText","nMultiSelect","noUpdateLabel","insetLabel","errorClass","buttonClass","allButtonClass","optionClass","dropdownClass","checkboxClass","labelClass","termClass","detailsClass","selectClass","checkboxLabelClass","checkboxInputClass","initButtonSelect","initListSelect","initAllButton","initCustomSelectEvents","updateAllButton","initSelection","toggleCustomSelect","keyboardCustomSelect","moveFocusToSelectTrigger","checkCustomSelectClick","ariaExpanded","getSelectedOption","placeDropdown","moveUp","vhCalc","allOptions","findIndex","targetOption","toggleAllButton","status","optionsArray","totalOptions","selectOption","updateNativeSelect","getSelectedOptionText","selectedLabel","updateTriggerAria","noSelectionText","customClasses","activeSelectionClass","getSelectLabelSR","optGroupList","optGroupLabel","getOptionsList","uniqueName","createSafeCss","ariaHidden","total","strippedClassname","match","join","invalidBeginningOfClassname","SiteSearch","originalButton","targetElement","searchInput","pressed","showHide","Tabs","showTab","tablistClass","tablistItemClass","tablistLinkClass","tabList","tabItems","allowedKeys","tabLinks","tabPanel","selectedTab","clickTabEvent","clickTab","arrowKeysEvent","arrowKeys","owns","setInitalTab","tabListWrapper","prepend","itemLink","panel","hash","itemElem","enhanceTabLink","enhanceTabPanel","panelElem","selectedLink","switchTabs","elem","clickedTab","clickedTabIndex","selectedTabIndex","scrollIntoView","block","inline","which","linkLength","down","cleanHTML","nodes","doc","parser","DOMParser","parseFromString","script","clean","isPossiblyDangerous","startsWith","childNodes","Toggletip","toggletip","toggletipId","toggletipElement","toggletipContent","toggletipAnchor","toggletipText","toggletipHeading","arrowElement","toggletipIsOpen","toggletipVisibleClass","toggleToggletip","checkToggletipClick","checkToggletipFocus","hideToggletip","showToggletip","createToggletipElement","createToggletip","focusToggletip","updateToggletip","then","arrowX","arrowY","staticSide","Tooltip","tooltip","tooltipElement","tooltipContent","tooltipDelay","screenSize","tooltipTheme","eventArray","listener","showTooltip","hideTooltip","createTooltipElement","range","createRange","setStartBefore","setEndAfter","updateTooltip","UtilityList","share","print","download","copy","shareItems","urlLocation","location","href","copyElement","social","url","getSocialUrl","open","copyToClipboard","params","getSocialParams","newUrl","getTwitterText","paramValue","encodeURI","encodeURIComponent","socialParams","twitText","twitUrl","twitUsername","navigator","clipboard","writeText","copiedMessage","execCommand","originalText","NodeList","prototype","msMatchesSelector","webkitMatchesSelector","initSite","accordions","backTop","breadcrumbs","carousel","closeSearchButton","dialogs","fileUpload","filters","globalAlert","openSearchButton","tabs","utilityList"],"version":3,"file":"about.f31cadf2.js.map"}